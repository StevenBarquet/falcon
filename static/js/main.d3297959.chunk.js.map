{"version":3,"sources":["store/constants.js","store/reducers/async.js","store/reducers/auth.js","store/reducers/tabs.js","store/reducers/spinner.js","store/reducers/avails.js","store/reducers/metadata.js","store/reducers/titles.js","store/reducers/filters.js","store/reducers/index.js","store/reducers/status.js","store/index.js","config/constants.js","utils/localStorageService.js","store/actions/tabs.js","store/actions/auth.js","store/actions/async.js","utils/dal.js","utils/groupFilters.js","store/actions/avails.js","store/actions/metadata.js","store/actions/titles.js","store/actions/filters.js","containers/Login/index.js","components/TabBar/Pane/index.js","containers/Titles/components/TitlesForm/TitlesGrid/configs/columns.js","containers/Titles/components/TitlesForm/TitlesGrid/configs/expandedColumns.js","containers/Titles/components/TitlesForm/TitlesGrid/PaginationControls.js","containers/Titles/components/TitlesForm/TitlesGrid/index.js","containers/Titles/components/TitlesForm/TitlesModal/FiltersDropdown.js","containers/Titles/components/TitlesForm/TitlesModal/QualifiersDropdown.js","containers/Titles/components/TitlesForm/TitlesModal/DynamicSelection.js","components/Modal/index.js","containers/Titles/components/TitlesForm/TitlesModal/index.js","containers/Titles/components/TitlesForm/TitlesGrid/ClientDropdown.js","containers/Titles/components/TitlesForm/index.js","containers/Titles/index.jsx","containers/Deliveries/components/DeliveriesForm/DeliveryModals/JobModal.js","containers/Deliveries/components/DeliveriesForm/DeliveryModals/DeliveriesMenu.js","containers/Deliveries/components/DeliveriesForm/DeliveriesGrid/configs/columns.js","containers/Deliveries/components/DeliveriesForm/DeliveriesGrid/index.js","containers/Deliveries/components/DeliveriesForm/index.js","containers/Deliveries/index.js","containers/Clients/components/ClientsForm/ClientModal/configs/columns.js","containers/Clients/components/ClientsForm/ClientModal/ClientModal.js","containers/Clients/components/ClientsForm/ClientModal/ClientsMenu.js","containers/Clients/components/ClientsForm/ClientsGrid/configs/columns.js","containers/Clients/components/ClientsForm/ClientsGrid/index.js","containers/Clients/components/ClientsForm/index.js","containers/Clients/index.js","containers/DNA/components/DNAForm/DNAGrid/configs/columns.js","containers/DNA/components/DNAForm/DNAGrid/index.js","containers/DNA/components/DNAForm/index.js","containers/DNA/index.js","containers/V2Titles/components/TitlesForm/TitlesGrid/configs/columns.js","containers/V2Titles/components/TitlesForm/TitlesGrid/configs/expandedColumns.js","containers/V2Titles/components/TitlesForm/TitlesGrid/PaginationControls.js","containers/V2Titles/components/TitlesForm/TitlesGrid/index.js","components/Dropdown/FetchingIndicator.js","components/Dropdown/index.js","containers/V2Titles/components/TitlesForm/TitlesModal/FiltersDropdown.js","containers/V2Titles/components/TitlesForm/TitlesModal/QualifiersDropdown.js","containers/V2Titles/components/TitlesForm/TitlesModal/DynamicSelection.js","containers/V2Titles/components/TitlesForm/TitlesModal/index.js","containers/V2Titles/components/TitlesForm/TitlesGrid/ClientDropdown.js","containers/V2Titles/components/TitlesForm/index.js","containers/V2Titles/index.js","components/TabBar/index.js","containers/Home/index.js","store/actions/index.js","components/Header/index.js","components/Spinner/index.js","App.js","index.js"],"names":["SHOW_SPINNER","AVAILS","initialState","sources","schedule","token","undefined","user","error","tab","showSpinner","avails","v2Avails","data","deliveries","deliveryClients","deliveryDetails","deliveryHistory","clientDeliveryDetails","jobDeliveryForm","id","clientName","clientDeliveryName","date","status","type","address","toAddress","ccAddress","bccAddress","format","version","filters","errors","query","reason","apiVersion","clientDeliveryForm","scheduleID","addresses","nextDelivery","toCount","ccCount","bccCount","displayFilters","sendResponse","previousPage","nextPage","jobQuery","jobFilters","doNotAvails","clientNames","activeDelClients","currencies","devices","formats","languages","rightsDescriptions","media","releaseWindows","subclasses","territories","types","selectedActiveDelClient","filterOptions","titles","filterValue","qualifierValue","querySelected","queryValue","queryOptions","filterParam","availableFilters","reducer","combineReducers","auth","state","action","tabs","spinner","async","key","isFetching","_","assign","value","metadata","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","falconEnv","displayEnv","process","REACT_APP_ENVIRONMENT","API_BASE","LOGIN_URL","AVAILS_URL","AVAILS_V2_URL","METADATA_URL","TITLES_URL","CLIENTS_URL","AVAILS_LIST","AVAILS_V2_LIST","DELIVERIES_LIST","DELIVERY_CLIENTS_LIST","DELIVERY_DETAILS","RESEND_DELIVERY","DO_NOT_AVAIL","CANCEL_DO_NOT_AVAIL","DNA_LIST","CLIENT_LIST","CURRENCY_LIST","DEVICES_LIST","FORMATS_LIST","LANGUAGES_LIST","LICENSE_RIGHTS","MEDIA_LIST","RELEASE_WINDOW_LIST","SUBCLASSES_LIST","TERRITORIES_LIST","TYPES_LIST","FILTER_OPTIONS","TITLES_LIST","ACTIVE_DELIVERIES","ENDPOINTS_KEYS","login","clients","rights","releases","availClients","resendDelivery","doNotAvail","cancelDoNotAvail","dnaList","clientToggle","emailUpdate","current_env","LOCAL_STORAGE_KEYS","MAIN_TABS","label","to","MAIN_TABS_V2","localConfig","save","keyPath","newValue","config","fetch","newCfg","localStorage","setItem","JSON","stringify","parse","getItem","getToken","getCurrentUser","changeTab","dispatch","fetchDeliveries","fetchDeliveryClients","fetchDNAList","setAuthToken","setAuthUser","fetchRequest","fetchSuccess","fetchError","handleError","response","Error","statusText","handleSuccess","fetchAvails","axios","post","then","fetchAvailsV2","fetchDeliveryDetails","get","fetchClientHistory","client","deliveryName","sendImmediateDelivery","delivery","sendAdHocDelivery","fetchJobAvails","fetchJobAvailsV2","delete","avail","put","setClientToggles","toggleOnOff","deliveryID","patch","fetchTitles","text","size","groupFilters","modalFilters","finalFilters","forEach","indexFilter","findIndex","element","includes","push","changePage","getState","a","groupedFilters","i","length","qualifier","field","contains","toString","split","excludes","range","gt","moment","equals","gte","lt","lte","search","fetchAvailsDal","nextOffset","nextPageOffset","prevOffset","previousPageOffset","results","updateDisplayFilters","console","log","fetchAvailsV2Dal","clearAvailsSearch","res","payload","message","clientDeliveries","j","fetchJobAvailsDal","prevPageOffset","fetchJobAvailsV2Dal","sendImmediateDeliveryDal","sendAdHocDeliveryDal","runQuery","cancelDoNotAvailDal","title","alid","language","territory","availToRemove","transactionID","licensee","displayName","licenseType","formatProfile","description","doNotAvailDal","updateJobDeliveryForm","Array","isArray","updateClientDeliveryForm","fetchFilterOptions","setSelectedActiveDelClient","fetchTitlesDal","radarGroupId","displayValue","titleInternalAlias","defaultFilter","firstFilter","addFilter","err","updateFilters","clearAllFilters","deleteFilter","index","actualFilters","newFilters","splice","setFilterOption","filterInfo","find","queryFieldName","displayFieldName","setQualifierOption","rowIndex","setQueryValue","values","selectedByUser","item","dataType","newQueryValues","newQueryOptions","map","titleQueryValues","titleQueryOptions","Login","props","useDispatch","useSelector","s","React","useState","username","setUsername","password","setPassword","handleSubmit","e","userLogin","preventDefault","userId","userid","className","style","height","onSubmit","data-testid","loginPageAttrUserField","onChange","target","loginPageAttrPasswordField","loginPageAttrErrorMessage","loginPageAttrLoginButton","disabled","defaultProps","Pane","tabId","children","TabPane","Row","Col","sm","columns","dataIndex","expandedColumns","useStyles","makeStyles","theme","container","justifyContent","paddingLeft","spacing","paddingRight","paginationInfoContainer","display","alignItems","marginTop","marginBottom","PaginationControls","onPrev","onNext","classes","IconButton","onClick","TitlesGrid","titleData","licensor","asset","titleDisplayUnlimited","numAvails","transaction","workType","releaseYear","releaseDate","radarId","any","radarProductId","eidr","titleEIDRURN","handleCancelDoNotAvail","handleDoNotAvail","handleRowClassName","record","Form","md","bordered","expandedRowRender","row","availData","createdDate","term","termName","priceType","priceValue","priceCurrency","code","assetLanguage","country","yesNoAvail","hasOwnProperty","start","tz","end","category","licenseRightsDescription","contractId","contractID","created","unix","whiteSpace","dataSource","scroll","x","rowClassName","pagination","y","FiltersDropdown","onChangeRedux","options","getOptions","defaultValue","initialValue","getInitialValue","QualifiersDropdown","selectedFilter","filterIndex","constraints","isDisabled","DynamicSelection","valueSelected","onChangeOption","multiValues","isMulti","name","classNamePrefix","onInputChange","getOptionLabel","getOptionValue","Input","CModal","autoFocus","modalTestid","closeTestid","open","toggle","onOk","onCancel","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","Button","color","TitlesModal","handleClickOnAddFilter","handleCancel","closeModal","isModalVisible","gutter","xs","lg","CloseCircleFilled","handleClickonSetFilterOption","handleClickQualifierOption","handleClickQueryValue","ClientDropdown","isClearable","isSearchable","UncontrolledTooltip","placement","TitleForm","setIsModalVisible","formatFilters","clientQuery","searchCriteria","info","handleSelectClient","danger","navigate","FormGroup","Titles","JobModal","Panel","Collapse","toHeader","ccHeader","bccHeader","top","visible","isJobModalVisible","cancelButtonProps","width","icon","CheckCircleOutlined","SyncOutlined","spin","CloseCircleOutlined","delMechanism","ghost","header","email","DeliveriesMenu","setIsJobModalVisible","handleViewDetails","params","fetchDeliveryDetailsDal","jobDetails","finished","started","toAddresses","ccAddresses","bccAddresses","cc","bcc","schema","outputName","errorOutputName","failureReason","queryAPIVersion","resendDeliveryDal","defaultSortOrder","filterDropdown","setSelectedKeys","selectedKeys","confirm","placeholder","closeDropdown","onPressEnter","onBlur","filterIcon","SearchOutlined","onFilter","allowClear","clDeliveryName","toLowerCase","render","DeliveriesGrid","deliveryData","timeElapsed","endTime","minutes","diff","seconds","deliveryTime","deliveryType","shape","marginLeft","DeliveriesForm","Deliveries","ClientModal","TextArea","deliveryAddresses","replaceAll","delAddress","handleEditedAddresses","path","job","trim","PATH_JSON","saveEditedAddresses","isClientModalVisible","autoSize","pageSize","hideOnSinglePage","ClientsMenu","setIsClientModalVisible","scheduleDisplay","history","fetchClientHistoryDal","lastDelivery","ClientsGrid","handleClientToggles","deliveryId","setClientTogglesDal","clientData","lastSuccessfulDeliveryDate","scheduleEnabled","checked","checkedChildren","unCheckedChildren","deliveryEnabled","ClientsForm","Clients","DNAGrid","dnaData","emaAvailId","createdBy","dateCreated","DNAForm","DNA","radarID","availType","episodeMetadata","seasonMetadata","seasonEIDRURN","titleSearch","FetchingIndicator","role","aria-hidden","modifiers","setMaxHeight","enabled","order","fn","styles","overflow","maxHeight","background","Dropdown","dropdownContainerTestId","dropdownValueTestId","labelKey","valueKey","setLabel","setOpen","useEffect","lbl","InputGroup","readOnly","InputGroupButtonDropdown","addonType","DropdownToggle","outline","caret","DropdownMenu","DropdownItem","active","val","FormText","V2Titles","TabBar","tabSelected","onTabChange","NavLink","forwardRef","ref","tag","getProps","isPartiallyCurrent","Nav","dataTestID","Home","clientList","Container","fluid","TabContent","activeTab","Header","appName","headerClassName","handleLogout","Spinner","tip","delay","AuthorizedApp","UnauthorizedApp","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d3297959.chunk.js","sourcesContent":["export const SHOW_SPINNER = \"SHOW_SPINNER\";\nexport const CHANGE_TAB = \"CHANGE_TAB\";\n\nexport const FETCH_REQUEST = \"FETCH_REQUEST\";\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\nexport const FETCH_ERROR = \"FETCH_ERROR\";\n\nexport const SET_AUTH_USER = \"SET_USER\";\nexport const SET_AUTH_TOKEN = \"SET_TOKEN\";\nexport const SET_AUTH_ERROR = \"SET_AUTH_ERROR\";\n\nexport const STATUS = \"status\";\nexport const CHANGE_STATUS = \"CHANGE_STATUS\";\nexport const STARTING = \"STARTING\";\nexport const STARTED = \"STARTED\";\n\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const AVAILS = \"AVAILS\";\nexport const V2_AVAILS = \"V2_AVAILS\"\nexport const SET_AVAILS = \"SET_AVAILS\";\nexport const SET_V2_AVAILS = \"SET_V2_AVAILS\";\nexport const DELIVERIES = \"DELIVERIES\";\nexport const SET_DELIVERIES = \"SET_DELIVERIES\";\nexport const DELIVERY_CLIENTS = \"DELIVERY_CLIENTS\";\nexport const SET_DELIVERY_CLIENTS = \"SET_DELIVERY_CLIENTS\";\nexport const DELIVERY_DETAILS = \"DELIVERY_DETAILS\";\nexport const SET_DELIVERY_DETAILS = \"SET_DELIVERY_DETAILS\";\nexport const UPDATE_JOB_DELIVERY_FORM = \"UPDATE_JOB_DELIVERY_FORM\";\nexport const CLIENT_DELIVERY_DETAILS = \"CLIENT_DELIVERY_DETAILS\";\nexport const SET_CLIENT_DELIVERY_DETAILS = \"SET_CLIENT_DELIVERY_DETAILS\";\nexport const UPDATE_CLIENT_DELIVERY_FORM = \"UPDATE_CLIENT_DELIVERY_FORM\";\nexport const DELIVERY_HISTORY = \"DELIVERY_HISTORY\";\nexport const SET_DELIVERY_HISTORY = \"SET_DELIVERY_HISTORY\";\nexport const SEND_DELIVERY = \"SEND_DELIVERY\";\nexport const SET_SEND_DELIVERY = \"SET_SEND_DELIVERY\";\nexport const CLEAR_JOB_DELIVERY_MODAL = \"CLEAR_JOB_DELIVERY_MODAL\";\nexport const CLEAR_CLIENT_DELIVERY_MODAL = \"CLEAR_CLIENT_DELIVERY_MODAL\";\nexport const SET_DISPLAY_FILTERS = \"SET_DISPLAY_FILTERS\";\nexport const SEND_AD_HOC_DELIVERY = \"SEND_AD_HOC_DELIVERY\";\nexport const SET_SEND_AD_HOC_DELIVERY = \"SET_SEND_AD_HOC_DELIVERY\";\nexport const SET_PREVIOUS_PAGE = \"SET_PREVIOUS_PAGE\";\nexport const SET_NEXT_PAGE = \"SET_NEXT_PAGE\";\nexport const SET_JOB_QUERY = \"SET_JOB_QUERY\";\nexport const SET_JOB_FILTERS = \"SET_JOB_FILTERS\";\nexport const CANCEL_DO_NOT_AVAIL = \"CANCEL_DO_NOT_AVAIL\";\nexport const DO_NOT_AVAIL = \"DO_NOT_AVAIL\";\nexport const DO_NOT_AVAIL_LIST = \"DO_NOT_AVAIL_LIST\";\nexport const SET_DO_NOT_AVAIL_LIST = \"SET_DO_NOT_AVAIL_LIST\";\n\n\n\nexport const CLIENT_NAMES = \"CLIENT_NAMES\";\nexport const SET_CLIENT_NAMES = \"SET_CLIENT_NAMES\";\nexport const ACTIVE_DELIVERY_CLIENTS = \"ACTIVE_DELIVERY_CLIENTS\";\nexport const SET_ACTIVE_DELIVERY_CLIENTS = \"SET_ACTIVE_DELIVERY_CLIENTS\";\nexport const SET_ACTIVE_DEL_CLIENT = \"SET_ACTIVE_DEL_CLIENT\";\nexport const CURRENCIES = \"CURRENCIES\";\nexport const SET_CURRENCIES = \"SET_CURRENCIES\";\nexport const DEVICES = \"DEVICES\";\nexport const SET_DEVICES = \"SET_DEVICES\";\nexport const FORMATS = \"FORMATS\";\nexport const SET_FORMATS = \"SET_FORMATS\";\nexport const LANGUAGES = \"LANGUAGES\";\nexport const SET_LANGUAGES = \"SET_LANGUAGES\";\nexport const RIGHTS_DESCRIPTIONS = \"RIGHTS_DESCRIPTIONS\";\nexport const SET_RIGHTS_DESCRIPTIONS = \"SET_RIGHTS_DESCRIPTIONS\";\nexport const MEDIA = \"MEDIA\";\nexport const SET_MEDIA = \"SET_MEDIA\";\nexport const RELEASE_WINDOWS = \"RELEASE_WINDOWS\";\nexport const SET_RELEASE_WINDOWS = \"SET_RELEASE_WINDOWS\";\nexport const SUBCLASSES = \"SUBCLASSES\";\nexport const SET_SUBCLASSES = \"SET_SUBCLASSES\";\nexport const TERRITORIES = \"TERRITORIES\";\nexport const SET_TERRITORIES = \"SET_TERRITORIES\";\nexport const TYPES = \"TYPES\";\nexport const SET_TYPES = \"SET_TYPES\";\nexport const FILTER_OPTIONS = \"FILTER_OPTIONS\";\nexport const SET_FILTER_OPTIONS = \"SET_FILTER_OPTIONS\"\nexport const CLEAR_CLIENT_DELIVERY_HISTORY = \"CLEAR_CLIENT_DELIVERY_HISTORY\";\n\nexport const TITLES = \"TITLES\";\nexport const SET_TITLES = \"SET_TITLES\";\n\nexport const UPDATE_FILTERS = \"UPDATE_FILTERS\";\nexport const ADD_FILTER = \"ADD_FILTER\";\nexport const CLEAR_ALL_FILTERS = \"CLEAR_ALL_FILTERS\";\nexport const SET_AVAILABLE_FILTERS = \"SET_AVAILABLE_FILTERS\";\n\n\n","import {FETCH_REQUEST, FETCH_SUCCESS, FETCH_ERROR} from \"store/constants\";\n\nconst initialState = {\n    sources: {},\n    schedule: {},\n}\n\nexport default function asyncReducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case FETCH_REQUEST:\n        case FETCH_SUCCESS:\n        case FETCH_ERROR:\n            return {\n                ...state,\n                [action.key]: {\n                    isFetching: action.isFetching,\n                    error: action.error\n                }\n            }\n        default:\n            return state;\n    }\n}","import {\n    SET_AUTH_USER,\n    SET_AUTH_ERROR,\n    SET_AUTH_TOKEN\n} from \"store/constants\";\n\nconst initialState = {\n    token: undefined,\n    user: undefined,\n    error: undefined\n};\n\nexport default function authReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_AUTH_TOKEN:\n            return {...state, token: action.token}\n        case SET_AUTH_USER:\n            return {...state, user: action.user}\n        case SET_AUTH_ERROR:\n            return {...state, error: action.error}\n        default:\n            return state;\n    }\n}","import {\n    CHANGE_TAB\n} from \"store/constants\";\n\nconst initialState = {\n    tab: 0\n};\n\nexport default function tabsReducer(state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_TAB: {\n            const {tab} = action;\n            return {\n                ...state,\n                tab\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import {\n    SHOW_SPINNER\n} from 'store/constants';\n\nconst initialState = {\n    showSpinner: false\n}\n\nexport default function spinnerReducer(state = initialState, action) {\n    switch (action.type) {\n        case SHOW_SPINNER: {\n            return {\n                ...state,\n                showSpinner: action.showSpinner\n            };\n        }\n        default:\n            return state;\n    }\n}","import {\n    SET_AVAILS,\n    SET_V2_AVAILS,\n    SET_DELIVERIES,\n    SET_DELIVERY_DETAILS,\n    SET_DELIVERY_CLIENTS,\n    SET_SEND_DELIVERY,\n    SET_PREVIOUS_PAGE,\n    SET_NEXT_PAGE,\n    SET_JOB_QUERY,\n    SET_JOB_FILTERS,\n    UPDATE_JOB_DELIVERY_FORM,\n    SET_CLIENT_DELIVERY_DETAILS,\n    UPDATE_CLIENT_DELIVERY_FORM,\n    SET_DELIVERY_HISTORY,\n    CLEAR_JOB_DELIVERY_MODAL,\n    SET_DISPLAY_FILTERS,\n    SET_SEND_AD_HOC_DELIVERY,\n    CLEAR_CLIENT_DELIVERY_HISTORY,\n    SET_DO_NOT_AVAIL_LIST\n} from 'store/constants';\nimport _ from \"lodash\";\n\nconst initialState = {\n    avails: [],\n    v2Avails: [],\n    data: [],\n    deliveries: [],\n    deliveryClients: [],\n    deliveryDetails: [],\n    deliveryHistory: [],\n    clientDeliveryDetails: [],\n    jobDeliveryForm: {\n        id: \"\",\n        clientName: \"\",\n        clientDeliveryName: \"\",\n        date: \"\",\n        status: \"\",\n        type: \"\",\n        address: \"\",\n        toAddress: [],\n        ccAddress: [],\n        bccAddress: [],\n        format: \"\",\n        version: \"\",\n        filters: [],\n        avails: \"\",\n        errors: \"\",\n        query: [],\n        reason: \"\",\n        apiVersion: \"\"\n    },\n    clientDeliveryForm: {\n        scheduleID: \"\",\n        clientName: \"\",\n        clientDeliveryName: \"\",\n        type: \"\",\n        addresses: [],\n        toAddress: \"\",\n        ccAddress: \"\",\n        bccAddress: \"\",\n        format: \"\",\n        version: \"\",\n        filters: [],\n        schedule: \"\",\n        nextDelivery: \"\",\n        query: [],\n        apiVersion: \"\",\n        toCount: 0,\n        ccCount: 0,\n        bccCount: 0\n    },\n    displayFilters: [],\n    sendResponse: [],\n    previousPage: \"\",\n    nextPage: \"\",\n    jobQuery: [],\n    jobFilters: [],\n    doNotAvails: []\n}\n\nexport default function availsReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_AVAILS: {\n            const {avails} = action;\n            return {...state, avails};\n        }\n        case SET_V2_AVAILS: {\n            const {v2Avails} = action;\n            return {...state, v2Avails};\n        }\n        case SET_DELIVERIES: {\n            const {deliveries} = action;\n            return {...state, deliveries};\n        }\n        case SET_DELIVERY_CLIENTS: {\n            const {deliveryClients} = action;\n            return {...state, deliveryClients};\n        }\n        case SET_DELIVERY_DETAILS: {\n            const {deliveryDetails} = action;\n            return {...state, deliveryDetails};\n        }\n        case SET_CLIENT_DELIVERY_DETAILS: {\n            const {clientDeliveryDetails} = action;\n            return {...state, clientDeliveryDetails};\n        }\n        case SET_DISPLAY_FILTERS: {\n            const {displayFilters} = action;\n            return {...state, displayFilters};\n        }\n        case SET_PREVIOUS_PAGE: {\n            const {previousPage} = action;\n            return {...state, previousPage};\n        }\n        case SET_NEXT_PAGE: {\n            const {nextPage} = action;\n            return {...state, nextPage};\n        }\n        case SET_JOB_QUERY: {\n            const {jobQuery} = action;\n            return {...state, jobQuery};\n        }\n        case SET_JOB_FILTERS: {\n            const {jobFilters} = action;\n            return {...state, jobFilters};\n        }\n        case SET_DO_NOT_AVAIL_LIST: {\n            const {doNotAvails} = action;\n            return {...state, doNotAvails};\n        }\n        case UPDATE_JOB_DELIVERY_FORM:\n            return _.assign({}, state, {\n                jobDeliveryForm: _.assign({}, state.jobDeliveryForm, ...action.value)\n            });\n        case UPDATE_CLIENT_DELIVERY_FORM:\n            return _.assign({}, state, {\n                clientDeliveryForm: _.assign({}, state.clientDeliveryForm, ...action.value)\n            });\n        case SET_DELIVERY_HISTORY: {\n            const {deliveryHistory} = action;\n            return {...state, deliveryHistory};\n        }\n        case SET_SEND_DELIVERY: {\n            const {sendResponse} = action;\n            return {...state, sendResponse};\n        }\n        case SET_SEND_AD_HOC_DELIVERY: {\n            const {sendResponse} = action;\n            return {...state, sendResponse};\n        }\n        case CLEAR_JOB_DELIVERY_MODAL:\n            return _.assign({}, state, {\n                jobDeliveryForm: {...initialState.jobDeliveryForm}\n            });\n        case CLEAR_CLIENT_DELIVERY_HISTORY:\n            return _.assign({}, state, {\n                deliveryHistory: {...initialState.deliveryHistory}\n            });\n        default:\n            return state;\n    }\n}\n","import {\n    SET_CLIENT_NAMES,\n    SET_CURRENCIES,\n    SET_DEVICES,\n    SET_FORMATS,\n    SET_LANGUAGES,\n    SET_RIGHTS_DESCRIPTIONS,\n    SET_MEDIA,\n    SET_RELEASE_WINDOWS,\n    SET_SUBCLASSES,\n    SET_TERRITORIES,\n    SET_TYPES,\n    SET_ACTIVE_DELIVERY_CLIENTS,\n    SET_ACTIVE_DEL_CLIENT,\n    SET_FILTER_OPTIONS\n} from 'store/constants';\nimport _ from \"lodash\";\n\nconst initialState = {\n    clientNames: [],\n    activeDelClients: [],\n    currencies: [],\n    devices: [],\n    formats: [],\n    languages: [],\n    rightsDescriptions: [],\n    media: [],\n    releaseWindows: [],\n    subclasses: [],\n    territories: [],\n    types: [],\n    selectedActiveDelClient: null,\n    filterOptions: [],\n}\n\nexport default function metadataReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_CLIENT_NAMES: {\n            const {clientNames} = action;\n            return {...state, clientNames};\n        }\n        case SET_ACTIVE_DELIVERY_CLIENTS: {\n            const {activeDelClients} = action;\n            return {...state, activeDelClients};\n        }\n        case SET_CURRENCIES: {\n            const {currencies} = action;\n            return {...state, currencies};\n        }\n        case SET_DEVICES: {\n            const {devices} = action;\n            return {...state, devices};\n        }\n        case SET_FORMATS: {\n            const {formats} = action;\n            return {...state, formats};\n        }\n        case SET_LANGUAGES: {\n            const {languages} = action;\n            return {...state, languages};\n        }\n        case SET_RIGHTS_DESCRIPTIONS: {\n            const {rightsDescriptions} = action;\n            return {...state, rightsDescriptions};\n        }\n        case SET_MEDIA: {\n            const {media} = action;\n            return {...state, media};\n        }\n        case SET_RELEASE_WINDOWS: {\n            const {releaseWindows} = action;\n            return {...state, releaseWindows};\n        }\n        case SET_SUBCLASSES: {\n            const {subclasses} = action;\n            return {...state, subclasses};\n        }\n        case SET_TERRITORIES: {\n            const {territories} = action;\n            return {...state, territories};\n        }\n        case SET_TYPES: {\n            const {types} = action;\n            return {...state, types};\n        }\n        case SET_FILTER_OPTIONS: {\n            const {filterOptions} = action;\n            return {...state, filterOptions};\n        }\n        case SET_ACTIVE_DEL_CLIENT: {\n            return _.assign({}, state, {\n                selectedActiveDelClient: action.value\n            });\n        }\n        default:\n            return state;\n    }\n}\n","import {\n    SET_TITLES\n} from 'store/constants';\n\nconst initialState = {\n    titles: []\n}\n\nexport default function titlesReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_TITLES: {\n            const {titles} = action;\n            return {...state, titles};\n        }\n\n        default:\n            return state;\n    }\n}\n","import {\n  UPDATE_FILTERS,\n  ADD_FILTER,\n  CLEAR_ALL_FILTERS,\n  SET_AVAILABLE_FILTERS,\n} from \"store/constants\";\n\nconst initialState = {\n  filters: [\n    {\n      filterValue: \"Client Name\",\n      qualifierValue: \"contains\",\n      querySelected: \"\",\n      queryValue: [],\n      queryOptions: [],\n      filterParam: \"Licensee\",\n    },\n  ],\n  availableFilters: [],\n};\n\nexport default function filtersReducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_FILTERS:\n      return { ...state, filters: [...action.filters] };\n    case ADD_FILTER:\n      return {\n        ...state,\n        filters: [...state.filters, { ...action.filter }],\n      };\n    case CLEAR_ALL_FILTERS:\n      return {\n        ...state,\n        filters: action.filters,\n      };\n    case SET_AVAILABLE_FILTERS:\n      return {\n        ...state,\n        availableFilters: action.availableFilters,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport asyncReducer from \"store/reducers/async\";\nimport authReducer from \"store/reducers/auth\";\nimport tabsReducer from \"store/reducers/tabs\";\nimport spinnerReducer from \"store/reducers/spinner\";\nimport statusReducer from \"store/reducers/status\";\nimport availsReducer from \"store/reducers/avails\";\nimport metadataReducer from \"store/reducers/metadata\";\nimport titlesReducer from \"store/reducers/titles\";\nimport filtersReducer from \"store/reducers/filters\";\n\nconst reducer = combineReducers({\n    auth: authReducer,\n    tabs: tabsReducer,\n    spinner: spinnerReducer,\n    async: asyncReducer,\n    status: statusReducer,\n    avails: availsReducer,\n    metadata: metadataReducer,\n    titles: titlesReducer,\n    filters: filtersReducer,\n});\n\nexport default reducer;\n","import {\n    CHANGE_STATUS\n} from 'store/constants';\n\nconst initialState = \"\"\n\nexport default function statusReducer(state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_STATUS: {\n            return action.status;\n        }\n        default:\n            return state;\n    }\n}","import {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"store/reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","let falconEnv = 'maestrosb';\nlet displayEnv = 'Sandbox';\nif (process.env.REACT_APP_ENVIRONMENT === 'qa') {\n    falconEnv = 'maestroqa';\n    displayEnv = \"QA\";\n}\nif (process.env.REACT_APP_ENVIRONMENT === 'prod') {\n    falconEnv = 'maestro';\n    displayEnv = ''\n}\nlet API_BASE = `https://avails.${falconEnv}.twdc.com`;\n\nexport const LOGIN_URL = `https://edge.us-east-1.aws.hosted.espn.com/uc-pages/uc-pages/v1/pages/login`;\n\nconst AVAILS_URL = `${API_BASE}/v1/avails`;\nconst AVAILS_V2_URL = `${API_BASE}/v2/avails`;\nconst METADATA_URL = `${API_BASE}/v1/metadata`;\nconst TITLES_URL = `${API_BASE}/v1/titles`;\nconst CLIENTS_URL = `${API_BASE}/v1/clients`;\n\n// AVAILS URLS\nexport const AVAILS_LIST = `${AVAILS_URL}/query`;\nexport const AVAILS_V2_LIST = `${AVAILS_V2_URL}/query`;\nexport const DELIVERIES_LIST = `${AVAILS_URL}/deliveries`;\nexport const DELIVERY_CLIENTS_LIST = `${API_BASE}/v1/clients`;\nexport const DELIVERY_DETAILS = `${AVAILS_URL}/deliveries/id`;\nexport const RESEND_DELIVERY = `${AVAILS_URL}/deliveries/resend/id`;\nexport const DO_NOT_AVAIL = `${AVAILS_URL}/dna`;\nexport const CANCEL_DO_NOT_AVAIL = `${AVAILS_URL}/dna/id`;\nexport const DNA_LIST = `${AVAILS_URL}/dna`;\n\n\n// METADATA URLS\nexport const CLIENT_LIST = `${METADATA_URL}/clientNames`;\nexport const CURRENCY_LIST = `${METADATA_URL}/currencies`;\nexport const DEVICES_LIST = `${METADATA_URL}/devices`;\nexport const FORMATS_LIST = `${METADATA_URL}/formats`;\nexport const LANGUAGES_LIST = `${METADATA_URL}/languages`;\nexport const LICENSE_RIGHTS = `${METADATA_URL}/licenseRightsDescriptions`;\nexport const MEDIA_LIST = `${METADATA_URL}/media`;\nexport const RELEASE_WINDOW_LIST = `${METADATA_URL}/releaseWindows`;\nexport const SUBCLASSES_LIST = `${METADATA_URL}/subclasses`;\nexport const TERRITORIES_LIST = `${METADATA_URL}/territories`;\nexport const TYPES_LIST = `${METADATA_URL}/types`;\nexport const FILTER_OPTIONS = `${METADATA_URL}/filters`;\n\n// TITLES URLS\nexport const TITLES_LIST = `${TITLES_URL}/query`;\n\n//DELIVERIES URLS\nexport const DELIVERIES = `${METADATA_URL}/types`;\n\n// CLIENTS URLS\nexport const ACTIVE_DELIVERIES = `${CLIENTS_URL}/activeDeliverySchedules`;\n\n\nexport const ENDPOINTS_KEYS = {\n    login: LOGIN_URL,\n    avails: AVAILS_LIST,\n    v2Avails: AVAILS_V2_LIST,\n    clients: CLIENT_LIST,\n    currencies: CURRENCY_LIST,\n    devices: DEVICES_LIST,\n    formats: FORMATS_LIST,\n    languages: LANGUAGES_LIST,\n    rights: LICENSE_RIGHTS,\n    media: MEDIA_LIST,\n    releases: RELEASE_WINDOW_LIST,\n    subclasses: SUBCLASSES_LIST,\n    territories: TERRITORIES_LIST,\n    types: TYPES_LIST,\n    titles: TITLES_LIST,\n    deliveries: DELIVERIES_LIST,\n    deliveryDetails: DELIVERY_DETAILS,\n    deliveryClients: DELIVERY_CLIENTS_LIST,\n    availClients: ACTIVE_DELIVERIES,\n    filterOptions: FILTER_OPTIONS,\n    resendDelivery: RESEND_DELIVERY,\n    doNotAvail: DO_NOT_AVAIL,\n    cancelDoNotAvail: CANCEL_DO_NOT_AVAIL,\n    dnaList: DNA_LIST,\n    clientToggle: CLIENTS_URL,\n    emailUpdate: DELIVERIES_LIST\n}\n\nexport const current_env = displayEnv;\n\nexport const LOCAL_STORAGE_KEYS = {\n    main: 'me-falcon-ui',\n    activeUser: 'userId',\n    token: 'access-token',\n    env: 'environment'\n};\n\nexport const MAIN_TABS = [\n    {\n        label: \"TITLES/AVAILS\",\n        to: \"titles\"\n    },\n    {\n        label: \"DELIVERY HISTORY\",\n        to: \"deliveries\"\n    },\n    {\n        label: \"CLIENT DELIVERY CONFIGURATION\",\n        to: \"clients\"\n    },\n    {\n        label: \"DO NOT AVAIL\",\n        to: \"dna\"\n    }\n];\n\nexport const MAIN_TABS_V2 = [\n    {\n        label: \"TITLES/AVAILS\",\n        to: \"titles\"\n    },\n    {\n        label: \"DELIVERY HISTORY\",\n        to: \"deliveries\"\n    },\n    {\n        label: \"CLIENT DELIVERY CONFIGURATION\",\n        to: \"clients\"\n    },\n    {\n        label: \"DO NOT AVAIL\",\n        to: \"dna\"\n    },\n    {\n        label: \"V2 TITLES\",\n        to: \"v2\"\n    }\n\n];\n","import {LOCAL_STORAGE_KEYS} from \"config/constants\";\n\nexport const localConfig = () => {\n    function fetch() {\n        let localConfig = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEYS.main) || '{}');\n        localConfig.save = save;\n        return localConfig;\n    }\n\n    /**\n     * @description Saves to localStorage the updated config\n     * @param keyPath\n     * @param newValue\n     */\n    function save(keyPath, newValue) {\n        // let newCfg = this.setIn(keyPath, newValue);\n        const config = localConfig().fetch();\n        let newCfg = {...config, [keyPath]: newValue}\n        localStorage.setItem(\n            LOCAL_STORAGE_KEYS.main,\n            JSON.stringify(newCfg)\n        );\n    }\n\n    return {\n        fetch: fetch\n    };\n};\n\nexport const setToken = (token) => {\n    const config = localConfig().fetch();\n    config.save([LOCAL_STORAGE_KEYS.token], token);\n};\n\nexport const getToken = () => {\n    const config = localConfig().fetch();\n    return config[LOCAL_STORAGE_KEYS.token];\n};\n\nexport const getCurrentUser = () => {\n    const config = localConfig().fetch();\n    return config[LOCAL_STORAGE_KEYS.activeUser];\n};\n\nexport const setCurrentUser = (userId) => {\n    const config = localConfig().fetch();\n    config.save([LOCAL_STORAGE_KEYS.activeUser], userId);\n};\n\n\nexport const resetActiveUser = () => {\n    const config = localConfig().fetch();\n    config.save([LOCAL_STORAGE_KEYS.token], undefined);\n};","import {\n    CHANGE_TAB,\n} from \"store/constants\";\n\nimport {\n    fetchDeliveries,\n    fetchDeliveryClients,\n    fetchDNAList\n} from \"store/actions\";\n\nexport const changeTab = tab => dispatch => {\n\n    if (tab === 1)\n        dispatch(fetchDeliveries());\n\n    if (tab === 2)\n        dispatch(fetchDeliveryClients());\n\n    if (tab === 3)\n        dispatch(fetchDNAList());\n    dispatch({type: CHANGE_TAB, tab});\n};\n\n","import axios from \"axios\";\nimport {LOGIN_URL} from \"config/constants\";\nimport {setToken, setCurrentUser} from \"utils/localStorageService\";\n\nimport {\n    SHOW_SPINNER,\n    SET_AUTH_USER,\n    SET_AUTH_ERROR,\n    SET_AUTH_TOKEN,\n    USER_LOGOUT\n} from \"store/constants\";\n\nexport const login = (userLogin) => async(dispatch) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n\n        const res = await axios.post(LOGIN_URL, userLogin);\n        let auth = res.data;\n\n        if (auth.status === 401) {\n            dispatch({type: SET_AUTH_ERROR, error: 'Unauthorized'})\n            dispatch({type: SHOW_SPINNER, showSpinner: false});\n        } else {\n            setToken(auth.token);\n            setCurrentUser(auth.userid);\n            dispatch({type: SET_AUTH_USER, user: auth.userid});\n            dispatch({type: SET_AUTH_TOKEN, token: auth.token});\n        }\n\n\n    } catch (err) {\n        console.log('err: ', err);\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    dispatch({type: SET_AUTH_USER, user: undefined});\n    dispatch({type: SET_AUTH_TOKEN, token: undefined});\n    dispatch({type: USER_LOGOUT});\n}\n\nexport const setAuthToken = (token) => (dispatch) => {\n    dispatch({type: SET_AUTH_TOKEN, token});\n}\n\nexport const setAuthUser = (user) => (dispatch) => {\n    dispatch({type: SET_AUTH_USER, user})\n}","import {FETCH_REQUEST, FETCH_SUCCESS, FETCH_ERROR} from \"store/constants\";\n\nexport const fetchRequest = (key) => ({\n    type: FETCH_REQUEST,\n    isFetching: true,\n    error: null,\n    key\n});\n\nexport const fetchSuccess = (key) => ({\n    type: FETCH_SUCCESS,\n    isFetching: false,\n    error: null,\n    key\n});\n\nexport const fetchError = (key, error) => ({\n    type: FETCH_ERROR,\n    isFetching: false,\n    error,\n    key\n});\n","import {ENDPOINTS_KEYS} from \"config/constants\";\nimport axios from \"axios\";\n\nfunction handleError(response) {\n    if (!response) {\n        throw new Error(response.statusText);\n    }\n    return response;\n}\n\nfunction handleSuccess(response) {\n    return response;\n}\n\n// AVAILS ENDPOINTS\nexport const fetchAvails = (query) => {\n    return axios.post(`${ENDPOINTS_KEYS.avails}`, query).then(handleError).then(handleSuccess);\n}\n\nexport const fetchAvailsV2 = (query) => {\n    return axios.post(`${ENDPOINTS_KEYS.v2Avails}`, query).then(handleError).then(handleSuccess);\n}\nexport const fetchDeliveryDetails = (id) => {\n    return axios.get(`${ENDPOINTS_KEYS.deliveryDetails}/${id}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchClientDeliveryDetails = (client) => {\n    return axios.get(`${ENDPOINTS_KEYS.deliveryClients}/${client}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchClientHistory = (client, deliveryName) => {\n    return axios.get(`${ENDPOINTS_KEYS.deliveries}/${client}/${deliveryName}?size=5`).then(handleError).then(handleSuccess);\n}\n\nexport const sendImmediateDelivery = (client, delivery) => {\n    return axios.post(`${ENDPOINTS_KEYS.deliveries}/${client}/${delivery}`).then(handleError).then(handleSuccess);\n}\n\nexport const sendAdHocDelivery = (query) => {\n    return axios.post(`${ENDPOINTS_KEYS.deliveries}`, query).then(handleError).then(handleSuccess);\n}\n\nexport const fetchJobAvails = (query) => {\n    return axios.post(`${ENDPOINTS_KEYS.avails}`, query).then(handleError).then(handleSuccess);\n}\n\nexport const fetchJobAvailsV2 = (query) => {\n    return axios.post(`${ENDPOINTS_KEYS.v2Avails}`, query).then(handleError).then(handleSuccess);\n}\n\nexport const resendDelivery = (id) => {\n    return axios.post(`${ENDPOINTS_KEYS.resendDelivery}/${id}`).then(handleError).then(handleSuccess);\n}\n\nexport const cancelDoNotAvail = (id, user) => {\n    return axios.delete(`${ENDPOINTS_KEYS.cancelDoNotAvail}/${id}?deletedBy=${user}`).then(handleError).then(handleSuccess);\n}\n\nexport const doNotAvail = (avail) => {\n    return axios.put(`${ENDPOINTS_KEYS.doNotAvail}`, avail).then(handleError).then(handleSuccess);\n}\n\nexport const fetchDNAList = () => {\n    return axios.get(`${ENDPOINTS_KEYS.dnaList}`).then(handleError).then(handleSuccess);\n}\n\nexport const setClientToggles = (toggleOnOff, clientName, deliveryID) => {\n    return axios.patch(`${ENDPOINTS_KEYS.clientToggle}/${clientName}/${deliveryID}`, toggleOnOff).then(handleError).then(handleSuccess);\n}\n\nexport const saveEditedAddresses = (addresses, clientName, scheduleID) => {\n    return axios.patch(`${ENDPOINTS_KEYS.clientToggle}/${clientName}/${scheduleID}`, addresses).then(handleError).then(handleSuccess);\n}\n\n//CLIENT URLS\nexport const fetchClientByName = (clientName) => {\n    return axios.get(`${ENDPOINTS_KEYS.clients}/${clientName}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchActiveDeliveryClients = () => {\n    return axios.get(`${ENDPOINTS_KEYS.availClients}`).then(handleError).then(handleSuccess);\n}\n\n// METADATA ENDPOINTS\nexport const fetchClientNames = () => {\n    return axios.get(`${ENDPOINTS_KEYS.clients}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchCurrencies = () => {\n    return axios.get(`${ENDPOINTS_KEYS.currencies}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchDevices = () => {\n    return axios.get(`${ENDPOINTS_KEYS.devices}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchFormats = () => {\n    return axios.get(`${ENDPOINTS_KEYS.formats}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchLanguages = () => {\n    return axios.get(`${ENDPOINTS_KEYS.languages}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchRightsDescriptions = () => {\n    return axios.get(`${ENDPOINTS_KEYS.rights}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchMedia = () => {\n    return axios.get(`${ENDPOINTS_KEYS.media}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchReleaseWindows = () => {\n    return axios.get(`${ENDPOINTS_KEYS.releases}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchSubclasses = () => {\n    return axios.get(`${ENDPOINTS_KEYS.subclasses}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchTerritories = () => {\n    return axios.get(`${ENDPOINTS_KEYS.territories}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchTypes = () => {\n    return axios.get(`${ENDPOINTS_KEYS.types}`).then(handleError).then(handleSuccess);\n}\n\nexport const fetchFilterOptions = () => {\n    return axios.get(`${ENDPOINTS_KEYS.filterOptions}`).then(handleError).then(handleSuccess);\n}\n\n// TITLES ENDPOINTS\nexport const fetchTitles = (text, size) => {\n    return axios.get(`${ENDPOINTS_KEYS.titles}?text=${text}&size=${size}`).then(handleError).then(handleSuccess);\n}\n\n\n// DELIVERIES ENDPOINTS\nexport const fetchDeliveries = () => {\n    return axios.get(`${ENDPOINTS_KEYS.deliveries}`).then(handleError).then(handleSuccess);\n}\n\n// DELIVERIE CLIENTS ENDPOINTS\nexport const fetchDeliveryClients = () => {\n    return axios.get(`${ENDPOINTS_KEYS.deliveryClients}`).then(handleError).then(handleSuccess);\n}\n","export const groupFilters = (modalFilters) => {\n  let finalFilters = [];\n  //console.log(\"modalFilters en grouping\", modalFilters);\n\n\n  modalFilters.forEach((filter) => {\n    if (\n      filter.filterValue !== \"\" &&\n      filter.qualifierValue !== \"\" &&\n      filter.queryValue !== \"\"\n    ) {\n      let indexFilter = finalFilters.findIndex(\n        (element) =>\n          element.filterValue === filter.filterValue &&\n          element.qualifierValue === filter.qualifierValue\n      );\n      if (indexFilter >= 0) {\n        if (!finalFilters[indexFilter].queryValue.includes(filter.queryValue[0])) {\n          finalFilters[indexFilter].queryValue = [\n            ...finalFilters[indexFilter].queryValue,\n            ...filter.queryValue,\n          ];\n        }\n      } else {\n        finalFilters.push({ ...filter });\n      }\n    }\n  });\n  //console.log(\"Final result\", finalFilters);\n  return finalFilters;\n};\n","import {fetchRequest, fetchSuccess, fetchError} from \"./async\";\nimport moment from 'moment-timezone';\n\n\nimport {\n    AVAILS,\n    V2_AVAILS,\n    SET_AVAILS,\n    SET_V2_AVAILS,\n    DELIVERIES,\n    SET_DELIVERIES,\n    DELIVERY_CLIENTS,\n    SET_DELIVERY_CLIENTS,\n    DELIVERY_DETAILS,\n    SET_DELIVERY_DETAILS,\n    UPDATE_JOB_DELIVERY_FORM,\n    CLIENT_DELIVERY_DETAILS,\n    SET_CLIENT_DELIVERY_DETAILS,\n    UPDATE_CLIENT_DELIVERY_FORM,\n    DELIVERY_HISTORY,\n    SET_DELIVERY_HISTORY,\n    SHOW_SPINNER,\n    SEND_DELIVERY,\n    SET_SEND_DELIVERY,\n    SEND_AD_HOC_DELIVERY,\n    SET_SEND_AD_HOC_DELIVERY,\n    CLEAR_JOB_DELIVERY_MODAL,\n    CLEAR_CLIENT_DELIVERY_MODAL,\n    SET_PREVIOUS_PAGE,\n    SET_NEXT_PAGE,\n    SET_JOB_QUERY,\n    SET_JOB_FILTERS,\n    CLEAR_CLIENT_DELIVERY_HISTORY,\n    CANCEL_DO_NOT_AVAIL,\n    DO_NOT_AVAIL,\n    DO_NOT_AVAIL_LIST,\n    SET_DO_NOT_AVAIL_LIST\n} from \"store/constants\"\nimport {\n    fetchAvails as fetchAvailsDal,\n    fetchAvailsV2 as fetchAvailsV2Dal,\n    fetchDeliveries as fetchDeliveriesDal,\n    fetchDeliveryDetails as fetchDeliveryDetailsDal,\n    fetchDeliveryClients as fetchDeliveryClientsDal,\n    fetchClientHistory as fetchClientHistoryDal,\n    sendImmediateDelivery as sendImmediateDeliveryDal,\n    sendAdHocDelivery as sendAdHocDeliveryDal,\n    fetchJobAvails as fetchJobAvailsDal,\n    resendDelivery as resendDeliveryDal,\n    cancelDoNotAvail as cancelDoNotAvailDal,\n    doNotAvail as doNotAvailDal,\n    fetchDNAList as fetchDNAListDal,\n    setClientToggles as setClientTogglesDal,\n    fetchJobAvailsV2 as fetchJobAvailsV2Dal,\n    saveEditedAddresses as saveEditedAddressesDal\n} from \"utils/dal\"\nimport {groupFilters} from \"utils/groupFilters\";\nimport {updateDisplayFilters} from \"store/actions\";\n\nexport const fetchAvails = (changePage) => async(dispatch, getState) => {\n\n\n\n    try {\n        const {filters} = getState();\n        let groupedFilters = groupFilters(filters.filters);\n\n        dispatch(fetchRequest(AVAILS));\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n\n\n\n        const query = [];\n\n\n\n        for (let i = 0; i < groupedFilters.length; i++) {\n\n            let qualifier = groupedFilters[i].qualifierValue;\n            if (qualifier === \"contains\") {\n\n                if (groupedFilters[i].filterParam === \"Title\") {\n                    query.push({\n                        field: \"RadarGroupId\",\n                        contains: groupedFilters[i].queryValue.toString().split(\",\")\n\n                    });\n\n                } else {\n                    query.push({\n                        field: groupedFilters[i].filterParam,\n                        contains: groupedFilters[i].queryValue.toString().split(\", \")\n\n                    });\n                }\n\n\n\n            } else if (qualifier === \"excludes\") {\n\n                if (groupedFilters[i].filterParam === \"Title\") {\n                    query.push({\n                        field: \"RadarGroupId\",\n                        excludes: groupedFilters[i].queryValue.toString().split(\",\")\n\n                    });\n\n                } else {\n                    query.push({\n                        field: groupedFilters[i].filterParam,\n                        excludes: groupedFilters[i].queryValue.toString().split(\", \")\n\n                    });\n                }\n            } else if (qualifier === \"gt\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    range: {\n                        gt: groupedFilters[i].queryValue[0].includes(\"RELATIVE\") ? groupedFilters[i].queryValue[0]\n                            : moment(groupedFilters[i].queryValue[0]).format('YYYY-MM-DD'),\n                    }\n                });\n\n            } else if (qualifier === \"equals\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    equals: groupedFilters[i].queryValue.toString().split(\", \")\n\n                });\n\n            }\n            else if (qualifier === \"gte\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    range: {\n                        gte: groupedFilters[i].queryValue[0].includes(\"RELATIVE\") ? groupedFilters[i].queryValue[0]\n                            : moment(groupedFilters[i].queryValue[0]).format('YYYY-MM-DD'),\n                    }\n                });\n\n            }\n            else if (qualifier === \"lt\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    range: {\n                        lt: groupedFilters[i].queryValue[0].includes(\"RELATIVE\") ? groupedFilters[i].queryValue[0]\n                            : moment(groupedFilters[i].queryValue[0]).format('YYYY-MM-DD'),\n\n                    }\n                });\n\n            }\n            else if (qualifier === \"lte\") {\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    range: {\n                        lte: groupedFilters[i].queryValue[0].includes(\"RELATIVE\") ? groupedFilters[i].queryValue[0]\n                            : moment(groupedFilters[i].queryValue[0]).format('YYYY-MM-DD'),\n                    }\n                });\n            }\n        }\n\n        const search = {\n\n            \"pageOffset\": changePage,\n            \"pageSize\": 100,\n            \"query\": {\n                \"searchCriteria\": query\n            }\n\n        };\n\n\n\n        const response = await fetchAvailsDal(search);\n\n        let avails = response.data;\n\n        let nextOffset = response.data.nextPageOffset ? response.data.nextPageOffset : '';\n        let prevOffset = response.data.previousPageOffset ? response.data.previousPageOffset : '';\n\n\n        if (response.data.size > 0)\n            avails = response.data.results.avail\n\n        dispatch(updateDisplayFilters(groupedFilters, true));\n\n\n        dispatch(fetchSuccess(AVAILS));\n        dispatch({type: SET_AVAILS, avails: avails});\n        dispatch({type: SET_NEXT_PAGE, nextPage: nextOffset});\n        dispatch({type: SET_PREVIOUS_PAGE, previousPage: prevOffset});\n        dispatch({type: SET_JOB_QUERY, jobQuery: \"\"});\n        dispatch({type: SET_JOB_FILTERS, jobFilters: \"\"});\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n\n    } catch (err) {\n        console.log('err: ', err);\n        dispatch(fetchError(AVAILS));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n\n};\n\nexport const fetchAvailsV2 = (changePage) => async(dispatch, getState) => {\n\n    try {\n\n\n        const {filters} = getState();\n        let groupedFilters = groupFilters(filters.filters);\n\n        dispatch(fetchRequest(AVAILS));\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n\n\n\n        const query = [];\n\n\n\n        for (let i = 0; i < groupedFilters.length; i++) {\n\n            let qualifier = groupedFilters[i].qualifierValue;\n            if (qualifier === \"contains\") {\n\n                if (groupedFilters[i].filterParam === \"Title\") {\n                    query.push({\n                        field: \"RadarGroupId\",\n                        contains: groupedFilters[i].queryValue.toString().split(\",\")\n\n                    });\n\n                } else {\n                    query.push({\n                        field: groupedFilters[i].filterParam,\n                        contains: groupedFilters[i].queryValue.toString().split(\", \")\n\n                    });\n                }\n\n\n\n            } else if (qualifier === \"excludes\") {\n\n                if (groupedFilters[i].filterParam === \"Title\") {\n                    query.push({\n                        field: \"RadarGroupId\",\n                        excludes: groupedFilters[i].queryValue.toString().split(\",\")\n\n                    });\n\n                } else {\n                    query.push({\n                        field: groupedFilters[i].filterParam,\n                        excludes: groupedFilters[i].queryValue.toString().split(\", \")\n\n                    });\n                }\n            } else if (qualifier === \"gt\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    range: {\n                        gt: groupedFilters[i].queryValue[0].includes(\"RELATIVE\") ? groupedFilters[i].queryValue[0]\n                            : moment(groupedFilters[i].queryValue[0]).format('YYYY-MM-DD'),\n                    }\n                });\n\n            } else if (qualifier === \"equals\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    equals: groupedFilters[i].queryValue.toString().split(\", \")\n\n                });\n\n            }\n            else if (qualifier === \"gte\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    range: {\n                        gte: groupedFilters[i].queryValue[0].includes(\"RELATIVE\") ? groupedFilters[i].queryValue[0]\n                            : moment(groupedFilters[i].queryValue[0]).format('YYYY-MM-DD'),\n                    }\n                });\n\n            }\n            else if (qualifier === \"lt\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    range: {\n                        lt: groupedFilters[i].queryValue[0].includes(\"RELATIVE\") ? groupedFilters[i].queryValue[0]\n                            : moment(groupedFilters[i].queryValue[0]).format('YYYY-MM-DD'),\n\n                    }\n                });\n\n            }\n            else if (qualifier === \"lte\") {\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    range: {\n                        lte: groupedFilters[i].queryValue[0].includes(\"RELATIVE\") ? groupedFilters[i].queryValue[0]\n                            : moment(groupedFilters[i].queryValue[0]).format('YYYY-MM-DD'),\n                    }\n                });\n            }\n        }\n\n        const search = {\n            \"pageOffset\": changePage,\n            \"pageSize\": 50,\n            \"query\": {\n                \"sort\": \"title\",\n                \"searchCriteria\": query\n            }\n\n        };\n\n\n\n        const response = await fetchAvailsV2Dal(search);\n        let avails = response.data;\n\n\n\n        let nextOffset = response.data.nextPageOffset ? response.data.nextPageOffset : '';\n        let prevOffset = response.data.previousPageOffset ? response.data.previousPageOffset : '';\n\n\n\n        if (response.data.size > 0)\n            avails = response.data.results\n\n\n\n\n        dispatch(updateDisplayFilters(groupedFilters, true));\n        \n\n\n\n        dispatch(fetchSuccess(V2_AVAILS));\n        dispatch({type: SET_V2_AVAILS, v2Avails: avails});\n        dispatch({type: SET_NEXT_PAGE, nextPage: nextOffset});\n        dispatch({type: SET_PREVIOUS_PAGE, previousPage: prevOffset});\n        dispatch({type: SET_JOB_QUERY, jobQuery: \"\"});\n        dispatch({type: SET_JOB_FILTERS, jobFilters: \"\"});\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n\n    } catch (err) {\n        console.log('err: ', err);\n        dispatch(fetchError(AVAILS));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n\n};\n\nexport const fetchTitleSearch = (search) => async(dispatch) => {\n\n    try {\n\n        dispatch(fetchRequest(AVAILS));\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n\n        const response = await fetchAvailsDal(search);\n        let avails = response.data;\n\n        if (response.data.size > 0)\n            avails = response.data.results.avail\n\n\n        dispatch(fetchSuccess(AVAILS));\n        dispatch({type: SET_AVAILS, avails: avails});\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n\n    } catch (err) {\n        console.log('err: ', err);\n        dispatch(fetchError(AVAILS));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n\n};\n\n\nexport const clearAvailsSearch = () => async(dispatch, getState) => {\n\n    const search = {\n        \"size\": 0,\n        \"total\": 0,\n        \"results\": {}\n    };\n\n    dispatch(updateDisplayFilters([], false));\n    dispatch({type: SET_AVAILS, avails: search});\n    dispatch({type: SET_V2_AVAILS, v2Avails: search});\n};\n\nexport const fetchDNAList = () => async(dispatch) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n        dispatch(fetchRequest(DO_NOT_AVAIL_LIST));\n\n        const res = await fetchDNAListDal();\n        let payload = res.data;\n\n        dispatch(fetchSuccess(DO_NOT_AVAIL_LIST));\n        dispatch({type: SET_DO_NOT_AVAIL_LIST, doNotAvails: payload});\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    } catch (err) {\n        const error = err.message;\n        dispatch(fetchError(DO_NOT_AVAIL_LIST, error));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n};\n\nexport const fetchDeliveries = () => async(dispatch) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n        dispatch(fetchRequest(DELIVERIES));\n\n        const res = await fetchDeliveriesDal();\n        let payload = res.data;\n\n        dispatch(fetchSuccess(DELIVERIES));\n        dispatch({type: SET_DELIVERIES, deliveries: payload});\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    } catch (err) {\n        const error = err.message;\n        dispatch(fetchError(DELIVERIES, error));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n};\n\nexport const fetchDeliveryClients = () => async(dispatch) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n        dispatch(fetchRequest(DELIVERY_CLIENTS));\n\n        const res = await fetchDeliveryClientsDal();\n        let payload = res.data;\n\n\n        const clients = []\n        for (let i = 0; i < payload.length; ++i) {\n\n            let clientName = payload[i].client\n            let clientDeliveries = payload[i].deliveries\n\n            for (let j = 0; j < clientDeliveries.length; ++j) {\n\n                clients.push({\n                    client: clientName,\n                    deliveries: clientDeliveries[j]\n\n                })\n            }\n        };\n\n        dispatch(fetchSuccess(DELIVERY_CLIENTS));\n        dispatch({type: SET_DELIVERY_CLIENTS, deliveryClients: clients});\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    } catch (err) {\n        const error = err.message;\n        dispatch(fetchError(DELIVERY_CLIENTS, error));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n};\n\n\nexport const fetchDeliveryDetails = (id) => async(dispatch) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n        dispatch(fetchRequest(DELIVERY_DETAILS));\n\n        const res = await fetchDeliveryDetailsDal(id);\n        let jobDetails = res.data;\n\n        var date = jobDetails.finished ? jobDetails.finished : jobDetails.started;\n\n        const filter = [];\n\n\n\n        for (let i = 0; i < jobDetails.query.searchCriteria.length; ++i) {\n\n\n            if (jobDetails.query.searchCriteria[i].contains) {\n\n                var contains = \"\";\n                for (let j = 0; j < jobDetails.query.searchCriteria[i].contains.length; ++j) {\n\n                    if (j === 0)\n                        contains = jobDetails.query.searchCriteria[i].contains[j];\n                    else\n                        contains = contains + \", \" + jobDetails.query.searchCriteria[i].contains[j];\n\n                }\n\n                filter.push({\n                    field: jobDetails.query.searchCriteria[i].field,\n                    value: contains,\n                    qualifier: \"contains\",\n                    info: \"\"\n                });\n            } else if (jobDetails.query.searchCriteria[i].excludes) {\n\n                var excludes = \"\";\n                for (let j = 0; j < jobDetails.query.searchCriteria[i].excludes.length; ++j) {\n\n                    if (j === 0)\n                        excludes = jobDetails.query.searchCriteria[i].excludes[j];\n                    else\n                        excludes = excludes + \", \" + jobDetails.query.searchCriteria[i].excludes[j];\n\n                }\n\n                filter.push({\n                    field: jobDetails.query.searchCriteria[i].field,\n                    value: excludes,\n                    qualifier: \"excludes\",\n                    info: \"NOT\"\n                });\n            } else if (jobDetails.query.searchCriteria[i].range.gt) {\n\n                filter.push({\n                    field: jobDetails.query.searchCriteria[i].field,\n                    value: jobDetails.query.searchCriteria[i].range.gt,\n                    qualifier: \"gt\",\n                    info: \">\"\n                });\n            } else if (jobDetails.query.searchCriteria[i].equals) {\n\n                var equals = \"\";\n                for (let j = 0; j < jobDetails.query.searchCriteria[i].equals.length; ++j) {\n\n                    if (j === 0)\n                        equals = jobDetails.query.searchCriteria[i].equals[j];\n                    else\n                        equals = equals + \", \" + jobDetails.query.searchCriteria[i].equals[j];\n\n                }\n\n                filter.push({\n                    field: jobDetails.query.searchCriteria[i].field,\n                    value: equals,\n                    qualifier: \"equals\",\n                    info: \"\"\n                });\n            } else if (jobDetails.query.searchCriteria[i].range.gte) {\n\n                filter.push({\n                    field: jobDetails.query.searchCriteria[i].field,\n                    value: jobDetails.query.searchCriteria[i].range.gte,\n                    qualifier: \"gte\",\n                    info: \">=\"\n                });\n            } else if (jobDetails.query.searchCriteria[i].range.lt) {\n\n                filter.push({\n                    field: jobDetails.query.searchCriteria[i].field,\n                    value: jobDetails.query.searchCriteria[i].range.lt,\n                    qualifier: \"lt\",\n                    info: \"<\"\n                });\n            } else if (jobDetails.query.searchCriteria[i].range.lte) {\n\n                filter.push({\n                    field: jobDetails.query.searchCriteria[i].field,\n                    value: jobDetails.query.searchCriteria[i].range.lte,\n                    qualifier: \"lte\",\n                    info: \"<=\"\n                });\n            }\n\n        }\n\n\n        let toAddresses = [];\n        let ccAddresses = [];\n        let bccAddresses = [];\n\n        if(jobDetails.hasOwnProperty('deliveryDetails')) {\n            if (jobDetails.deliveryDetails.hasOwnProperty(\"to\"))\n                toAddresses = jobDetails.deliveryDetails.to;\n\n        }\n\n        if(jobDetails.hasOwnProperty('deliveryDetails')){\n            if (jobDetails.deliveryDetails.hasOwnProperty(\"cc\"))\n                ccAddresses = jobDetails.deliveryDetails.cc;\n        }\n\n        if(jobDetails.hasOwnProperty('deliveryDetails')){\n            if (jobDetails.deliveryDetails.hasOwnProperty(\"bcc\"))\n                bccAddresses = jobDetails.deliveryDetails.bcc;\n        }\n\n\n\n        dispatch(updateJobDeliveryForm({\n            id: jobDetails.id,\n            clientName: jobDetails.client,\n            clientDeliveryName: jobDetails.name,\n            date: moment(date).tz(\"America/Los_Angeles\").format('MM/DD/YYYY  h:mm A'),\n            status: jobDetails.status,\n            delMechanism: jobDetails.deliveryDetails.type,\n            toAddress: toAddresses ? toAddresses : \"\",\n            ccAddress: ccAddresses ? ccAddresses : \"None\",\n            bccAddress: bccAddresses ? bccAddresses : \"None\",\n            format: jobDetails.format,\n            version: jobDetails.schema,\n            filters: filter,\n            avails: jobDetails.outputName,\n            errors: jobDetails.errorOutputName,\n            query: jobDetails.query.searchCriteria,\n            reason: jobDetails.failureReason,\n            apiVersion: jobDetails.queryAPIVersion\n\n        }));\n\n\n        // dispatch(updateDisplayFilters(filter, false));\n\n        dispatch(fetchSuccess(DELIVERY_DETAILS));\n        dispatch({type: SET_DELIVERY_DETAILS, deliveryDetails: jobDetails});\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    } catch (err) {\n        const error = err.message;\n        dispatch(fetchError(DELIVERY_DETAILS, error));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n};\n\n\n\nexport const fetchClientDeliveryDetails = (client) => async(dispatch) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n        dispatch(fetchRequest(CLIENT_DELIVERY_DETAILS));\n\n        var date = client.deliveries.nextDelivery ? client.deliveries.nextDelivery : \"\";\n\n        const filter = [];\n\n        for (let i = 0; i < client.deliveries.query.searchCriteria.length; ++i) {\n\n            if (client.deliveries.query.searchCriteria[i].contains) {\n\n                var contains = \"\";\n                for (let j = 0; j < client.deliveries.query.searchCriteria[i].contains.length; ++j) {\n\n                    if (j === 0)\n                        contains = client.deliveries.query.searchCriteria[i].contains[j];\n                    else\n                        contains = contains + \", \" + client.deliveries.query.searchCriteria[i].contains[j];\n\n                }\n                filter.push({\n                    field: client.deliveries.query.searchCriteria[i].field,\n                    value: contains,\n                    qualifier: \"contains\",\n                    info: \"\"\n                });\n            } else if (client.deliveries.query.searchCriteria[i].excludes) {\n\n                var excludes = \"\";\n                for (let j = 0; j < client.deliveries.query.searchCriteria[i].excludes.length; ++j) {\n\n                    if (j === 0)\n                        excludes = client.deliveries.query.searchCriteria[i].excludes[j];\n                    else\n                        excludes = excludes + \", \" + client.deliveries.query.searchCriteria[i].excludes[j];\n\n                }\n\n                filter.push({\n                    field: client.deliveries.query.searchCriteria[i].field,\n                    value: excludes,\n                    qualifier: \"excludes\",\n                    info: \"NOT\"\n                });\n            } else if (client.deliveries.query.searchCriteria[i].range.gt) {\n\n                filter.push({\n                    field: client.deliveries.query.searchCriteria[i].field,\n                    value: client.deliveries.query.searchCriteria[i].range.gt,\n                    qualifier: \"gt\",\n                    info: \">\"\n                });\n            } else if (client.deliveries.query.searchCriteria[i].equals) {\n\n                var equals = \"\";\n                for (let j = 0; j < client.deliveries[0].query.searchCriteria[i].equals.length; ++j) {\n\n                    if (j === 0)\n                        equals = client.deliveries.query.searchCriteria[i].equals[j];\n                    else\n                        equals = equals + \", \" + client.deliveries.query.searchCriteria[i].equals[j];\n\n                }\n\n                filter.push({\n                    field: client.deliveries.query.searchCriteria[i].field,\n                    value: equals,\n                    qualifier: \"equals\",\n                    info: \"\"\n                });\n            } else if (client.deliveries.query.searchCriteria[i].range.gte) {\n\n                filter.push({\n                    field: client.deliveries.query.searchCriteria[i].field,\n                    value: client.deliveries.query.searchCriteria[i].range.gte,\n                    qualifier: \"gte\",\n                    info: \">=\"\n                });\n            } else if (client.deliveries.query.searchCriteria[i].range.lt) {\n\n                filter.push({\n                    field: client.deliveries.query.searchCriteria[i].field,\n                    value: client.deliveries.query.searchCriteria[i].range.lt,\n                    qualifier: \"lt\",\n                    info: \"<\"\n                });\n            } else if (client.deliveries.query.searchCriteria[i].range.lte) {\n\n                filter.push({\n                    field: client.deliveries.query.searchCriteria[i].field,\n                    value: client.deliveries.query.searchCriteria[i].range.lte,\n                    qualifier: \"lte\",\n                    info: \"<=\"\n                });\n            }\n            ;\n        }\n\n        let toCount = 0;\n        let toAddresses = \"\";\n\n        if(client.deliveries.hasOwnProperty('deliveryDetails')) {\n            if (client.deliveries.deliveryDetails.hasOwnProperty(\"to\")) {\n\n                toCount = client.deliveries.deliveryDetails.to.length;\n\n                for (let x = 0; x < client.deliveries.deliveryDetails.to.length; ++x) {\n                    if (x === 0)\n                        toAddresses = client.deliveries.deliveryDetails.to[x].email;\n                    else\n                        toAddresses = toAddresses + \", \" + client.deliveries.deliveryDetails.to[x].email;\n                }\n            }\n\n\n        }\n\n        let ccCount = 0;\n        let ccAddresses = \"\";\n        if(client.deliveries.hasOwnProperty('deliveryDetails')){\n            if (client.deliveries.deliveryDetails.hasOwnProperty(\"cc\")) {\n\n                ccCount = client.deliveries.deliveryDetails.cc.length;\n\n\n                for (let x = 0; x < client.deliveries.deliveryDetails.cc.length; ++x) {\n                    if (x === 0)\n                        ccAddresses = client.deliveries.deliveryDetails.cc[x].email;\n                    else\n                        ccAddresses = ccAddresses + \", \" + client.deliveries.deliveryDetails.cc[x].email;\n                }\n            }\n        }\n\n        let bccCount = 0;\n        let bccAddresses = \"\";\n        if(client.deliveries.hasOwnProperty('deliveryDetails')){\n\n            if (client.deliveries.deliveryDetails.hasOwnProperty(\"bcc\")) {\n\n                bccCount = client.deliveries.deliveryDetails.bcc.length;\n\n                for (let x = 0; x < client.deliveries.deliveryDetails.bcc.length; ++x) {\n                    if (x === 0)\n                        bccAddresses = client.deliveries.deliveryDetails.bcc[x].email;\n                    else\n                        bccAddresses = bccAddresses + \", \" + client.deliveries.deliveryDetails.bcc[x].email;\n                }\n            }\n        }\n\n\n        dispatch(updateClientDeliveryForm({\n            scheduleID: client.deliveries.id,\n            clientName: client.client,\n            clientDeliveryName: client.deliveries.name,\n            type: client.deliveries.deliveryDetails.type,\n            toAddress: toAddresses,\n            ccAddress: ccAddresses,\n            bccAddress: bccAddresses,\n            format: client.deliveries.format,\n            version: client.deliveries.schema,\n            filters: filter,\n            schedule: client.deliveries.scheduleDisplay,\n            nextDelivery: moment(date).tz(\"America/Los_Angeles\").format('MM/DD/YYYY  h:mm A'),\n            history: \"\",\n            query: client.deliveries.query.searchCriteria,\n            apiVersion: client.deliveries.queryAPIVersion,\n            toCount: toCount,\n            ccCount: ccCount,\n            bccCount: bccCount\n        }));\n\n\n\n        //dispatch(updateDisplayFilters(filter, false));\n\n        dispatch(fetchSuccess(CLIENT_DELIVERY_DETAILS));\n        dispatch({type: SET_CLIENT_DELIVERY_DETAILS, clientDeliveryDetails: client});\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    } catch (err) {\n        const error = err.message;\n        dispatch(fetchError(DELIVERY_DETAILS, error));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n};\n\n\nexport const fetchJobAvails = (query, filters, changePage) => async(dispatch) => {\n\n    try {\n\n        dispatch(fetchRequest(AVAILS));\n        dispatch({type: SHOW_SPINNER, showSpinner: true})\n        const search = {\n\n            \"pageOffset\": changePage,\n            \"pageSize\": 25,\n            \"query\": {\n                \"searchCriteria\": query\n            }\n        };\n\n        const response = await fetchJobAvailsDal(search);\n        let avails = response.data;\n\n\n        let nextOffset = response.data.nextPageOffset ? response.data.nextPageOffset : '';\n        let prevOffset = response.data.prevPageOffset ? response.data.prevPageOffset : '';\n\n        if (response.data.size > 0)\n            avails = response.data.results.avail\n\n\n\n        dispatch(fetchSuccess(AVAILS));\n        dispatch({type: SET_AVAILS, avails: avails});\n        dispatch({type: SET_PREVIOUS_PAGE, previousPage: prevOffset});\n        dispatch({type: SET_NEXT_PAGE, nextPage: nextOffset});\n        dispatch({type: SET_JOB_QUERY, jobQuery: query});\n        dispatch({type: SET_JOB_FILTERS, jobFilters: filters});\n        dispatch(updateDisplayFilters(filters, false));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n\n\n    } catch (err) {\n        console.log('err: ', err);\n        dispatch(fetchError(AVAILS));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n\n};\n\nexport const fetchJobAvailsV2 = (query, filters, changePage) => async(dispatch) => {\n\n    try {\n\n        dispatch(fetchRequest(AVAILS));\n        dispatch({type: SHOW_SPINNER, showSpinner: true})\n        const search = {\n\n            \"pageOffset\": changePage,\n            \"pageSize\": 50,\n            \"query\": {\n                \"sort\": \"title\",\n                \"searchCriteria\": query\n            }\n        };\n\n        const response = await fetchJobAvailsV2Dal(search);\n        let avails = response.data;\n\n\n\n\n        let nextOffset = response.data.nextPageOffset ? response.data.nextPageOffset : '';\n        let prevOffset = response.data.prevPageOffset ? response.data.prevPageOffset : '';\n\n\n        if (response.data.size > 0)\n            avails = response.data.results\n\n\n\n\n        dispatch(fetchSuccess(AVAILS));\n        dispatch({type: SET_V2_AVAILS, v2Avails: avails});\n        dispatch({type: SET_PREVIOUS_PAGE, previousPage: prevOffset});\n        dispatch({type: SET_NEXT_PAGE, nextPage: nextOffset});\n        dispatch({type: SET_JOB_QUERY, jobQuery: query});\n        dispatch({type: SET_JOB_FILTERS, jobFilters: filters});\n        dispatch(updateDisplayFilters(filters, false));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n\n\n    } catch (err) {\n        console.log('err: ', err);\n        dispatch(fetchError(AVAILS));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n\n};\n\n\nexport const fetchClientHistory = (client, deliveryName) => async(dispatch) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n        dispatch(fetchRequest(DELIVERY_HISTORY));\n\n        const res = await fetchClientHistoryDal(client, deliveryName);\n        let response = res.data;\n\n        dispatch(fetchSuccess(DELIVERY_HISTORY));\n        dispatch({type: SET_DELIVERY_HISTORY, deliveryHistory: response});\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    } catch (err) {\n        const error = err.message;\n        dispatch(fetchError(DELIVERY_HISTORY, error));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n};\n\nexport const sendImmediateDelivery = (client, delivery) => async(dispatch) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n        dispatch(fetchRequest(SEND_DELIVERY));\n\n        const res = await sendImmediateDeliveryDal(client, delivery);\n        let response = res.data;\n\n        dispatch(fetchDeliveries());\n\n        dispatch(fetchSuccess(SEND_DELIVERY))\n        dispatch({type: SET_SEND_DELIVERY, sendResponse: response});\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    } catch (err) {\n        const error = err.message;\n        dispatch(fetchError(SEND_DELIVERY, error));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n};\n\nexport const resendDelivery = (id) => async(dispatch) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n        dispatch(fetchRequest(SEND_DELIVERY));\n\n        const res = await resendDeliveryDal(id);\n        let response = res.data;\n\n        dispatch(fetchDeliveries());\n\n        dispatch(fetchSuccess(SEND_DELIVERY))\n        dispatch({type: SET_SEND_DELIVERY, sendResponse: response});\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    } catch (err) {\n        const error = err.message;\n        dispatch(fetchError(SEND_DELIVERY, error));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n};\n\nexport const sendAdHocDelivery = () => async(dispatch, getState) => {\n\n    try {\n        const {filters} = getState();\n        let groupedFilters = groupFilters(filters.filters);\n\n        dispatch(fetchRequest(SEND_AD_HOC_DELIVERY));\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n\n\n        const query = [];\n\n        for (let i = 0; i < groupedFilters.length; i++) {\n\n            let qualifier = groupedFilters[i].qualifierValue;\n\n            if (qualifier === \"contains\") {\n\n                if (groupedFilters[i].filterParam === \"Title\") {\n                    query.push({\n                        field: \"RadarGroupId\",\n                        contains: groupedFilters[i].queryValue.toString().split(\",\")\n\n                    });\n\n                } else {\n                    query.push({\n                        field: groupedFilters[i].filterParam,\n                        contains: groupedFilters[i].queryValue.toString().split(\", \")\n\n                    });\n                }\n\n            } else if (qualifier === \"excludes\") {\n\n\n                if (groupedFilters[i].filterParam === \"Title\") {\n                    query.push({\n                        field: \"RadarGroupId\",\n                        excludes: groupedFilters[i].queryValue.toString().split(\",\")\n\n                    });\n\n                } else {\n                    query.push({\n                        field: groupedFilters[i].filterParam,\n                        excludes: groupedFilters[i].queryValue.toString().split(\", \")\n\n                    });\n                }\n\n            } else if (qualifier === \"gt\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    range: {\n                        gt: groupedFilters[i].queryValue[0].includes(\"RELATIVE\") ? groupedFilters[i].queryValue[0]\n                            : moment(groupedFilters[i].queryValue[0]).format('YYYY-MM-DD'),\n                    }\n                });\n\n            } else if (qualifier === \"equals\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    equals: groupedFilters[i].queryValue.toString().split(\", \")\n\n                });\n\n            }\n            else if (qualifier === \"gte\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    range: {\n                        gte:  groupedFilters[i].queryValue[0].includes(\"RELATIVE\") ? groupedFilters[i].queryValue[0]\n                            : moment(groupedFilters[i].queryValue[0]).format('YYYY-MM-DD'),\n                    }\n                });\n\n            }\n            else if (qualifier === \"lt\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    range: {\n                        lt: groupedFilters[i].queryValue[0].includes(\"RELATIVE\") ? groupedFilters[i].queryValue[0]\n                            : moment(groupedFilters[i].queryValue[0]).format('YYYY-MM-DD'),\n\n                    }\n                });\n\n            }\n            else if (qualifier === \"lte\") {\n\n                query.push({\n                    field: groupedFilters[i].filterParam,\n                    range: {\n                        lte: groupedFilters[i].queryValue[0].includes(\"RELATIVE\") ? groupedFilters[i].queryValue[0]\n                            : moment(groupedFilters[i].queryValue[0]).format('YYYY-MM-DD')\n                    }\n                });\n            }\n        }\n\n        const search = {\n            \"query\": {\n                \"searchCriteria\": query\n            },\n            \"format\": \"XLSX\",\n            \"schema\": \"1.7.2\"\n        };\n\n\n        const res = await sendAdHocDeliveryDal(search);\n        let response = res.data;\n\n        dispatch(fetchDeliveries());\n        dispatch(updateDisplayFilters(groupedFilters, true));\n\n        dispatch(fetchSuccess(SEND_AD_HOC_DELIVERY));\n        dispatch({type: SET_SEND_AD_HOC_DELIVERY, sendResponse: response});\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n\n    } catch (err) {\n        console.log('err: ', err);\n        dispatch(fetchError(SEND_AD_HOC_DELIVERY));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n\n};\n\nexport const cancelDoNotAvail = (id, runQuery) => async(dispatch, getState) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n        dispatch(fetchRequest(CANCEL_DO_NOT_AVAIL));\n\n        const {auth} = getState();\n        const {user} = auth;\n\n        await cancelDoNotAvailDal(id, user);\n\n        if (runQuery)\n            dispatch(fetchAvails(\"\"));\n        else\n            dispatch(fetchDNAList());\n\n        dispatch(fetchSuccess(CANCEL_DO_NOT_AVAIL))\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    } catch (err) {\n        const error = err.message;\n        dispatch(fetchError(CANCEL_DO_NOT_AVAIL, error));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n};\n\nexport const doNotAvail = (avail, title, alid, language, territory) => async(dispatch, getState) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n        dispatch(fetchRequest(DO_NOT_AVAIL));\n\n        const {auth} = getState();\n        const {user} = auth;\n\n\n        const availToRemove = {\n            \"emaAvailId\": avail.transactionID,\n            \"alid\": alid,\n            \"client\": avail.licensee.displayName,\n            \"createdBy\": user,\n            \"title\": title,\n            \"media\": avail.licenseType,\n            \"format\": avail.formatProfile.value,\n            \"language\": language ? language.description : \"\",\n            \"territory\": territory ? territory.description: \"\",\n            \"notes\": \"\"\n        };\n\n\n       await doNotAvailDal(availToRemove);\n        dispatch(fetchAvails(\"\"));\n\n        dispatch(fetchSuccess(DO_NOT_AVAIL))\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    } catch (err) {\n        const error = err.message;\n        dispatch(fetchError(DO_NOT_AVAIL, error));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n};\n\nexport const setClientToggles = (toggleOnOff, path, client, deliveryId) => async(dispatch) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n\n\n        const PATH_JSON = [\n            {\n                \"op\": \"replace\",\n                \"path\": path,\n                \"value\": toggleOnOff\n            }\n        ];\n\n        await setClientTogglesDal(PATH_JSON, client, deliveryId);\n        dispatch(fetchDeliveryClients())\n\n    } catch (err) {\n        const error = err.message;\n        dispatch(fetchError(DELIVERY_CLIENTS, error));\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n};\n\nexport const saveEditedAddresses = (path, job) => async(dispatch) => {\n    try {\n        dispatch({type: SHOW_SPINNER, showSpinner: true});\n\n\n        const deliveryAddresses = [];\n\n        if (path === \"/deliveryDetails/to\") {\n            let toAddress = job.toAddress.split(', ');\n            for (let i = 0; i < toAddress.length; i++) {\n                deliveryAddresses.push({\n                    email: toAddress[i].toString().trim()\n                });\n            }\n\n            updateClientDeliveryForm({\n                toCount: deliveryAddresses.length\n            });\n        };\n\n        if (path === \"/deliveryDetails/cc\") {\n            let ccAddress = job.ccAddress.split(', ');\n            for (let i = 0; i < ccAddress.length; i++) {\n                deliveryAddresses.push({\n                    email: ccAddress[i].toString().trim()\n                });\n            }\n        };\n\n        if (path === \"/deliveryDetails/bcc\") {\n            let bccAddress = job.bccAddress.split(', ');\n            for (let i = 0; i < bccAddress.length; i++) {\n                deliveryAddresses.push({\n                    email: bccAddress[i].toString().trim()\n                });\n            }\n        }\n\n        const PATH_JSON = [\n            {\n                \"op\": \"replace\",\n                \"path\": path,\n                \"value\": deliveryAddresses\n            }\n        ];\n\n\n\n\n\n\n        await saveEditedAddressesDal(PATH_JSON, job.clientName, job.scheduleID);\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n\n    } catch (err) {\n        dispatch({type: SHOW_SPINNER, showSpinner: false});\n    }\n};\n\nexport const updateJobDeliveryForm = value => dispatch => {\n    let newValue = [];\n    if (Array.isArray(value)) {\n        newValue = value;\n    } else {\n        newValue.push(value);\n    }\n\n    dispatch({type: UPDATE_JOB_DELIVERY_FORM, value: newValue});\n};\n\nexport const updateClientDeliveryForm = value => dispatch => {\n    let newValue = [];\n    if (Array.isArray(value)) {\n        newValue = value;\n    } else {\n        newValue.push(value);\n    }\n\n    dispatch({type: UPDATE_CLIENT_DELIVERY_FORM, value: newValue});\n};\n\nexport const clearJobDeliveryModal = () => dispatch => {\n    dispatch({type: CLEAR_JOB_DELIVERY_MODAL});\n}\n\nexport const clearClientDeliveryModal = () => dispatch => {\n    dispatch({type: CLEAR_CLIENT_DELIVERY_MODAL});\n}\n\nexport const clearClientDeliveryHistory = () => dispatch => {\n    dispatch({type: CLEAR_CLIENT_DELIVERY_HISTORY});\n}\n\n\n\n\n// export const updateDisplayFilters = (query, selectedByUser) => (dispatch, getState) => {\n//\n//     try {\n//\n//         const {metadata} = getState();\n//         const filter = [];\n//         if (selectedByUser) {\n//             for (let i = 0; i < query.length; ++i) {\n//                 filter.push({\n//                     field: query[i].filterParam,\n//                     value: query[i].queryValue,\n//                     info: query[i].filterParam === \"Excludes\" ? \"NOT\" : \"\"\n//                 });\n//\n//             }\n//         } else {\n//             const replaceClientFilter = query.find(filter => filter.field === \"Licensee\");\n//             if (replaceClientFilter !== undefined) {\n//                 let selectedClient = metadata.clientNames.find(element => element.name === replaceClientFilter.value);\n//                 if (selectedClient !== undefined) {\n//                     dispatch(setQueryValue(selectedClient.id, 0, \"dropdown\", selectedClient.name));\n//                 }\n//             }\n//         }\n//         dispatch({type: SET_DISPLAY_FILTERS, displayFilters: selectedByUser ? filter : query});\n//\n//     } catch (err) {\n//         console.log(\"err: \", err);\n//     }\n// };\n\n\n","import { fetchRequest, fetchSuccess, fetchError } from \"./async\";\nimport {\n  CLIENT_NAMES,\n  SET_CLIENT_NAMES,\n  ACTIVE_DELIVERY_CLIENTS,\n  SET_ACTIVE_DELIVERY_CLIENTS,\n    SET_ACTIVE_DEL_CLIENT,\n  CURRENCIES,\n  SET_CURRENCIES,\n  DEVICES,\n  SET_DEVICES,\n  FORMATS,\n  SET_FORMATS,\n  LANGUAGES,\n  SET_LANGUAGES,\n  RIGHTS_DESCRIPTIONS,\n  SET_RIGHTS_DESCRIPTIONS,\n  MEDIA,\n  SET_MEDIA,\n  RELEASE_WINDOWS,\n  SET_RELEASE_WINDOWS,\n  SUBCLASSES,\n  SET_SUBCLASSES,\n  TERRITORIES,\n  SET_TERRITORIES,\n  TYPES,\n  SET_TYPES,\n  SHOW_SPINNER,\n  FILTER_OPTIONS,\n  SET_FILTER_OPTIONS\n} from \"store/constants\";\nimport {\n  fetchClientNames as fetchClientNamesDal,\n  fetchActiveDeliveryClients as fetchActiveDeliveryClientsDal,\n  fetchCurrencies as fetchCurrenciesDal,\n  fetchDevices as fetchDevicesDal,\n  fetchFormats as fetchFormatsDal,\n  fetchLanguages as fetchLanguagesDal,\n  fetchRightsDescriptions as fetchRightsDescriptionsDal,\n  fetchMedia as fetchMediaDal,\n  fetchReleaseWindows as fetchReleaseWindowsDal,\n  fetchSubclasses as fetchSubclassesDal,\n  fetchTerritories as fetchTerritoriesDal,\n  fetchTypes as fetchTypesDal,\n    fetchFilterOptions as fetchFilterOptionsDal\n} from \"utils/dal\";\n\nexport const fetchClientNames = () => async (dispatch) => {\n  try {\n    dispatch({ type: SHOW_SPINNER, showSpinner: true });\n    dispatch(fetchRequest(CLIENT_NAMES));\n\n    const res = await fetchClientNamesDal();\n    let payload = res.data;\n\n    let clientNames = payload.map((item, index) => ({ name: item, id: index }));\n\n    dispatch(fetchSuccess(CLIENT_NAMES));\n    dispatch({ type: SET_CLIENT_NAMES, clientNames });\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  } catch (err) {\n    const error = err.message;\n    dispatch(fetchError(CLIENT_NAMES, error));\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  }\n};\n\nexport const fetchActiveDeliveryClients = () => async (dispatch) => {\n    try {\n        dispatch({ type: SHOW_SPINNER, showSpinner: true });\n        dispatch(fetchRequest(ACTIVE_DELIVERY_CLIENTS));\n\n        const res = await fetchActiveDeliveryClientsDal();\n        let payload = res.data;\n\n        const clientList = [];\n        for (let i = 0; i < payload.length; i++) {\n\n            clientList.push({\n                id: i + 1,\n                name: payload[i].name,\n                query: payload[i].query\n            });\n        }\n\n        dispatch(fetchSuccess(ACTIVE_DELIVERY_CLIENTS));\n        dispatch({ type: SET_ACTIVE_DELIVERY_CLIENTS, activeDelClients: clientList });\n        dispatch({ type: SHOW_SPINNER, showSpinner: false });\n    } catch (err) {\n        const error = err.message;\n        dispatch(fetchError(ACTIVE_DELIVERY_CLIENTS, error));\n        dispatch({ type: SHOW_SPINNER, showSpinner: false });\n    }\n};\n\n\nexport const fetchCurrencies = () => async (dispatch) => {\n  try {\n    dispatch({ type: SHOW_SPINNER, showSpinner: true });\n    dispatch(fetchRequest(CURRENCIES));\n\n    const res = await fetchCurrenciesDal();\n    let payload = res.data;\n\n    let currencies = payload.map((item, index) => ({ name: item, id: index }));\n\n    dispatch(fetchSuccess(CURRENCIES));\n    dispatch({ type: SET_CURRENCIES, currencies });\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  } catch (err) {\n    const error = err.message;\n    dispatch(fetchError(CURRENCIES, error));\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  }\n};\n\nexport const fetchFilterOptions = () => async (dispatch) => {\n  try {\n    dispatch({ type: SHOW_SPINNER, showSpinner: true });\n    dispatch(fetchRequest(FILTER_OPTIONS));\n\n    const res = await fetchFilterOptionsDal();\n    let payload = res.data;\n\n    dispatch(fetchSuccess(FILTER_OPTIONS));\n    dispatch({ type: SET_FILTER_OPTIONS, filterOptions: payload });\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  } catch (err) {\n    const error = err.message;\n    dispatch(fetchError(FILTER_OPTIONS, error));\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  }\n};\n\nexport const fetchDevices = () => async (dispatch) => {\n  try {\n    dispatch({ type: SHOW_SPINNER, showSpinner: true });\n    dispatch(fetchRequest(DEVICES));\n\n    const res = await fetchDevicesDal();\n    let payload = res.data;\n\n    let devices = payload.map((item, index) => ({ name: item, id: index }));\n\n    dispatch(fetchSuccess(DEVICES));\n    dispatch({ type: SET_DEVICES, devices });\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  } catch (err) {\n    const error = err.message;\n    dispatch(fetchError(DEVICES, error));\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  }\n};\n\nexport const fetchFormats = () => async (dispatch) => {\n  try {\n    dispatch({ type: SHOW_SPINNER, showSpinner: true });\n    dispatch(fetchRequest(FORMATS));\n\n    const res = await fetchFormatsDal();\n\n    let payload = res.data;\n    let formats = payload.map((item, index) => ({ name: item, id: index }));\n\n    dispatch(fetchSuccess(FORMATS));\n    dispatch({ type: SET_FORMATS, formats });\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  } catch (err) {\n    const error = err.message;\n    dispatch(fetchError(FORMATS, error));\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  }\n};\n\nexport const fetchLanguages = () => async (dispatch) => {\n  try {\n    dispatch({ type: SHOW_SPINNER, showSpinner: true });\n    dispatch(fetchRequest(LANGUAGES));\n\n    const res = await fetchLanguagesDal();\n    let payload = res.data;\n\n\n    dispatch(fetchSuccess(LANGUAGES));\n    dispatch({ type: SET_LANGUAGES, languages: payload });\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  } catch (err) {\n    const error = err.message;\n    dispatch(fetchError(LANGUAGES, error));\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  }\n};\n\nexport const fetchRightsDescriptions = () => async (dispatch) => {\n  try {\n    dispatch({ type: SHOW_SPINNER, showSpinner: true });\n    dispatch(fetchRequest(RIGHTS_DESCRIPTIONS));\n\n    const res = await fetchRightsDescriptionsDal();\n    let payload = res.data;\n\n    let rightsDescriptions = payload.map((item, index) => ({\n      name: item,\n      id: index,\n    }));\n\n    dispatch(fetchSuccess(RIGHTS_DESCRIPTIONS));\n    dispatch({ type: SET_RIGHTS_DESCRIPTIONS, rightsDescriptions });\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  } catch (err) {\n    const error = err.message;\n    dispatch(fetchError(RIGHTS_DESCRIPTIONS, error));\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  }\n};\n\nexport const fetchMedia = () => async (dispatch) => {\n  try {\n    dispatch({ type: SHOW_SPINNER, showSpinner: true });\n    dispatch(fetchRequest(MEDIA));\n\n    const res = await fetchMediaDal();\n    let payload = res.data;\n\n    let media = payload.map((item, index) => ({ name: item, id: index }));\n\n    dispatch(fetchSuccess(MEDIA));\n    dispatch({ type: SET_MEDIA, media });\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  } catch (err) {\n    const error = err.message;\n    dispatch(fetchError(MEDIA, error));\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  }\n};\n\nexport const fetchReleaseWindows = () => async (dispatch) => {\n  try {\n    dispatch({ type: SHOW_SPINNER, showSpinner: true });\n    dispatch(fetchRequest(RELEASE_WINDOWS));\n\n    const res = await fetchReleaseWindowsDal();\n    let payload = res.data;\n\n    let releases = payload.map((item, index) => ({ name: item, id: index }));\n\n    dispatch(fetchSuccess(RELEASE_WINDOWS));\n    dispatch({ type: SET_RELEASE_WINDOWS, releases });\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  } catch (err) {\n    const error = err.message;\n    dispatch(fetchError(RELEASE_WINDOWS, error));\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  }\n};\n\nexport const fetchSubclasses = () => async (dispatch) => {\n  try {\n    dispatch({ type: SHOW_SPINNER, showSpinner: true });\n    dispatch(fetchRequest(SUBCLASSES));\n\n    const res = await fetchSubclassesDal();\n\n    let payload = res.data;\n    let subclasses = payload.map((item, index) => ({ name: item, id: index }));\n\n    dispatch(fetchSuccess(SUBCLASSES));\n    dispatch({ type: SET_SUBCLASSES, subclasses });\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  } catch (err) {\n    const error = err.message;\n    dispatch(fetchError(SUBCLASSES, error));\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  }\n};\n\nexport const fetchTerritories = () => async (dispatch) => {\n  try {\n    dispatch({ type: SHOW_SPINNER, showSpinner: true });\n    dispatch(fetchRequest(TERRITORIES));\n\n    const res = await fetchTerritoriesDal();\n\n    let payload = res.data;\n\n    dispatch(fetchSuccess(TERRITORIES));\n    dispatch({ type: SET_TERRITORIES, territories: payload });\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  } catch (err) {\n    const error = err.message;\n    dispatch(fetchError(TERRITORIES, error));\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  }\n};\n\nexport const fetchTypes = () => async (dispatch) => {\n  try {\n    dispatch({ type: SHOW_SPINNER, showSpinner: true });\n    dispatch(fetchRequest(TYPES));\n\n    const res = await fetchTypesDal();\n    let payload = res.data;\n\n    let types = payload.map((item, index) => ({ name: item, id: index }));\n\n    dispatch(fetchSuccess(TYPES));\n    dispatch({ type: SET_TYPES, types });\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  } catch (err) {\n    const error = err.message;\n    dispatch(fetchError(TYPES, error));\n    dispatch({ type: SHOW_SPINNER, showSpinner: false });\n  }\n};\n\nexport const setSelectedActiveDelClient = value => dispatch => {\n  dispatch({type: SET_ACTIVE_DEL_CLIENT, value: value});\n};\n","import {\n    SHOW_SPINNER,\n    TITLES,\n    SET_TITLES\n} from \"store/constants\";\n\nimport {\n    fetchTitles as fetchTitlesDal\n} from \"utils/dal\";\n\nimport {fetchRequest, fetchSuccess, fetchError} from \"./async\";\n\n\n\nexport const fetchTitles = (text) => async(dispatch) => {\n    try {\n\n        dispatch(fetchRequest(TITLES));\n\n        const res = await fetchTitlesDal(text, 20);\n        let payload = res.data.results;\n\n        const titles = [];\n\n        for (let i = 0; i < payload.length; i++) {\n            titles.push({\n                queryValue: payload[i].radarGroupId,\n                displayValue: payload[i].titleInternalAlias,\n            });\n        }\n\n        dispatch(fetchSuccess(TITLES));\n        dispatch({type: SET_TITLES, titles: titles});\n    } catch (err) {\n        dispatch(fetchError(SET_TITLES));\n    }\n};\n\nexport const clearTitles = () => dispatch => {\n    dispatch({type: SET_TITLES, titles: []});\n}\n\n\n","import {\n  ADD_FILTER,\n  UPDATE_FILTERS,\n  CLEAR_ALL_FILTERS,\n  SET_DISPLAY_FILTERS,\n  SET_AVAILABLE_FILTERS,\n} from \"store/constants\";\nimport * as availableFilters from \"config/filters.json\";\n\nconst defaultFilter = {\n  filterValue: \"\",\n  filterParam: \"\",\n  qualifierValue: \"\",\n  queryOptions: [],\n  queryValue: [],\n};\n\nconst firstFilter = {\n  filterValue: \"Client Name\",\n  qualifierValue: \"contains\",\n  queryValue: [],\n  queryOptions: [],\n  filterParam: \"Licensee\",\n};\n\nexport const addFilter = () => (dispatch) => {\n  try {\n    dispatch({ type: ADD_FILTER, filter: defaultFilter });\n  } catch (err) {\n    console.log(\"err: \", err);\n  }\n};\n\nexport const updateFilters = (filters) => (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_FILTERS, filters: filters });\n  } catch (err) {\n    console.log(\"err: \", err);\n  }\n};\n\nexport const clearAllFilters = () => (dispatch) => {\n  try {\n    dispatch({\n      type: CLEAR_ALL_FILTERS,\n      filters: [{ ...firstFilter }],\n    });\n  } catch (err) {\n    console.log(\"err: \", err);\n  }\n};\n\nexport const deleteFilter = (index) => (dispatch, getState) => {\n  try {\n    const { filters } = getState();\n    let actualFilters = filters.filters;\n    if (actualFilters.length - 1 > 0) {\n      let newFilters = [...actualFilters];\n      if (index === 0) {\n        newFilters[0] = defaultFilter;\n      } else if (newFilters[index] !== undefined) {\n        newFilters.splice(index, 1);\n      }\n      dispatch(updateFilters(newFilters));\n    } else {\n      dispatch(updateFilters([{ ...defaultFilter }]));\n    }\n  } catch (err) {\n    console.log(\"err: \", err);\n  }\n};\n\nexport const setFilterOption = (value, index) => (dispatch, getState) => {\n  try {\n    const { filters } = getState();\n    let newFilters = [...filters.filters];\n    let availableFilters = filters.availableFilters;\n    let filterInfo = availableFilters.find(\n      (filter) => filter.queryFieldName === value\n    );\n    if (newFilters[index] !== undefined) {\n      newFilters[index].filterValue = filterInfo?.displayFieldName;\n      newFilters[index].filterParam = filterInfo?.queryFieldName;\n      newFilters[index].queryValue = \"\";\n      newFilters[index].qualifierValue = \"\";\n      newFilters[index].queryOptions = [];\n      dispatch(updateFilters(newFilters));\n    }\n  } catch (err) {\n    console.log(\"err: \", err);\n  }\n};\n\nexport const setQualifierOption = (value, rowIndex) => (dispatch, getState) => {\n  try {\n    const { filters } = getState();\n    let newFilters = [...filters.filters];\n    if (newFilters[rowIndex] !== undefined) {\n      newFilters[rowIndex].qualifierValue = value;\n      dispatch(updateFilters(newFilters));\n    }\n  } catch (err) {\n    console.log(\"err: \", err);\n  }\n};\n\nexport const setQueryValue =\n  (values, rowIndex, type) => (dispatch, getState) => {\n    try {\n      const { filters } = getState();\n      let newFilters = [...filters.filters];\n      if (newFilters[rowIndex] !== undefined) {\n        switch (type) {\n          case \"String\":\n            newFilters[rowIndex].queryOptions = values;\n            newFilters[rowIndex].queryValue = [];\n            values.forEach((value) => {\n              newFilters[rowIndex].queryValue = [\n                ...newFilters[rowIndex].queryValue,\n                value.queryValue,\n              ];\n            });\n            break;\n            case \"TitleSearch\":\n                newFilters[rowIndex].queryOptions = values;\n                newFilters[rowIndex].queryValue = [];\n                values.forEach((value) => {\n                    newFilters[rowIndex].queryValue = [\n                        ...newFilters[rowIndex].queryValue,\n                        value.queryValue,\n                    ];\n                });\n                break;\n          case \"Integer\":\n            newFilters[rowIndex].queryValue = [values];\n            break;\n          default:\n            break;\n        }\n        dispatch(updateFilters(newFilters));\n      }\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n  };\n\nexport const updateDisplayFilters =\n  (query, selectedByUser) => (dispatch, getState) => {\n    try {\n      const { filters } = getState();\n      const availableFilters = filters.availableFilters;\n      const filter = [];\n      if (selectedByUser) {\n        for (let i = 0; i < query.length; ++i) {\n          if (query[i].qualifierValue === \"excludes\") {\n          filter.push({\n            field: query[i].filterParam !== \"Title\" ?  query[i].filterParam : \"RadarGroupId\",\n            value:  \"NOT \" + query[i].queryValue.toString()\n          });\n        } else if (query[i].qualifierValue === \"gt\") {\n            filter.push({\n              field: query[i].filterParam,\n              value: \"> \" + query[i].queryValue.toString()\n            });\n          } else if (query[i].qualifierValue === \"gte\") {\n            filter.push({\n              field: query[i].filterParam,\n              value: \">= \" + query[i].queryValue.toString()\n            });\n          } else if  (query[i].qualifierValue === \"lt\") {\n            filter.push({\n              field: query[i].filterParam,\n              value: \"< \" + query[i].queryValue.toString()\n            });\n\n          } else if  (query[i].qualifierValue === \"lte\") {\n            filter.push({\n              field: query[i].filterParam,\n              value: \"<= \" + query[i].queryValue.toString()\n            });\n          } else {\n            filter.push({\n              field: query[i].filterParam !== \"Title\" ?  query[i].filterParam : \"RadarGroupId\",\n              value: query[i].queryValue.toString()\n            });\n          }\n        }\n      } else {\n        let newFilters = [];\n        query.forEach((item) => {\n          let filterInfo = availableFilters.find(\n            (filter) => filter.queryFieldName === item.field\n          );\n          if (filterInfo !== undefined) {\n            switch (filterInfo.dataType) {\n              case \"String\":\n                let newQueryValues = [...item.value.split(\",\")];\n                let newQueryOptions = newQueryValues.map((value) => {\n                  return { displayValue: value, queryValue: value };\n                });\n                newFilters.push({\n                  filterParam: filterInfo.queryFieldName,\n                  filterValue: filterInfo.displayFieldName,\n                  qualifierValue: item.qualifier,\n                  queryValue: newQueryValues,\n                  queryOptions: newQueryOptions,\n                });\n                break;\n                case \"TitleSearch\":\n                    let titleQueryValues = [...item.value.split(\",\")];\n                    let titleQueryOptions = titleQueryValues.map((value) => {\n                        return { displayValue: value, queryValue: value };\n                    });\n                    newFilters.push({\n                        filterParam: filterInfo.queryFieldName,\n                        filterValue: filterInfo.displayFieldName,\n                        qualifierValue: item.qualifier,\n                        queryValue: titleQueryValues,\n                        queryOptions: titleQueryOptions,\n                    });\n                    break;\n              case \"Integer\":\n                newFilters.push({\n                  filterParam: filterInfo.queryFieldName,\n                  filterValue: filterInfo.displayFieldName,\n                  qualifierValue: item.qualifier,\n                  queryValue: [item.value],\n                  queryOptions: [],\n                });\n                break;\n              default:\n                break;\n            }\n          }\n        });\n        //console.log(\"Final new filters\", newFilters);\n        dispatch(updateFilters(newFilters));\n      }\n      dispatch({\n        type: SET_DISPLAY_FILTERS,\n        displayFilters: selectedByUser ? filter : query,\n      });\n    } catch (err) {\n      console.log(\"err: \", err);\n    }\n  };\nexport const setAvailableFilters = () => (dispatch) => {\n  dispatch({\n    type: SET_AVAILABLE_FILTERS,\n    availableFilters: availableFilters.default.filters,\n  });\n};\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {login} from \"store/actions\";\nimport \"./Login.scss\";\n\nfunction Login(props) {\n    const dispatch = useDispatch();\n    const {error} = useSelector(s => s.auth);\n\n    const [username, setUsername] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(login({username, password}))\n    };\n\n    return (\n        <div className=\"container login\">\n            <div className=\"row justify-content-center align-items-center\" style={{height: \"60vh\"}}>\n                <div className=\"col-4\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <form onSubmit={(e) => handleSubmit(e)}>\n                                <h2>Log in with MyID account</h2>\n                                <div className=\"form-group\">\n                                    <label>\n                                        Username\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        value={username}\n                                        data-testid={props.loginPageAttrUserField}\n                                        onChange={e => setUsername(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Password</label>\n                                    <input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        data-testid={props.loginPageAttrPasswordField}\n                                        onChange={e => setPassword(e.target.value)}\n                                    />\n                                </div>\n                                <span\n                                    className=\"login-error\"\n                                    data-testid={props.loginPageAttrErrorMessage}\n                                >\n                                    {error ? \"Invalid User Name or Password.\" : \"\"}\n                                </span>\n                                <button type=\"submit\" id=\"sendlogin\" className=\"btn_primary\"\n                                        data-testid={props.loginPageAttrLoginButton}\n                                        disabled={!username || !password}>Login\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nLogin.defaultProps = {\n    loginPageAttrUserField: \"loginPage-attr-userField\",\n    loginPageAttrPasswordField: \"loginPage-attr-passwordField\",\n    loginPageAttrErrorMessage: \"loginPage-attr-errorMessage\",\n    loginPageAttrLoginButton: \"loginPage-attr-loginButton\"\n}\n\nLogin.propTypes = {\n    loginPageAttrUserField: PropTypes.string,\n    loginPageAttrPasswordField: PropTypes.string,\n    loginPageAttrErrorMessage: PropTypes.string,\n    loginPageAttrLoginButton: PropTypes.string\n}\n\nexport default Login;\n","import React from \"react\";\nimport {TabPane, Row, Col} from \"reactstrap\";\n\nexport default function Pane({tabId, children}) {\n    return (\n        <TabPane tabId={tabId}>\n            <Row>\n                <Col sm=\"12\">{children}</Col>\n            </Row>\n        </TabPane>\n    );\n}\n","export const columns = [\n    {\n        title: 'Alid',\n        dataIndex: 'id',\n        key: 'id'\n    },\n    {\n        title: 'Licensor',\n        dataIndex: 'licensor',\n        key: 'licensor'\n    },\n    {\n        title: 'Title',\n        dataIndex: 'title',\n        key: 'title'\n    },\n    {\n        title: 'No. Avails',\n        dataIndex: 'numAvails',\n        key: 'numAvails'\n\n    },\n    {\n        title: 'Work Type',\n        dataIndex: 'workType',\n    },\n    {\n        title: 'Release Year',\n        dataIndex: 'releaseYear',\n        key: 'releaseYear'\n    },\n    {\n        title: 'Radar Product ID',\n        dataIndex: 'radarId',\n        key: 'radarId'\n    },\n    {\n        title: 'EIDR',\n        dataIndex: 'eidr',\n        key: 'eidr'\n    }\n];\n","export const expandedColumns = [\n    {\n        title: 'Ema Avail ID',\n        dataIndex: 'id',\n        key: 'id'\n\n    },\n    {\n        title: 'Start',\n        dataIndex: 'start',\n        key: 'start'\n    },\n    {\n        title: 'End',\n        dataIndex: 'end',\n        key: 'end'\n    },\n    {\n        title: 'Language',\n        dataIndex: 'language',\n        key: 'language'\n    },\n    {\n        title: 'Media',\n        dataIndex: 'media',\n        key: 'media',\n    },\n    {\n        title: 'Category',\n        dataIndex: 'category',\n        key: 'category'\n    },\n    {\n        title: 'Format',\n        dataIndex: 'format',\n        key: 'format',\n    },\n    {\n        title: 'Territory',\n        dataIndex: 'territory',\n        key: 'territory',\n    },\n    {\n        title: 'Client Name',\n        dataIndex: 'clientName',\n        key: 'clientName',\n    },\n    {\n        title: 'Contract ID',\n        dataIndex: 'contractId',\n        key: 'contractId'\n    },\n    {\n        title: 'Price Type',\n        dataIndex: 'priceType',\n        key: 'priceType',\n    },\n    {\n        title: 'Price Value',\n        dataIndex: 'priceValue',\n        key: 'priceValue'\n    },\n    {\n        title: 'Currency',\n        dataIndex: 'priceCurrency',\n        key: 'priceCurrency'\n    },\n    {\n        title: 'Created',\n        dataIndex: 'created',\n        key: 'created'\n    },\n    {\n        title: 'Description',\n        dataIndex: 'description',\n        key: 'description'\n    },\n    {\n        title: 'Action',\n        dataIndex: 'action',\n        key: 'action'\n    }\n];\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport ArrowForward from '@material-ui/icons/ArrowForward'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: '75px',\n        justifyContent: \"center\",\n        paddingLeft: theme.spacing(0),\n        paddingRight: theme.spacing(2)\n    },\n    paginationInfoContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n\n    }\n\n}))\n\n\nconst PaginationControls = ({  onPrev, onNext }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.paginationInfoContainer}>\n                <div>\n                    <IconButton className=\"arrowButton\" size=\"medium\" onClick={onPrev} >\n                       <ArrowBack />\n                    </IconButton>\n                    <IconButton size=\"medium\" onClick={onNext} >\n                        <ArrowForward />\n                    </IconButton>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PaginationControls\n","import React from \"react\";\nimport {Form, Row, Col} from \"reactstrap\";\nimport _ from \"lodash\";\nimport moment from 'moment-timezone';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Table} from 'ant-table-extensions';\nimport 'antd/dist/antd.css';\nimport { Button } from 'antd';\nimport {columns}  from './configs/columns';\nimport {expandedColumns}  from './configs/expandedColumns'\nimport PaginationControls from \"./PaginationControls\";\n\nimport {\n    fetchAvails,\n    fetchJobAvails,\n    cancelDoNotAvail,\n    doNotAvail\n} from \"store/actions\";\n\n\nfunction TitlesGrid() {\n\n    const dispatch = useDispatch();\n    const {avails, nextPage, previousPage, jobQuery, jobFilters} = useSelector((s) => s.avails);\n    const {languages, territories} = useSelector((s) => s.metadata);\n\n    const expandedRowRender = (row) => {\n\n        const availData = [];\n\n        if (avails.length > 0 && avails[row.key].transaction) {\n            for (let j = 0; j < avails[row.key].transaction.length; ++j) {\n\n                 const createdDate = _.find(avails[row.key].transaction[j].term, item => ( item.termName === 'CreateDate'));\n                 const priceType = _.find(avails[row.key].transaction[j].term, item => ( item.termName === 'PriceType'));\n                 const priceValue = _.find(avails[row.key].transaction[j].term, item => ( item.termName === 'PriceValue'));\n                 const priceCurrency = _.find(avails[row.key].transaction[j].term, item => ( item.termName === 'PriceCurrency'));\n                const doNotAvail = _.find(avails[row.key].transaction[j].term, item => ( item.termName === 'DO_NOT_AVAIL'));\n                 const language = _.find(languages, item => ( item.code === avails[row.key].transaction[j].assetLanguage[0].value))\n                     || { \"description\": avails[row.key].transaction[j].assetLanguage[0].value };\n\n                const territory = _.find(territories, item => ( item.code === avails[row.key].transaction[j].territory[0].country))\n                    || { \"description\":  avails[row.key].transaction[j].territory[0].country };\n                const yesNoAvail = doNotAvail ? doNotAvail.text : 'No';\n\n               let description = \"\";\n                if(avails[row.key].transaction[j].hasOwnProperty('description'))\n                    description =  avails[row.key].transaction[j].description;\n\n\n                availData.push({\n                    key: j,\n                    id: avails[row.key].transaction[j].transactionID,\n                    start: moment(avails[row.key].transaction[j].start).tz(\"America/Los_Angeles\").format('MM/DD/YYYY'),\n                    end: moment(avails[row.key].transaction[j].end).tz(\"America/Los_Angeles\").format('MM/DD/YYYY'),\n                    language: language.description,\n                    media: avails[row.key].transaction[j].licenseType,\n                    category: avails[row.key].transaction[j].licenseRightsDescription,\n                    format: avails[row.key].transaction[j].formatProfile.value,\n                    territory: territory.description,\n                    clientName: avails[row.key].transaction[j].licensee.displayName,\n                    contractId: avails[row.key].transaction[j].contractID,\n                    priceType: priceType? priceType.text : '',\n                    priceValue: priceValue? priceValue.text : '',\n                    priceCurrency: priceCurrency ? priceCurrency.text : '',\n                    created: moment.unix(createdDate.text / 1000).format('MM/DD/YYYY h:mm a'),\n                    doNotAvail: yesNoAvail,\n                    title: avails[row.key].asset[0].metadata.titleDisplayUnlimited[0].value,\n                    description: description,\n                    action:\n                        <div>\n                            { yesNoAvail === \"Yes\" ?\n                                <Button\n                                    style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                                    type=\"link\"\n                                    onClick={() => {\n                                        handleCancelDoNotAvail(avails[row.key].transaction[j]);\n                                    }}\n                                    size=\"small\">\n                                    Cancel\n                                </Button> :\n                                <Button\n                                    style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                                    type=\"link\"\n                                    onClick={() => {\n                                        handleDoNotAvail(avails[row.key].transaction[j],\n                                        avails[row.key].asset[0].metadata.titleDisplayUnlimited[0].value,\n                                        avails[row.key].alid, language, territory);\n                                    }}\n                                    size=\"small\">\n                                    Do Not Avail\n                                </Button>\n                            }\n                        </div>\n\n\n                });\n            }\n        }\n        return (\n            <div className=\"internal-data-grid-container\">\n                <Table\n                    columns={expandedColumns}\n                    dataSource={availData}\n                    bordered\n                    scroll={{ x: 1000}}\n                    rowClassName={record => handleRowClassName(record)}\n                />\n            </div> )\n    };\n\n\n    const titleData = [];\n    for (let i = 0; i < avails.length; i++) {\n\n\n\n\n        titleData.push({\n            key: i,\n            id: avails[i].alid,\n            licensor: avails[i].licensor.displayName,\n            title: avails[i].asset[0].metadata.titleDisplayUnlimited[0].value,\n            numAvails: avails[i].transaction ? avails[i].transaction.length : 0,\n            workType: avails[i].asset[0].workType,\n            releaseYear: avails[i].asset[0].metadata.releaseDate,\n            radarId: avails[i].asset[0].any[0].radarProductId,\n            eidr: avails[i].asset[0].metadata.titleEIDRURN\n\n        });\n    }\n\n\n    const handleNextPage = () => {\n        if (jobQuery) {\n            dispatch(fetchJobAvails(jobQuery, jobFilters, nextPage));\n        } else {\n            dispatch(fetchAvails(nextPage));\n        }\n\n    };\n\n    const handlePreviousPage = () => {\n        if (jobQuery) {\n            dispatch(fetchJobAvails(jobQuery, jobFilters, previousPage));\n        } else {\n            dispatch(fetchAvails(previousPage));\n        }\n    };\n\n    const handleCancelDoNotAvail = (avail) => {\n        dispatch(cancelDoNotAvail(avail.transactionID, true));\n    }\n\n    const handleDoNotAvail = (avail, title, alid, language, territory) => {\n        dispatch(doNotAvail(avail, title, alid, language, territory));\n    }\n\n    const handleRowClassName = (record) => {\n\n        if (record.doNotAvail === 'Yes')\n            return 'table-row-dark';\n        else\n            return 'table-row-light';\n\n      }\n\n    return (\n        <Form>\n            <Row>\n                <Col md={12}>\n\n                    <div className=\"data-grid-container\">\n                        <Table\n                            columns={columns}\n                            bordered\n                            expandedRowRender={record => expandedRowRender(record)}\n                            dataSource={titleData}\n                            pagination={false}\n                            scroll={{ y: 600}}\n                        />\n                    </div>\n                    <PaginationControls\n                        onPrev={() => handlePreviousPage()}\n                        onNext={() => handleNextPage()}\n                    />\n\n                </Col>\n            </Row>\n        </Form>\n\n    );\n}\n\nexport default TitlesGrid;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport { useSelector } from \"react-redux\";\n\nexport default function FiltersDropdown({ onChange: onChangeRedux, value }) {\n  const { availableFilters } = useSelector((s) => s.filters);\n\n  const getOptions = () => {\n      try {\n        const areFilters = availableFilters && typeof availableFilters === \"object\" && availableFilters.length;\n        const optionsArray = areFilters\n            ? availableFilters.map((filters) => ({\n                value: filters.queryFieldName,\n                label: filters.displayFieldName,\n                }))\n            : [];\n        return optionsArray\n    } catch (error) {\n        console.log(\"error: \", error);\n      return [];\n    }\n\n  }\n\n  const getInitialValue = () => {\n    try {\n      const initialValue = availableFilters.find(\n        (filter) => filter.queryFieldName === value\n      );\n      return {\n        value: initialValue.queryFieldName,\n        label: initialValue.displayFieldName,\n      };\n    } catch (err) {\n      console.log(\"err: \", err);\n      return undefined;\n    }\n  };\n\n  const onChange = (target) => {\n    try {\n      onChangeRedux(target.value)\n    } catch (err) {\n        console.log(\"err: \", err);\n    }\n  }\n\n  return (\n    <Select\n      options={getOptions()}\n      defaultValue={getInitialValue()}\n      onChange={onChange}\n    />\n  );\n}\n","import React from \"react\";\nimport Select from \"react-select\";\nimport { useSelector } from \"react-redux\";\n\nexport default function QualifiersDropdown({onChange: onChangeRedux, value, selectedFilter}) {\n\n    const { availableFilters } = useSelector((s) => s.filters);\n\n    const getOptions = () => {\n        try {\n            const filterIndex = availableFilters.findIndex(filter => filter.queryFieldName === selectedFilter);\n            const constraints = availableFilters[filterIndex]?.constraints ?? [];\n            const formatedConstrains = constraints.map( data => ({\n                value: data.queryValue,\n                label: data.displayValue,\n            })) \n            return formatedConstrains\n        } catch (error) {\n            console.log(\"error: \", error);\n            return [];\n        }\n        \n    }\n    \n    const onChange = (target) => {\n        try {\n            onChangeRedux(target.value)\n        } catch (err) {\n            console.log(\"err: \", err);\n        }\n    }\n    \n    const options = getOptions();\n    return (\n        <Select\n            options={options}\n            isDisabled={options && !options.length}\n            onChange={onChange}\n      />\n    );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Input } from \"reactstrap\";\nimport Select from 'react-select';\nimport {\n    fetchTitles,\n    clearTitles\n} from \"store/actions\";\n\n\nfunction DynamicSelection(props) {\n\n    const dispatch = useDispatch();\n\n    const { availableFilters } = useSelector((s) => s.filters);\n    const { titles } = useSelector((s) => s.titles);\n    const filterIndex = availableFilters.findIndex(filter => filter.queryFieldName === props.selectedFilter);\n    const dataType = availableFilters[filterIndex]?.dataType ?? \"\";\n    const options = availableFilters[filterIndex]?.options ?? [];\n    let valueSelected = \"\";\n\n    const onTitleOptionChange = (e) => {\n        if (e !=='' && e.length % 3 === 0 )\n            dispatch(fetchTitles(e));\n    }\n\n    const onChangeOption = (e) => {\n        props.onChange(\n            e,\n            dataType\n        );\n\n        dispatch(clearTitles());\n\n    }\n\n    switch (dataType) {\n        case \"TitleSearch\":\n            valueSelected = props.multiValues;\n            return (\n                <Select\n                    isMulti\n                    name=\"filterValue\"\n                    options={titles}\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                    onInputChange={onTitleOptionChange}\n                    onChange={onChangeOption}\n                    value={valueSelected}\n                    getOptionLabel={(data) => {\n                        return data[\"displayValue\"];\n                      }}\n                    getOptionValue={(data) => {\n                    return data[\"queryValue\"];\n                    }}\n                />\n            );\n        case \"String\":\n            valueSelected = props.multiValues;\n            return (\n                <Select\n                    isMulti\n                    name=\"filterValue\"\n                    options={options}\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                    onChange={onChangeOption}\n                    value={valueSelected}\n                    getOptionLabel={(data) => {\n                        return data[\"displayValue\"];\n                      }}\n                    getOptionValue={(data) => {\n                    return data[\"queryValue\"];\n                    }}\n                />\n            );\n        case \"Integer\":\n            valueSelected = props.value.length > 0 ? props.value[0] : \"\";\n            return (\n                <Input\n                    value={valueSelected}\n                    onChange={(e) =>\n                        props.onChange(\n                            e.target.value,\n                            dataType,\n                        )\n                    }\n                />\n            );\n        default:\n            valueSelected = props.multiValues;\n            return (\n                <Select\n                    isDisabled\n                    options={[]}\n                />\n            );\n    }\n}\n\nexport default DynamicSelection;\n","import React from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport \"./Modal.scss\";\n\nexport default function CModal({\n  autoFocus,\n  children,\n  closeTestid,\n  modalTestid,\n  open,\n  size,\n  title,\n  toggle,\n  onOk,\n  onCancel,\n}) {\n  /*   const closeBtn = (\n    <i\n      className=\"material-icons\"\n      onClick={() => toggle()}\n      data-testid={closeTestid}\n    >\n      cancel\n    </i>\n  ); */\n  return (\n    <Modal\n      autoFocus={autoFocus}\n      data-testid={modalTestid}\n      isOpen={open}\n      toggle={() => toggle()}\n      size={size ? size : \"lg\"}\n    >\n      <ModalHeader toggle={toggle}>{title}</ModalHeader>\n      <ModalBody>{children}</ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" onClick={onCancel}>\n          Cancel\n        </Button>{\" \"}\n        <Button color=\"primary\" onClick={onOk}>\n          Apply\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"antd\";\nimport FiltersDropdown from \"./FiltersDropdown\";\nimport QualifiersDropdown from \"./QualifiersDropdown\";\nimport DynamicSelection from \"./DynamicSelection\";\nimport { CloseCircleFilled } from \"@ant-design/icons\";\nimport { Row, Col } from \"antd\";\nimport Modal from \"components/Modal\";\nimport \"./TitlesModal.scss\";\nimport {\n    fetchAvails,\n    clearAvailsSearch,\n    addFilter,\n    clearAllFilters,\n    deleteFilter,\n    setFilterOption,\n    setQualifierOption,\n    setQueryValue,\n    setSelectedActiveDelClient\n} from \"store/actions\";\n\nfunction TitlesModal(props) {\n    const dispatch = useDispatch();\n    const { filters } = useSelector((s) => s.filters);\n\n    const handleClickOnAddFilter = async () => {\n        dispatch(addFilter());\n    };\n\n    const handleClickOnClearAllFilters = () => {\n        dispatch(clearAvailsSearch());\n        dispatch(clearAllFilters());\n    };\n\n    const handleClickOnDeleteFilter = (index) => {\n        dispatch(deleteFilter(index));\n    };\n\n    const handleClickonSetFilterOption = (value, index) => {\n        dispatch(setFilterOption(value, index));\n    };\n\n    const handleClickQualifierOption = (value, rowIndex) => {\n        dispatch(setQualifierOption(value, rowIndex));\n    };\n\n    const handleClickQueryValue = (values, rowIndex, type) => {\n        dispatch(setQueryValue(values, rowIndex, type));\n    };\n\n    const handleOk = () => {\n        dispatch(setSelectedActiveDelClient(null));\n        dispatch(fetchAvails(\"\"));\n        props.closeModal();\n    };\n\n    const handleCancel = () => {\n        props.closeModal();\n    };\n\n    return (\n        <Modal\n            title=\"Filter Options\"\n            open={props.isModalVisible}\n            onOk={handleOk}\n            onCancel={handleCancel}\n            toggle={handleCancel}\n        >\n            <div className=\"filtersModal\">\n                <div className=\"filtersModal__clearAll\">\n                    <Button onClick={handleClickOnClearAllFilters} type=\"text\">\n                        Clear all\n                    </Button>\n                </div>\n\n                {filters.map((item, rowIndex) => {\n                    return (\n                        <Row\n                            key={rowIndex}\n                            className=\"filtersModal__Row\"\n                            gutter={[8, 16]}\n                        >\n                            <Col xs={24} md={1} lg={1}>\n                                <div\n                                    className=\"closeIcon\"\n                                    onClick={() => {\n                                        handleClickOnDeleteFilter(rowIndex);\n                                    }}\n                                >\n                                    <CloseCircleFilled />\n                                </div>\n                            </Col>\n                            <Col xs={24} md={7} lg={11}>\n                                <FiltersDropdown\n                                    value={item.filterParam}\n                                    onChange={(value) =>\n                                        handleClickonSetFilterOption(\n                                            value,\n                                            rowIndex\n                                        )\n                                    }\n                                />\n                            </Col>\n                            <Col xs={24} md={8} lg={4}>\n                                <QualifiersDropdown\n                                    selectedFilter={item.filterParam}\n                                    value={item.qualifierValue}\n                                    onChange={(value) =>\n                                        handleClickQualifierOption(value, rowIndex)\n                                    }\n                                />\n                            </Col>\n                            <Col xs={24} md={8} lg={8}>\n                                <DynamicSelection\n                                    selectedFilter={item.filterParam}\n                                    multiValues={item.queryOptions}\n                                    value={item.queryValue}\n                                    onChange={(values,dataType)=> handleClickQueryValue(values, rowIndex, dataType)}\n                                />\n                            </Col>\n                        </Row>\n                    );\n                })}\n                <div className=\"filtersModal__divButton\">\n                    <Button\n                        onClick={handleClickOnAddFilter}\n                        type=\"primary\"\n                        size=\"small\"\n                    >\n                        Add Rule\n                    </Button>\n                </div>\n            </div>\n        </Modal>\n    );\n}\n\nexport default TitlesModal;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport { UncontrolledTooltip } from \"reactstrap\";\nimport { useSelector } from \"react-redux\";\nimport \"./ClientDropdown.scss\";\nexport default function ClientDropdown({ onChange, value, disabled }) {\n  const { activeDelClients } = useSelector((s) => s.metadata);\n  const onChangeOption = (e) => {\n    onChange(e);\n  };\n  return (\n    <>\n      <Select\n        id=\"SelectContainer\"\n        className=\"clientDropdown-container\"\n        classNamePrefix=\"clientDropdown\"\n        isClearable\n        isSearchable\n        onChange={onChangeOption}\n        name=\"clientDropdown\"\n        value={value}\n        isDisabled={disabled}\n        options={activeDelClients}\n        getOptionLabel={(data) => {\n          return data[\"name\"];\n        }}\n        getOptionValue={(data) => {\n          return data[\"id\"];\n        }}\n      />\n      {value ? <UncontrolledTooltip\n        placement=\"top\"\n        target=\"SelectContainer\"\n      >\n        {value.name}\n      </UncontrolledTooltip> : null}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Row, Col, FormGroup } from \"reactstrap\";\nimport TitlesGrid from \"./TitlesGrid\";\nimport { Button, Tag } from \"antd\";\nimport TitlesModal from \"./TitlesModal\";\nimport ClientDropdown from \"./TitlesGrid/ClientDropdown\";\nimport { firstFilter } from \"./Config\";\nimport {\n    clearAvailsSearch,\n    clearAllFilters,\n    sendAdHocDelivery,\n    setSelectedActiveDelClient,\n    fetchJobAvails,\n    fetchFilterOptions\n} from \"store/actions\";\nimport \"./TitlesForm.scss\";\n\nexport default function TitleForm() {\n    const { displayFilters } = useSelector((s) => s.avails);\n    const { selectedActiveDelClient } = useSelector((s) => s.metadata);\n    const dispatch = useDispatch();\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const showModal = () => {\n        dispatch(fetchFilterOptions());\n        setIsModalVisible(true);\n    };\n\n    const closeModal = () => {\n        setIsModalVisible(false);\n    };\n\n    const handleClearFilters = () => {\n        dispatch(clearAvailsSearch());\n        dispatch(setSelectedActiveDelClient(null));\n        dispatch(clearAllFilters(firstFilter));\n    };\n\n    const handleSelectClient = (e) => {\n        dispatch(setSelectedActiveDelClient(e));\n        if(e !== null) {          \n            const clientQuery = e;\n            const filters = formatFilters(clientQuery);\n            dispatch(fetchJobAvails(clientQuery.query.searchCriteria, filters, \"\") );\n        } else {\n            dispatch(clearAvailsSearch());\n            dispatch(setSelectedActiveDelClient(null));\n            dispatch(clearAllFilters(firstFilter));\n        }\n    };\n\n    const formatFilters = (clientQuery) => {\n        const filter = [];\n\n        for (let i = 0; i < clientQuery.query.searchCriteria.length; ++i) {\n\n\n            if (clientQuery.query.searchCriteria[i].contains) {\n\n                var contains = \"\";\n                for (let j = 0; j < clientQuery.query.searchCriteria[i].contains.length; ++j) {\n\n                    if (j === 0)\n                        contains = clientQuery.query.searchCriteria[i].contains[j];\n                    else\n                        contains = contains + \", \" + clientQuery.query.searchCriteria[i].contains[j];\n\n                }\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: contains,\n                    info: \"\",\n                    qualifier: \"contains\"\n                });\n            } else if (clientQuery.query.searchCriteria[i].excludes) {\n\n                var excludes = \"\";\n                for (let j = 0; j < clientQuery.query.searchCriteria[i].excludes.length; ++j) {\n\n                    if (j === 0)\n                        excludes = clientQuery.query.searchCriteria[i].excludes[j];\n                    else\n                        excludes = excludes + \", \" + clientQuery.query.searchCriteria[i].excludes[j];\n\n                }\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: excludes,\n                    info: \"NOT\",\n                    qualifier: \"excludes\"\n                });\n            } else if (clientQuery.query.searchCriteria[i].range.gt) {\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: clientQuery.query.searchCriteria[i].range.gt,\n                    info: \">\",\n                    qualifier: \"gt\"\n                });\n            } else if (clientQuery.query.searchCriteria[i].equals) {\n\n                var equals = \"\";\n                for (let j = 0; j < clientQuery.query.searchCriteria[i].equals.length; ++j) {\n\n                    if (j === 0)\n                        equals = clientQuery.query.searchCriteria[i].equals[j];\n                    else\n                        equals = equals + \", \" + clientQuery.query.searchCriteria[i].equals[j];\n\n                }\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: equals,\n                    info: \"\",\n                    qualifier: \"equals\"\n                });\n            } else if (clientQuery.query.searchCriteria[i].range.gte) {\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: clientQuery.query.searchCriteria[i].range.gte,\n                    info: \">=\",\n                    qualifier: \"gte\"\n                });\n            } else if (clientQuery.query.searchCriteria[i].range.lt) {\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: clientQuery.query.searchCriteria[i].range.lt,\n                    info: \"<\",\n                    qualifier: \"lt\"\n                });\n            } else if (clientQuery.query.searchCriteria[i].range.lte) {\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: clientQuery.query.searchCriteria[i].range.lte,\n                    info: \"<=\",\n                    qualifier: \"lte\"\n                });\n            }\n\n        }\n        return filter;\n    }\n\n    const handleSendAdHoc = () => {\n        dispatch(sendAdHocDelivery());\n        navigate(\"/deliveries\");\n    };\n\n    return (\n        <Form>\n            <Row className=\"rowFilters\">\n                <div className=\"clientFilter\">\n                    <span className=\"clientFilter__label\">Saved Searches: </span>\n                    <div className=\"clientFilter__div\">\n                        <ClientDropdown\n                            onChange={e => handleSelectClient(e)}\n                            value={selectedActiveDelClient}\n                        />\n                    </div>\n                </div>\n                <div className=\"buttonsFilter\">\n                    <Button\n                        onClick={showModal}\n                        type=\"primary\"\n                        size=\"medium\"\n                        className=\"buttonsFilter__button\"\n                    >\n                        Filter Options\n                    </Button>\n                    <Button\n                        onClick={handleClearFilters}\n                        type=\"secondary\"\n                        size=\"medium\"\n                        className=\"buttonsFilter__button\"\n                    >\n                        Clear Filters\n                    </Button>\n                    <Button\n                        danger\n                        onClick={handleSendAdHoc}\n                        size=\"medium\"\n                        className=\"buttonsFilter__button\"\n                        disabled={displayFilters.length === 0 ? true : false}\n                    >\n                        Create Ad Hoc Delivery\n                    </Button>\n                </div>\n                <div className=\"AvailFilters\" >\n                    <div>\n                    <span className=\"AvailFilters__label\">Avail Filters: </span>\n                        {displayFilters.length > 0\n                            ? displayFilters.map(({ field, value, info }) => (\n                                  <Tag\n                                      color=\"blue\"\n                                      style={{\n                                          whiteSpace: \"normal\",\n                                          height: \"auto\",\n                                          marginBottom: \"10px\",\n                                      }}\n                                      key={field}\n                                  >\n                                      {field}: {info} {value}\n                                  </Tag>\n                              ))\n                            : \"  None Selected\"}\n                    </div>\n                </div>\n            </Row>\n            <Row className=\"align-items-end\" >\n                <Col md={12}>\n                    <FormGroup>\n                        <TitlesGrid />\n                    </FormGroup>\n                </Col>\n            </Row>\n            <div>\n                <TitlesModal\n                    isModalVisible={isModalVisible}\n                    closeModal={closeModal}\n                />\n            </div>\n        </Form>\n    );\n}\n","import React from 'react';\nimport { Col, Row } from 'reactstrap';\nimport Pane from 'components/TabBar/Pane';\nimport TitlesForm from './components/TitlesForm';\n\nexport default function Titles() {\n    return (\n        <Pane tabId={0}>\n            <Row>\n                <Col sm={12}>\n                    <TitlesForm />\n                </Col>\n            </Row>\n        </Pane>\n    );\n}\n","import React from \"react\";\nimport {DELIVERY_DETAILS} from \"config/constants\";\nimport {navigate} from \"@reach/router\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {Modal, Tag, Button, Collapse} from 'antd';\nimport {CheckCircleOutlined, SyncOutlined, CloseCircleOutlined} from '@ant-design/icons'\nimport 'antd/dist/antd.css';\nimport {\n    fetchJobAvails,\n    fetchJobAvailsV2,\n    setSelectedActiveDelClient\n} from \"store/actions\";\n\n\nfunction JobModal(props) {\n\n    const {Panel} = Collapse;\n    const dispatch = useDispatch();\n    const {jobDeliveryForm} = useSelector(s => s.avails);\n\n    const handleOk = () => {\n        props.closeModal();\n    };\n\n    const handleCancel = () => {\n        props.closeModal();\n    };\n\n\n    const handleExport = () => {\n        window.open(DELIVERY_DETAILS + \"/\" + jobDeliveryForm.id + \"/output\", \"_blank\");\n        console.log(DELIVERY_DETAILS + \"/\" + jobDeliveryForm.id + \"/output\")\n    }\n\n    const handleErrorReport = () => {\n        window.open(DELIVERY_DETAILS + \"/\" + jobDeliveryForm.id + \"/error/output\", \"_blank\");\n    }\n    const handleApplyFilters = () => {\n        dispatch(setSelectedActiveDelClient(null));\n        dispatch(fetchJobAvails(jobDeliveryForm.query, jobDeliveryForm.filters, \"\"));\n        props.closeModal();\n        navigate(\"/titles\");\n    }\n\n    const handleApplyFiltersV2 = () => {\n        dispatch(setSelectedActiveDelClient(null));\n        dispatch(fetchJobAvailsV2(jobDeliveryForm.query, jobDeliveryForm.filters, \"\"));\n        props.closeModal();\n        navigate(\"/v2\");\n\n\n    }\n\n    const toHeader = \"TO (\" + jobDeliveryForm.toAddress.length + \")\";\n    const ccHeader = \"CC (\" + jobDeliveryForm.ccAddress.length + \")\";\n    const bccHeader = \"BCC (\" + jobDeliveryForm.bccAddress.length + \")\";\n\n\n    return (\n        <Modal\n            style={{ top: 20 }}\n            title=\"Job Delivery Details\"\n            visible={props.isJobModalVisible}\n            onCancel={handleCancel}\n            cancelButtonProps={{ style: { display: 'none' } }}\n            onOk={handleOk}\n            width={800}\n        >\n            <div>\n                <div>\n                    <div><b>Client Name:</b></div>\n                    <div>{jobDeliveryForm.clientName}</div>\n                    <br/>\n                </div>\n\n                <div>\n                    <div><b>Client Delivery Name:</b></div>\n                    <div>{jobDeliveryForm.clientDeliveryName}</div>\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Date:</b></div>\n                    <div>{jobDeliveryForm.date}</div>\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Status:</b></div>\n                    { jobDeliveryForm.status === \"Complete\" ?\n                        <Tag icon={<CheckCircleOutlined />} color=\"success\">\n                            Complete\n                        </Tag> : ''\n                    }\n                    { jobDeliveryForm.status === \"In Progress\" ?\n                        <Tag icon={<SyncOutlined spin />} color=\"processing\">\n                            In Progress\n                        </Tag> : ''\n                    }\n                    { jobDeliveryForm.status === \"Failed\" ?\n                        <Tag title={jobDeliveryForm.reason} icon={<CloseCircleOutlined />} color=\"error\">\n                            Failed\n                        </Tag> : ''\n                    }\n\n                </div>\n                <div>\n                    <br/>\n                    <div><b>Delivery Mechanism:</b></div>\n                    <div>{jobDeliveryForm.delMechanism}</div>\n                    <br/>\n                </div>\n                { jobDeliveryForm.delMechanism === \"E-Mail\" ?\n                    <div>\n                        <div><b>Delivery Addresses:</b></div>\n                        <div>\n                            <Collapse ghost>\n                                <Panel header={toHeader} key=\"1\">\n                                    {jobDeliveryForm.toAddress.map(({email, index}) => (\n                                        <p>{email}</p>\n                                    ))}\n                                </Panel>\n                            </Collapse>\n                        </div>\n                        <div>\n                            <Collapse ghost>\n                                <Panel header={ccHeader} key=\"2\">\n                                    {jobDeliveryForm.ccAddress.map(({email, index}) => (\n                                        <p>{email}</p>\n                                    ))}\n                                </Panel>\n                            </Collapse>\n                        </div>\n                        <div>\n                            <Collapse ghost>\n                                <Panel header={bccHeader} key=\"3\">\n                                    {jobDeliveryForm.bccAddress.map(({email, index}) => (\n                                        <p>{email}</p>\n                                    ))}\n                                </Panel>\n                            </Collapse>\n                        </div>\n                    </div> : \"\"\n                }\n                <div>\n                    <div><b>Format:</b></div>\n                    <div>{jobDeliveryForm.format}</div>\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Version:</b></div>\n                    <div>{jobDeliveryForm.version}</div>\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Avail Filters:</b></div>\n                    <div>\n                        {jobDeliveryForm.filters.map(({field, value, info}) => (\n                            <Tag\n                                color=\"blue\"\n                                style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                                key={field}>\n                                {field}: {info} {value}\n                            </Tag>\n                        ))}\n                    </div>\n                    <br/>\n                    <div>\n                        { jobDeliveryForm.apiVersion === 2 ?\n                            <Button size=\"small\" onClick={handleApplyFiltersV2}>\n                                View Avails\n                            </Button> :\n                            <Button size=\"small\" onClick={handleApplyFilters}>\n                                View Avails\n                            </Button>\n                        }\n                    </div>\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Avails:</b></div>\n                    { jobDeliveryForm.avails ?\n                        <Button\n                            style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                            onClick={handleExport} type=\"link\" size=\"medium\">\n                            {jobDeliveryForm.avails}\n                        </Button> :\n                        <div>Available when job is complete</div>\n                    }\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Error Report:</b></div>\n                    { jobDeliveryForm.errors ?\n                        <Button\n                            style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                            onClick={handleErrorReport} type=\"link\" size=\"medium\">\n                            {jobDeliveryForm.errors}\n                        </Button> :\n                        <div>N/A</div>\n                    }\n                </div>\n            </div>\n        </Modal>\n    );\n}\n\nexport default JobModal;\n","import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport {Button, Space} from 'antd';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport JobModal from \"./JobModal.js\";\nimport {\n    fetchDeliveryDetails,\n    resendDelivery,\n    clearJobDeliveryModal\n} from \"store/actions\";\n\nfunction DeliveriesMenu(props) {\n\n    const [isJobModalVisible, setIsJobModalVisible] = useState(false);\n\n    const dispatch = useDispatch();\n    const {deliveries} = useSelector((s) => s.avails);\n\n\n   const handleViewDetails = (e) => {\n       e.preventDefault();\n       dispatch(fetchDeliveryDetails(deliveries[props.params].id))\n       setIsJobModalVisible(true);\n   };\n\n    const handleSendNow = () => {\n        dispatch(resendDelivery(deliveries[props.params].id));\n    };\n\n\n    const closeModal = () => {\n\n        if (isJobModalVisible) {\n            dispatch(clearJobDeliveryModal());\n            setIsJobModalVisible(false);\n        }\n\n    }\n\n    console.log(deliveries[props.params])\n\n\n    return (\n\n        <Space size=\"middle\">\n            <Button\n                style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                onClick={e => handleViewDetails(e)} type=\"link\" size=\"medium\">\n                View Details\n                </Button>\n            { deliveries[props.params].deliveryDetails.type === \"E-Mail\" ?\n            <Button\n                style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                onClick={handleSendNow} type=\"link\" size=\"medium\">\n                Resend\n            </Button> : '' }\n            <JobModal\n                isJobModalVisible={isJobModalVisible}\n                closeModal={closeModal}\n            />\n        </Space>\n    );\n}\n\nexport default DeliveriesMenu;\n\n","import React from \"react\";\nimport DeliveriesMenu from \"../../DeliveryModals/DeliveriesMenu\";\nimport {Input } from \"antd\";\nimport {SearchOutlined} from '@ant-design/icons'\n\nexport const columns = [\n    {\n        title: 'Date',\n        dataIndex: 'date',\n        key: 'date',\n        defaultSortOrder: 'descend',\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm}) => {\n            return (\n                <Input\n                    autoFocus\n                    placeholder=\"Search Date\"\n                    value={selectedKeys[0]}\n                    onChange={(e)=>{\n                    setSelectedKeys(e.target.value?[e.target.value] : []);\n                    confirm( {closeDropdown: false})}}\n                    onPressEnter={() => {\n                        confirm()\n                    }}\n                    onBlur={() => {\n                        confirm()\n                    }}\n                ></Input>\n            );\n\n        },\n        filterIcon: () => {\n            return <SearchOutlined style={{color: \"#FFFFFF\"}}/>;\n        },\n        onFilter: (value, record)=> {\n            return record.date.includes(value)\n        }\n    },\n    {\n        title: 'Client Delivery Name',\n        dataIndex: 'clDeliveryName',\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm}) => {\n            return (\n                <Input\n                    autoFocus\n                    allowClear={true}\n                    placeholder=\"Search Delivery Name\"\n                    value={selectedKeys[0]}\n                    onChange={(e)=>{\n                    setSelectedKeys(e.target.value?[e.target.value] : []);\n                    confirm( {closeDropdown: false})}}\n                    onPressEnter={() => {\n                        confirm()\n                    }}\n                    onBlur={() => {\n                        confirm()\n                    }}\n                ></Input>\n            );\n\n        },\n        filterIcon: () => {\n            return <SearchOutlined style={{color: \"#FFFFFF\"}}/>;\n        },\n        onFilter: (value, record)=> {\n            return record.clDeliveryName.toLowerCase().includes(value.toLowerCase())\n        }\n\n    },\n    {\n        title: 'Status',\n        dataIndex: 'status',\n        key: 'status',\n    },\n    {\n        title: '# of Avails',\n        dataIndex: 'numAvails',\n        key: 'numAvails'\n    },\n    {\n        title: 'Time To Deliver',\n        dataIndex: 'deliveryTime',\n        key: 'deliveryTime'\n    },\n    {\n        title: 'Delivery Type',\n        dataIndex: 'deliveryType',\n        key: 'deliveryType',\n    },\n    {\n        title: 'Action',\n        dataIndex: 'key',\n        key: 'key',\n        render: key => <DeliveriesMenu params={key}/>\n    },\n];\n","import React from \"react\";\nimport {Form, Row, Col} from \"reactstrap\";\nimport moment from 'moment-timezone';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {Table} from 'ant-table-extensions';\nimport { Tooltip, Button, Tag} from 'antd';\nimport { SyncOutlined, CheckCircleOutlined, CloseCircleOutlined   } from '@ant-design/icons'\nimport 'antd/dist/antd.css';\nimport {columns}  from './configs/columns';\nimport {\n    fetchDeliveries,\n} from \"store/actions\";\n\n\nfunction DeliveriesGrid() {\n\n    const dispatch = useDispatch();\n    const {deliveries} = useSelector((s) => s.avails);\n\n    const refreshDeliveries = () => {\n        dispatch(fetchDeliveries());\n    };\n\n    const deliveryData = [];\n    for (let i = 0; i < deliveries.length; i++) {\n\n        var timeElapsed = '';\n\n        var endTime = deliveries[i].finished ? deliveries[i].finished : moment();\n\n        var start = moment(deliveries[i].started),\n            end = moment(endTime),\n            minutes = end.diff(start, 'minutes'),\n            seconds = end.diff(start, 'seconds');\n\n        if (seconds > 60) {\n\n            let trueMinutes = minutes * 60\n            let trueSeconds = seconds - trueMinutes;\n\n            timeElapsed = minutes + \"m \" + trueSeconds.toString() + \"s\";\n        } else {\n\n                timeElapsed = \"0m \" + seconds.toString() + \"s\";\n        }\n\n\n        deliveryData.push({\n            key: i,\n            date: moment(deliveries[i].started).tz(\"America/Los_Angeles\").format('MM/DD/YYYY  h:mm A'),\n            clDeliveryName: deliveries[i].client + ' - ' + deliveries[i].name,\n            status:  <>\n            { deliveries[i].status === \"Complete\" ?\n                    <Tag icon={<CheckCircleOutlined />} color=\"success\">\n                        Complete\n                    </Tag> : ''\n            }\n            { deliveries[i].status === \"In Progress\" ?\n                <Tag icon={<SyncOutlined spin />} color=\"processing\">\n                    In Progress\n                </Tag> : ''\n            }\n            { deliveries[i].status === \"Failed\" ?\n                    <Tag title={deliveries[i].failureReason} icon={<CloseCircleOutlined />} color=\"error\">\n                        Failed\n                    </Tag> : ''\n            }\n            </>,\n            numAvails: deliveries[i].numAvails,\n            deliveryTime: deliveries[i].status === \"Complete\" ? timeElapsed : '',\n            deliveryType: deliveries[i].hasOwnProperty('deliveryDetails') ? deliveries[i].deliveryDetails.type\n                : deliveries[i].type,\n\n\n        });\n    }\n\n    return (\n        <Form>\n            <Row>\n                <Col md={12}>\n                    <Tooltip title=\"Refresh Deliveries\" placement=\"right\">\n                        <Button\n                            type=\"primary\"\n                            shape=\"circle\"\n                            icon={<SyncOutlined  />}\n                            onClick={refreshDeliveries}/>\n                    </Tooltip>\n                    <div className=\"data-grid-container\">\n                        <div style={{marginBottom: 16}}>\n                            <span style={{marginLeft: 8}}>\n                            </span>\n                        </div>\n                        <Table\n                            columns={columns}\n                            bordered\n                            dataSource={deliveryData}\n                            scroll={{ y: 600}}\n                        />\n                    </div>\n                </Col>\n            </Row>\n        </Form>\n\n    );\n}\n\nexport default DeliveriesGrid;\n","import React from \"react\";\nimport {Form, Row, Col, FormGroup} from \"reactstrap\";\nimport DeliveriesGrid from \"./DeliveriesGrid\";\n\nexport default function DeliveriesForm() {\n\n\n    return (\n        <Form>\n            <Row className=\"align-items-end\">\n                <Col md={11}>\n                    <FormGroup>\n                        <DeliveriesGrid />\n                    </FormGroup>\n                </Col>\n            </Row>\n\n        </Form>\n    );\n}\n","import React from \"react\";\nimport {Col, Row} from \"reactstrap\";\nimport Pane from \"components/TabBar/Pane\";\nimport DeliveriesForm from \"./components/DeliveriesForm\";\n\n\nexport default function Deliveries() {\n\n\n    return (\n        <Pane tabId={1} >\n            <Row>\n                <Col sm={12}>\n                    <DeliveriesForm />\n                </Col>\n            </Row>\n        </Pane>\n    )\n}\n","export const columns = [\n    {\n        title: 'Date',\n        dataIndex: 'date',\n        key: 'date',\n        defaultSortOrder: 'descend'\n    },\n    {\n        title: 'Status',\n        dataIndex: 'status',\n        key: 'status'\n    },\n    {\n        title: 'Time To Deliver',\n        dataIndex: 'deliveryTime',\n        key: 'deliveryTime'\n    },\n    {\n        title: 'Delivery Type',\n        dataIndex: 'deliveryType',\n        key: 'deliveryType'\n    },\n    {\n        title: 'Delivery Address',\n        dataIndex: 'delAddress',\n        key: 'delAddress'\n    },\n    {\n        title: 'Action',\n        dataIndex: 'action',\n        key: ''\n    }\n\n];\n","import React from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport { navigate } from \"@reach/router\";\nimport moment from 'moment-timezone';\nimport {Table} from 'ant-table-extensions';\nimport {Modal, Tag, Button, Collapse, Input} from 'antd';\nimport 'antd/dist/antd.css';\nimport {columns}  from './configs/columns';\nimport {\n    sendImmediateDelivery,\n    fetchJobAvails,\n    fetchJobAvailsV2,\n    setSelectedActiveDelClient,\n    saveEditedAddresses,\n    updateClientDeliveryForm\n} from \"store/actions\";\n\n\nfunction ClientModal(props) {\n\n    const { TextArea } = Input;\n    const {Panel} = Collapse;\n    const dispatch = useDispatch();\n    const { clientDeliveryForm, deliveryHistory } = useSelector(s => s.avails);\n\n    const handleOk = () => {\n        props.closeModal();\n    };\n\n    const handleCancel = () => {\n        props.closeModal();\n    };\n\n    const handleSendNow = () => {\n        dispatch(sendImmediateDelivery(clientDeliveryForm.clientName, clientDeliveryForm.clientDeliveryName));\n        navigate(\"/deliveries\");\n    }\n\n\n    const handleApplyFilters = () => {\n        dispatch(setSelectedActiveDelClient(null));\n        dispatch(fetchJobAvails(clientDeliveryForm.query, clientDeliveryForm.filters));\n        props.closeModal();\n        navigate(\"/titles\");\n    }\n\n    const handleApplyFiltersV2 = () => {\n        dispatch(setSelectedActiveDelClient(null));\n        dispatch(fetchJobAvailsV2(clientDeliveryForm.query, clientDeliveryForm.filters));\n        props.closeModal();\n        navigate(\"/v2\");\n    }\n\n    const handleViewHistoryAvails = (query) => {\n        dispatch(fetchJobAvails(query.searchCriteria, clientDeliveryForm.filters, \"\"));\n        props.closeModal();\n        navigate(\"/titles\");\n    }\n\n\n\n    const deliveryData = [];\n    for (let i = 0; i < deliveryHistory.length; i++) {\n\n        var timeElapsed = '';\n\n        var endTime = deliveryHistory[i].finished ? deliveryHistory[i].finished : moment();\n\n        var start = moment(deliveryHistory[i].started),\n            end = moment(endTime),\n            minutes = end.diff(start, 'minutes'),\n            seconds = end.diff(start, 'seconds');\n\n        if (seconds > 60) {\n\n            let trueMinutes = minutes * 60;\n            let trueSeconds = seconds - trueMinutes;\n\n            timeElapsed = minutes + \"m \" + trueSeconds.toString() + \"s\";\n        } else {\n            timeElapsed = \"0m \" + seconds.toString() + \"s\";\n        }\n\n\n        let deliveryType = '';\n        let deliveryAddresses = '';\n        if(deliveryHistory[i].hasOwnProperty('deliveryDetails')) {\n            deliveryType = deliveryHistory[i].deliveryDetails.type;\n\n            if (deliveryHistory[i].hasOwnProperty('to'))\n                deliveryAddresses = clientDeliveryForm.toAddress\n\n        } else {\n            deliveryType = deliveryHistory[i].type;\n            if (deliveryHistory[i].hasOwnProperty('addresses'))\n                deliveryAddresses = deliveryHistory[i].addresses.toString().replaceAll(',', ' \\n');\n\n        }\n\n\n        deliveryData.push({\n            key: i,\n            date: moment(deliveryHistory[i].started).tz(\"America/Los_Angeles\").format('MM/DD/YYYY  h:mm A'),\n            status: deliveryHistory[i].status,\n            deliveryTime: deliveryHistory[i].status === \"Complete\" ? timeElapsed : '',\n            deliveryType: deliveryType,\n            delAddress:  deliveryAddresses,\n            action:\n            <div>\n                <Button\n                    style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                    onClick={() => handleViewHistoryAvails(deliveryHistory[i].query)} type=\"link\" size=\"medium\"\n                    disabled={deliveryHistory[i].queryAPIVersion === 2}>\n                    View Avails\n                </Button>\n            </div>\n\n\n        });\n    }\n\n    const handleEditToAddresses = e => {\n        dispatch(updateClientDeliveryForm({\n            toAddress: e.target.value\n        }));\n    }\n\n    const handleEditCCAddresses = e => {\n        dispatch(updateClientDeliveryForm({\n            ccAddress: e.target.value\n        }));\n    }\n\n    const handleEditBCCAddresses = e => {\n        dispatch(updateClientDeliveryForm({\n            bccAddress: e.target.value\n        }));\n    }\n\n    const handleEditedAddresses = (e, path) => {\n        dispatch(saveEditedAddresses(path, clientDeliveryForm));\n    }\n\n    return (\n        <Modal\n            style={{ top: 20 }}\n            title=\"Client Delivery Details\"\n            visible={props.isClientModalVisible}\n            onOk={handleOk}\n            onCancel={handleCancel}\n            cancelButtonProps={{ style: { display: 'none' } }}\n            width={800}\n        >\n            <div>\n                <div>\n                    <div><b>Client Name:</b></div>\n                    <div>{clientDeliveryForm.clientName}</div>\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Client Delivery Name:</b></div>\n                    <div>{clientDeliveryForm.clientDeliveryName}</div>\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Delivery Mechanism:</b></div>\n                    <div>{clientDeliveryForm.type}</div>\n                    <br/>\n                </div>\n                { clientDeliveryForm.type === \"E-Mail\" ?\n                    <div>\n                        <div><b>Delivery Addresses:</b></div>\n                        <div>\n                            <Collapse ghost>\n                                <Panel header=\"TO\" key=\"1\">\n                                      <TextArea\n                                          disabled={false}\n                                          defaultValue={clientDeliveryForm.toAddress}\n                                          autoSize={true}\n                                          onChange={handleEditToAddresses}\n                                      />\n\n                                    <div>\n                                        <br/>\n                                        <Button size=\"small\"\n                                                onClick={(e) => handleEditedAddresses(e, \"/deliveryDetails/to\")}>\n                                            Save TO Changes\n                                        </Button>\n                                    </div>\n                                </Panel>\n\n                            </Collapse>\n                        </div>\n                        <div>\n                            <Collapse ghost>\n                                <Panel header=\"CC\" key=\"2\">\n                                     <TextArea\n                                         defaultValue={clientDeliveryForm.ccAddress}\n                                         autoSize={true}\n                                         onChange={handleEditCCAddresses}\n                                     />\n                                    <br/>\n                                    <div>\n                                        <br/>\n                                        <Button size=\"small\"\n                                                onClick={(e) => handleEditedAddresses(e, \"/deliveryDetails/cc\")}>\n                                            Save CC Changes\n                                        </Button>\n                                    </div>\n                                </Panel>\n\n                            </Collapse>\n                        </div>\n                        <div>\n                            <Collapse ghost>\n                                <Panel header=\"BCC\" key=\"3\">\n                                     <TextArea\n                                         defaultValue={clientDeliveryForm.bccAddress}\n                                         autoSize={true}\n                                         onChange={handleEditBCCAddresses}\n                                     />\n                                    <br/>\n                                    <div>\n                                        <br/>\n                                        <Button size=\"small\"\n                                                onClick={(e) => handleEditedAddresses(e, \"/deliveryDetails/bcc\")}>\n                                            Save BCC Changes\n                                        </Button>\n                                    </div>\n                                </Panel>\n\n                            </Collapse>\n                        </div>\n                    </div> : \"\"\n                }\n                <div>\n                    <div><b>Format:</b></div>\n                    <div>{clientDeliveryForm.format}</div>\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Version:</b></div>\n                    <div>{clientDeliveryForm.version}</div>\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Avail Filters:</b></div>\n                    <div>\n                        {clientDeliveryForm.filters.map(({field, value, info}) => (\n                            <Tag\n                                color=\"blue\"\n                                style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                                key={field}>\n                                {field}: {info} {value}\n                            </Tag>\n                        ))}\n                    </div>\n                    <br/>\n                    <div>\n                        { clientDeliveryForm.apiVersion === 2 ?\n                            <Button size=\"small\" onClick={handleApplyFiltersV2}>\n                                View Avails\n                            </Button> :\n                            <Button size=\"small\" onClick={handleApplyFilters}>\n                                View Avails\n                            </Button>\n                        }\n                    </div>\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Delivery Schedule:</b></div>\n                    <div>{clientDeliveryForm.schedule}</div>\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Next Scheduled Delivery:</b></div>\n                    <div>{clientDeliveryForm.nextDelivery}</div>\n                    <br/>\n                </div>\n                <div>\n                    <div><b>Delivery History:</b></div>\n                    <div>\n                        <Table\n                            bordered\n                            columns={columns}\n                            dataSource={deliveryData}\n                            pagination={{\n                                pageSize: 5,\n                                hideOnSinglePage: true\n                            }}\n                        />\n                    </div>\n                    <br/>\n                </div>\n                <div>\n                    <Button onClick={handleSendNow}size=\"medium\">\n                        Send Now\n                    </Button>\n\n                </div>\n            </div>\n        </Modal>\n\n    );\n}\n\nexport default ClientModal;\n","import React, { useState } from 'react';\nimport { navigate } from \"@reach/router\";\nimport 'antd/dist/antd.css';\nimport {Button, Space} from 'antd';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport ClientModal from \"./ClientModal.js\";\nimport {\n    fetchClientDeliveryDetails,\n    fetchClientHistory,\n    sendImmediateDelivery,\n    clearClientDeliveryModal,\n    clearClientDeliveryHistory\n} from \"store/actions\";\n\nfunction ClientsMenu(props) {\n\n    const [isClientModalVisible, setIsClientModalVisible] = useState(false);\n\n    const dispatch = useDispatch();\n    const { deliveryClients } = useSelector((s) => s.avails);\n\n    const handleViewDetails = () => {\n            dispatch(fetchClientDeliveryDetails(deliveryClients[props.params]));\n            dispatch(fetchClientHistory(deliveryClients[props.params].client, deliveryClients[props.params].deliveries.id));\n            setIsClientModalVisible(true);\n\n    };\n\n    const handleSendNow = () => {\n        dispatch(sendImmediateDelivery(deliveryClients[props.params].client, deliveryClients[props.params].deliveries.id));\n        navigate(\"/deliveries\");\n    };\n\n    const closeModal = () => {\n\n        if (isClientModalVisible) {\n            dispatch(clearClientDeliveryHistory());\n            dispatch(clearClientDeliveryModal());\n            setIsClientModalVisible(false);\n        }\n\n    }\n\n    return (\n\n        <Space size=\"middle\">\n            <Button\n                style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                onClick={handleViewDetails} type=\"link\" size=\"small\">\n                View Details\n            </Button>\n            { deliveryClients[props.params].deliveries.deliveryDetails.type === \"E-Mail\" ?\n            <Button\n                style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                onClick={handleSendNow} type=\"link\" size=\"medium\">\n                Send\n            </Button> : '' }\n            <ClientModal\n                isClientModalVisible={isClientModalVisible}\n                closeModal={closeModal}\n            />\n        </Space>\n    );\n}\n\nexport default ClientsMenu;\n\n","import React from \"react\";\nimport ClientsMenu from \"../../ClientModal/ClientsMenu\";\nimport {Input } from \"antd\";\nimport {SearchOutlined} from '@ant-design/icons'\n\nexport const columns = [\n    {\n        title: 'Client Name',\n        dataIndex: 'client',\n        key: 'client',\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm}) => {\n            return (\n                <Input\n                    autoFocus\n                    allowClear={true}\n                    placeholder=\"Search Client Name\"\n                    value={selectedKeys[0]}\n                    onChange={(e)=>{\n                    setSelectedKeys(e.target.value?[e.target.value] : []);\n                    confirm( {closeDropdown: false})}}\n                    onPressEnter={() => {\n                        confirm()\n                    }}\n                    onBlur={() => {\n                        confirm()\n                    }}\n                ></Input>\n            );\n\n        },\n        filterIcon: () => {\n            return <SearchOutlined style={{color: \"#FFFFFF\"}}/>;\n        },\n        onFilter: (value, record)=> {\n            return record.client.toLowerCase().includes(value.toLowerCase())\n        }\n    },\n    {\n        title: 'Client Delivery Name',\n        dataIndex: 'clDeliveryName',\n        key: 'clDeliveryName',\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm}) => {\n            return (\n                <Input\n                    autoFocus\n                    allowClear={true}\n                    placeholder=\"Search Delivery Name\"\n                    value={selectedKeys[0]}\n                    onChange={(e)=>{\n                    setSelectedKeys(e.target.value?[e.target.value] : []);\n                    confirm( {closeDropdown: false})}}\n                    onPressEnter={() => {\n                        confirm()\n                    }}\n                    onBlur={() => {\n                        confirm()\n                    }}\n                ></Input>\n            );\n\n        },\n        filterIcon: () => {\n            return <SearchOutlined style={{color: \"#FFFFFF\"}}/>;\n        },\n        onFilter: (value, record)=> {\n            return record.clDeliveryName.toLowerCase().includes(value.toLowerCase())\n        }\n    },\n    {\n        title: 'Last Delivery',\n        dataIndex: 'lastDelivery',\n        key: 'lastDelivery',\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm}) => {\n            return (\n                <Input\n                    autoFocus\n                    allowClear={true}\n                    placeholder=\"Search Last Delivery\"\n                    value={selectedKeys[0]}\n                    onChange={(e)=>{\n                    setSelectedKeys(e.target.value?[e.target.value] : []);\n                    confirm( {closeDropdown: false})}}\n                    onPressEnter={() => {\n                        confirm()\n                    }}\n                    onBlur={() => {\n                        confirm()\n                    }}\n                ></Input>\n            );\n\n        },\n        filterIcon: () => {\n            return <SearchOutlined style={{color: \"#FFFFFF\"}}/>;\n        },\n        onFilter: (value, record)=> {\n            return record.lastDelivery.includes(value)\n        }\n    },\n    {\n        title: 'Next Delivery',\n        dataIndex: 'nextDelivery',\n        key: 'deliveryTime',\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm}) => {\n            return (\n                <Input\n                    autoFocus\n                    allowClear={true}\n                    placeholder=\"Search Next Delivery\"\n                    value={selectedKeys[0]}\n                    onChange={(e)=>{\n                    setSelectedKeys(e.target.value?[e.target.value] : []);\n                    confirm( {closeDropdown: false})}}\n                    onPressEnter={() => {\n                        confirm()\n                    }}\n                    onBlur={() => {\n                        confirm()\n                    }}\n                ></Input>\n            );\n\n        },\n        filterIcon: () => {\n            return <SearchOutlined style={{color: \"#FFFFFF\"}}/>;\n        },\n        onFilter: (value, record)=> {\n            return record.lastDelivery.includes(value)\n        }\n\n    },\n    {\n        title: 'Delivery Schedule',\n        dataIndex: 'schedule',\n        key: 'schedule',\n    },\n    {\n        title: 'Delivery Type',\n        dataIndex: 'deliveryType',\n        key: 'deliveryType',\n\n    },\n    {\n        title: 'Format',\n        dataIndex: 'format',\n        key: 'format',\n    },\n    {\n        title: 'Version',\n        dataIndex: 'version',\n        key: 'version'\n    },\n    {\n        title: 'Schedule',\n        dataIndex: 'scheduleEnabled',\n        key: 'scheduleEnabled',\n    },\n    {\n        title: 'Delivery',\n        dataIndex: 'deliveryEnabled',\n        key: 'deliveryEnabled',\n    },\n    {\n        title: 'Action',\n        dataIndex: 'key',\n        key: 'key',\n        render: key => <ClientsMenu params={key}/>\n    },\n];\n","import React from \"react\";\nimport {Form, Row, Col} from \"reactstrap\";\nimport moment from 'moment-timezone';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport { Tooltip, Button, Switch} from 'antd';\nimport { SyncOutlined } from '@ant-design/icons'\nimport {Table} from 'ant-table-extensions';\nimport 'antd/dist/antd.css';\nimport {columns}  from './configs/columns';\nimport {\n    fetchDeliveryClients,\n    setClientToggles\n} from \"store/actions\";\n\n\nfunction ClientsGrid() {\n\n    const dispatch = useDispatch();\n    const { deliveryClients } = useSelector((s) => s.avails);\n\n    const refreshClients = () => {\n        dispatch(fetchDeliveryClients());\n    };\n\n    const handleClientToggles = (toggleOnOff, path, client, deliveryId) => {\n        dispatch(setClientToggles(toggleOnOff, path, client, deliveryId));\n    };\n\n    const clientData = [];\n    for (let i = 0; i < deliveryClients.length; i++) {\n\n\n        clientData.push({\n            key: i,\n            client: deliveryClients[i].client,\n            clDeliveryName: deliveryClients[i].deliveries.name,\n            lastDelivery: moment(deliveryClients[i].deliveries.lastSuccessfulDeliveryDate).tz(\"America/Los_Angeles\").format('MM/DD/YYYY'),\n            nextDelivery: moment(deliveryClients[i].deliveries.nextDelivery).tz(\"America/Los_Angeles\").format('MM/DD/YYYY'),\n            schedule: deliveryClients[i].deliveries.scheduleDisplay,\n            deliveryType: deliveryClients[i].deliveries.hasOwnProperty('deliveryDetails') ? deliveryClients[i].deliveries.deliveryDetails.type\n                : deliveryClients[i].deliveries.type,\n            format: deliveryClients[i].deliveries.format,\n            version: deliveryClients[i].deliveries.schema,\n            scheduleEnabled:   <>\n                <Switch\n                    checked={deliveryClients[i].deliveries.scheduleEnabled ? true : false}\n                    onChange={(e) => handleClientToggles(e, \"/scheduleEnabled\", deliveryClients[i].client, deliveryClients[i].deliveries.id)}\n                    checkedChildren=\"On\"\n                    unCheckedChildren=\"Off\"\n                />\n            </>,\n            deliveryEnabled:   <>\n            <Switch\n                checked={deliveryClients[i].deliveries.deliveryEnabled ? true : false}\n                onChange={(e) => handleClientToggles(e, \"/deliveryEnabled\", deliveryClients[i].client, deliveryClients[i].deliveries.id)}\n                checkedChildren=\"On\"\n                unCheckedChildren=\"Off\"\n            />\n\n            </>\n        });\n\n\n    }\n\n\n\n\n    return (\n        <Form>\n            <Row>\n                <Col md={12}>\n                    <Tooltip title=\"Refresh Clients\" placement=\"right\">\n                        <Button\n                            type=\"primary\"\n                            shape=\"circle\"\n                            icon={<SyncOutlined  />}\n                            onClick={refreshClients}/>\n                    </Tooltip>\n                    <div className=\"data-grid-container\">\n                        <div style={{marginBottom: 16}}>\n                            <span style={{marginLeft: 8}}>\n                            </span>\n                        </div>\n                        <Table\n                            columns={columns}\n                            bordered\n                            dataSource={clientData}\n                            scroll={{ y: 600}}\n                        />\n                    </div>\n                </Col>\n            </Row>\n        </Form>\n\n    );\n}\n\nexport default ClientsGrid;\n","import React from \"react\";\nimport {Form, Row, Col, FormGroup} from \"reactstrap\";\nimport ClientsGrid from \"./ClientsGrid\";\n\nexport default function ClientsForm() {\n\n    return (\n        <Form>\n            <Row className=\"align-items-end\">\n                <Col md={11}>\n                    <FormGroup>\n                        <ClientsGrid />\n                    </FormGroup>\n                </Col>\n            </Row>\n        </Form>\n    );\n}\n","import React from \"react\";\nimport {Col, Row} from \"reactstrap\";\nimport Pane from \"components/TabBar/Pane\";\nimport ClientsForm from \"./components/ClientsForm\";\n\n\nexport default function Clients() {\n\n\n    return (\n        <Pane tabId={1} >\n            <Row>\n                <Col sm={12}>\n                    <ClientsForm />\n                </Col>\n            </Row>\n        </Pane>\n    )\n}\n","import React from \"react\";\nimport {Input } from \"antd\";\nimport {SearchOutlined} from '@ant-design/icons'\n\nexport const columns = [\n    {\n        title: 'Ema Avail ID',\n        dataIndex: 'id',\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm}) => {\n            return (\n                <Input\n                    autoFocus\n                    allowClear={true}\n                    placeholder=\"Search Ema Avail ID\"\n                    value={selectedKeys[0]}\n                    onChange={(e)=>{\n                    setSelectedKeys(e.target.value?[e.target.value] : []);\n                    confirm( {closeDropdown: false})}}\n                    onPressEnter={() => {\n                        confirm()\n                    }}\n                    onBlur={() => {\n                        confirm()\n                    }}\n                ></Input>\n            );\n\n        },\n        filterIcon: () => {\n            return <SearchOutlined style={{color: \"#FFFFFF\"}}/>;\n        },\n        onFilter: (value, record)=> {\n            return record.id.includes(value)\n        }\n    },\n    {\n        title: 'Alid',\n        dataIndex: 'alid',\n        key: 'alid',\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm}) => {\n            return (\n                <Input\n                    autoFocus\n                    allowClear={true}\n                    placeholder=\"Search Ema Avail ID\"\n                    value={selectedKeys[0]}\n                    onChange={(e)=>{\n                    setSelectedKeys(e.target.value?[e.target.value] : []);\n                    confirm( {closeDropdown: false})}}\n                    onPressEnter={() => {\n                        confirm()\n                    }}\n                    onBlur={() => {\n                        confirm()\n                    }}\n                ></Input>\n            );\n\n        },\n        filterIcon: () => {\n            return <SearchOutlined style={{color: \"#FFFFFF\"}}/>;\n        },\n        onFilter: (value, record)=> {\n            return record.alid.includes(value)\n        }\n    },\n    {\n        title: 'Client',\n        dataIndex: 'client',\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm}) => {\n            return (\n                <Input\n                    autoFocus\n                    allowClear={true}\n                    placeholder=\"Search Client\"\n                    value={selectedKeys[0]}\n                    onChange={(e)=>{\n                    setSelectedKeys(e.target.value?[e.target.value] : []);\n                    confirm( {closeDropdown: false})}}\n                    onPressEnter={() => {\n                        confirm()\n                    }}\n                    onBlur={() => {\n                        confirm()\n                    }}\n                ></Input>\n            );\n\n        },\n        filterIcon: () => {\n            return <SearchOutlined style={{color: \"#FFFFFF\"}}/>;\n        },\n        onFilter: (value, record)=> {\n            return record.client.toLowerCase().includes(value.toLowerCase())\n        }\n    },\n    {\n        title: 'Title',\n        dataIndex: 'title',\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm}) => {\n            return (\n                <Input\n                    autoFocus\n                    allowClear={true}\n                    placeholder=\"Search Title\"\n                    value={selectedKeys[0]}\n                    onChange={(e)=>{\n                    setSelectedKeys(e.target.value?[e.target.value] : []);\n                    confirm( {closeDropdown: false})}}\n                    onPressEnter={() => {\n                        confirm()\n                    }}\n                    onBlur={() => {\n                        confirm()\n                    }}\n                ></Input>\n            );\n\n        },\n        filterIcon: () => {\n            return <SearchOutlined style={{color: \"#FFFFFF\"}}/>;\n        },\n        onFilter: (value, record)=> {\n            return record.title.toLowerCase().includes(value.toLowerCase())\n        }\n    },\n    {\n        title: 'Language',\n        dataIndex: 'language',\n        key: 'language'\n    },\n    {\n        title: 'License Type',\n        dataIndex: 'licenseType',\n        key: 'licenseType',\n    },\n    {\n        title: 'Format',\n        dataIndex: 'format',\n        key: 'format',\n    },\n    {\n        title: 'Territory',\n        dataIndex: 'territory',\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm}) => {\n            return (\n                <Input\n                    autoFocus\n                    allowClear={true}\n                    placeholder=\"Search Territory\"\n                    value={selectedKeys[0]}\n                    onChange={(e)=>{\n                    setSelectedKeys(e.target.value?[e.target.value] : []);\n                    confirm( {closeDropdown: false})}}\n                    onPressEnter={() => {\n                        confirm()\n                    }}\n                    onBlur={() => {\n                        confirm()\n                    }}\n                ></Input>\n            );\n        },\n        filterIcon: () => {\n            return <SearchOutlined style={{color: \"#FFFFFF\"}}/>;\n        },\n        onFilter: (value, record)=> {\n            return record.territory.toLowerCase().includes(value.toLowerCase())\n        }\n    },\n    {\n        title: 'Created By',\n        dataIndex: 'createdBy',\n        key: 'createdBy',\n    },\n    {\n        title: 'Created Date',\n        dataIndex: 'createdDate',\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm}) => {\n            return (\n                <Input\n                    autoFocus\n                    placeholder=\"Search Created Date\"\n                    value={selectedKeys[0]}\n                    onChange={(e)=>{\n                    setSelectedKeys(e.target.value?[e.target.value] : []);\n                    confirm( {closeDropdown: false})}}\n                    onPressEnter={() => {\n                        confirm()\n                    }}\n                    onBlur={() => {\n                        confirm()\n                    }}\n                ></Input>\n            );\n\n        },\n        filterIcon: () => {\n            return <SearchOutlined style={{color: \"#FFFFFF\"}}/>;\n        },\n        onFilter: (value, record)=> {\n            return record.createdDate.includes(value)\n        }\n    },\n    // {\n    //     title: 'Notes',\n    //     dataIndex: 'notes',\n    //     key: 'notes',\n    // },\n    {\n        title: 'Action',\n        dataIndex: 'action',\n        key: 'action'\n    }\n];\n","import React from \"react\";\nimport {Form, Row, Col} from \"reactstrap\";\nimport moment from 'moment-timezone';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {Table} from 'ant-table-extensions';\nimport { Tooltip, Button} from 'antd';\nimport { SyncOutlined   } from '@ant-design/icons'\nimport 'antd/dist/antd.css';\nimport {columns}  from './configs/columns';\nimport {\n    fetchDNAList,\n    cancelDoNotAvail\n} from \"store/actions\";\n\n\nfunction DNAGrid() {\n\n    const dispatch = useDispatch();\n    const {doNotAvails} = useSelector((s) => s.avails);\n\n    const refreshDNAList = () => {\n        dispatch(fetchDNAList());\n    };\n\n    const dnaData = [];\n    for (let i = 0; i < doNotAvails.length; i++) {\n\n        dnaData.push({\n            key: i,\n            id: doNotAvails[i].emaAvailId,\n            alid: doNotAvails[i].alid ? doNotAvails[i].alid : \"\",\n            client: doNotAvails[i].client,\n            title: doNotAvails[i].title,\n            language: doNotAvails[i].language,\n            licenseType: doNotAvails[i].licenseType,\n            format: doNotAvails[i].format,\n            territory: doNotAvails[i].territory,\n            createdBy: doNotAvails[i].createdBy,\n            createdDate: moment(doNotAvails[i].dateCreated).tz(\"America/Los_Angeles\").format('MM/DD/YYYY'),\n            action:\n                <div>\n                        <Button\n                            style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                            type=\"link\"\n                            onClick={() => {\n                                        handleCancelDoNotAvail(dnaData[i].id);\n                                    }}\n                            size=\"small\">\n                            Delete\n                        </Button>\n                </div>\n\n\n        });\n    }\n\n    const handleCancelDoNotAvail = (id) => {\n       dispatch(cancelDoNotAvail(id, false));\n    }\n\n\n    return (\n        <Form>\n            <Row>\n                <Col md={12}>\n                    <Tooltip title=\"Refresh DNA Records\" placement=\"right\">\n                        <Button\n                            type=\"primary\"\n                            shape=\"circle\"\n                            icon={<SyncOutlined  />}\n                            onClick={refreshDNAList}/>\n                    </Tooltip>\n                    <div className=\"data-grid-container\">\n                        <div style={{marginBottom: 16}}>\n                            <span style={{marginLeft: 8}}>\n                            </span>\n                        </div>\n                        <Table\n                            columns={columns}\n                            bordered\n                            dataSource={dnaData}\n                            scroll={{ y: 600}}\n                        />\n                    </div>\n                </Col>\n            </Row>\n        </Form>\n\n    );\n}\n\nexport default DNAGrid;\n","import React from \"react\";\nimport {Form, Row, Col, FormGroup} from \"reactstrap\";\nimport DNAGrid from \"./DNAGrid\";\n\nexport default function DNAForm() {\n\n\n    return (\n        <Form>\n            <Row className=\"align-items-end\">\n                <Col md={11}>\n                    <FormGroup>\n                        <DNAGrid />\n                    </FormGroup>\n                </Col>\n            </Row>\n\n        </Form>\n    );\n}\n","import React from \"react\";\nimport {Col, Row} from \"reactstrap\";\nimport Pane from \"components/TabBar/Pane\";\nimport DNAForm from \"./components/DNAForm\";\n\n\nexport default function DNA() {\n\n\n    return (\n        <Pane tabId={3} >\n            <Row>\n                <Col sm={12}>\n                    <DNAForm />\n                </Col>\n            </Row>\n        </Pane>\n    )\n}\n","export const columns = [\n    {\n        title: 'Alid',\n        dataIndex: 'id',\n        key: 'id'\n    },\n    {\n        title: 'Licensor',\n        dataIndex: 'licensor',\n        key: 'licensor'\n    },\n    {\n        title: 'Title',\n        dataIndex: 'title',\n        key: 'title'\n    },\n    {\n        title: 'No. Avails',\n        dataIndex: 'numAvails',\n        key: 'numAvails'\n\n    },\n    {\n        title: 'Work Type',\n        dataIndex: 'workType',\n    },\n    {\n        title: 'Release Year',\n        dataIndex: 'releaseYear',\n        key: 'releaseYear'\n    },\n    {\n        title: 'Radar Product ID',\n        dataIndex: 'radarId',\n        key: 'radarId'\n    },\n    {\n        title: 'EIDR',\n        dataIndex: 'eidr',\n        key: 'eidr'\n    }\n];\n","export const expandedColumns = [\n    {\n        title: 'Ema Avail ID',\n        dataIndex: 'id',\n        key: 'id'\n\n    },\n    {\n        title: 'Start',\n        dataIndex: 'start',\n        key: 'start'\n    },\n    {\n        title: 'End',\n        dataIndex: 'end',\n        key: 'end'\n    },\n    {\n        title: 'Language',\n        dataIndex: 'language',\n        key: 'language'\n    },\n    {\n        title: 'Media',\n        dataIndex: 'media',\n        key: 'media',\n    },\n    {\n        title: 'Category',\n        dataIndex: 'category',\n        key: 'category'\n    },\n    {\n        title: 'Format',\n        dataIndex: 'format',\n        key: 'format',\n    },\n    {\n        title: 'Territory',\n        dataIndex: 'territory',\n        key: 'territory',\n    },\n    {\n        title: 'Client Name',\n        dataIndex: 'clientName',\n        key: 'clientName',\n    },\n    {\n        title: 'Contract ID',\n        dataIndex: 'contractId',\n        key: 'contractId'\n    },\n    {\n        title: 'Created',\n        dataIndex: 'created',\n        key: 'created'\n    },\n    {\n        title: 'Description',\n        dataIndex: 'description',\n        key: 'description'\n    },\n    {\n        title: 'Action',\n        dataIndex: 'action',\n        key: 'action'\n    }\n];\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport ArrowForward from '@material-ui/icons/ArrowForward'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: '75px',\n        justifyContent: \"center\",\n        paddingLeft: theme.spacing(0),\n        paddingRight: theme.spacing(2)\n    },\n    paginationInfoContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n\n    }\n\n}))\n\n\nconst PaginationControls = ({  onPrev, onNext }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.paginationInfoContainer}>\n                <div>\n                    <IconButton className=\"arrowButton\" size=\"medium\" onClick={onPrev} >\n                       <ArrowBack />\n                    </IconButton>\n                    <IconButton size=\"medium\" onClick={onNext} >\n                        <ArrowForward />\n                    </IconButton>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PaginationControls\n","import React from \"react\";\nimport {Form, Row, Col} from \"reactstrap\";\nimport _ from \"lodash\";\nimport moment from 'moment-timezone';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Table} from 'ant-table-extensions';\nimport 'antd/dist/antd.css';\nimport { Button } from 'antd';\nimport {columns}  from './configs/columns';\nimport {expandedColumns}  from './configs/expandedColumns'\nimport PaginationControls from \"./PaginationControls\";\n\nimport {\n    fetchAvailsV2,\n    fetchJobAvailsV2,\n    cancelDoNotAvail,\n    doNotAvail\n} from \"store/actions\";\n\n\nfunction TitlesGrid() {\n\n    const dispatch = useDispatch();\n    const {v2Avails, nextPage, previousPage, jobQuery, jobFilters} = useSelector((s) => s.avails);\n\n    const {territories} = useSelector((s) => s.metadata);\n    //const {languages, territories} = useSelector((s) => s.metadata);\n\n    const expandedRowRender = (row) => {\n\n        const availData = [];\n\n\n        if (v2Avails.length > 0 && v2Avails[row.key].availType.transaction) {\n            for (let j = 0; j < v2Avails[row.key].availType.transaction.length; ++j) {\n\n                const doNotAvail = _.find(v2Avails[row.key].availType.transaction[j].term, item => ( item.termName === 'DO_NOT_AVAIL'));\n                const language = \"\";\n\n                const yesNoAvail = doNotAvail ? doNotAvail.text : 'No';\n\n                const territory = _.find(territories, item => ( item.code === v2Avails[row.key].availType.transaction[j].territory[0].country))\n                    || { \"description\": v2Avails[row.key].availType.transaction[j].territory[0].country};\n\n                availData.push({\n                    key: j,\n                    id: v2Avails[row.key].availType.transaction[j].transactionID,\n                    start: moment(v2Avails[row.key].availType.transaction[j].start).tz(\"America/Los_Angeles\").format('MM/DD/YYYY'),\n                    end: moment(v2Avails[row.key].availType.transaction[j].end).tz(\"America/Los_Angeles\").format('MM/DD/YYYY'),\n                    language: language.description ? language.description : '',\n                    media: v2Avails[row.key].availType.transaction[j].licenseType,\n                    category: v2Avails[row.key].availType.transaction[j].licenseRightsDescription,\n                    format: v2Avails[row.key].availType.transaction[j].formatProfile.value,\n                    territory: territory.description,\n                    clientName: v2Avails[row.key].availType.transaction[j].licensee.displayName,\n                    contractId: v2Avails[row.key].availType.transaction[j].contractID,\n                    created: moment(v2Avails.dateCreated).tz(\"America/Los_Angeles\").format('MM/DD/YYYY'),\n                    doNotAvail: yesNoAvail,\n                    title: v2Avails[row.key].titleSearch,\n                    description: v2Avails[row.key].availType.transaction[j].description,\n                    action:\n                        <div>\n                            { yesNoAvail === \"Yes\" ?\n                                <Button\n                                    style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                                    type=\"link\"\n                                    onClick={() => {\n                                        handleCancelDoNotAvail(v2Avails[row.key].transaction[j]);\n                                    }}\n                                    size=\"small\">\n                                    Cancel\n                                </Button> :\n                                <Button\n                                    style={{whiteSpace: \"normal\",height:'auto',marginBottom:'10px'}}\n                                    type=\"link\"\n                                    onClick={() => {\n                                        handleDoNotAvail(v2Avails[row.key].availType.transaction[j],\n                                            v2Avails[row.key].titleSearch,\n                                            v2Avails[row.key].alid, language, territory);\n                                    }}\n                                    size=\"small\">\n                                    Do Not Avail\n                                </Button>\n                            }\n                        </div>\n\n\n                });\n            }\n        }\n        return (\n            <div className=\"internal-data-grid-container\">\n                <Table\n                    columns={expandedColumns}\n                    dataSource={availData}\n                    bordered\n                    scroll={{ x: 1000}}\n                    rowClassName={record => handleRowClassName(record)}\n                />\n            </div> )\n    };\n\n\n    const titleData = [];\n\n        for (let i = 0; i < v2Avails.length; i++) {\n\n            let eidr = \"\";\n            let radarID = \"\";\n            if (v2Avails[i].availType.availType === \"episode\") {\n                eidr = v2Avails[i].availType.asset[0].episodeMetadata.titleEIDRURN;\n            } else if (v2Avails[i].availType.availType === \"season\") {\n                eidr = v2Avails[i].availType.asset[0].seasonMetadata.seasonEIDRURN;\n            } else {\n                eidr = v2Avails[i].availType.asset[0].metadata.titleEIDRURN;\n                radarID =  v2Avails[i].availType.asset[0].any[0].radarProductId\n            }\n\n\n            titleData.push({\n                key: i,\n                id: v2Avails[i].alid,\n                licensor: v2Avails[i].availType.licensor.displayName,\n                title: v2Avails[i].titleSearch,\n                numAvails: v2Avails[i].availType.transaction ? v2Avails[i].availType.transaction.length : 0,\n                workType: v2Avails[i].availType.asset[0].workType,\n                //releaseYear: v2Avails[i].availType.asset[0].metadata.releaseDate,\n                radarId: radarID,\n                eidr: eidr\n\n\n            });\n        }\n\n\n\n    const handleNextPage = () => {\n        if (jobQuery) {\n            dispatch(fetchJobAvailsV2(jobQuery, jobFilters, nextPage));\n        } else {\n            dispatch(fetchAvailsV2(nextPage));\n        }\n\n    };\n\n    const handlePreviousPage = () => {\n        if (jobQuery) {\n            dispatch(fetchJobAvailsV2(jobQuery, jobFilters, previousPage));\n        } else {\n            dispatch(fetchAvailsV2(previousPage));\n        }\n    };\n\n    const handleCancelDoNotAvail = (avail) => {\n        dispatch(cancelDoNotAvail(avail.transactionID, true));\n    }\n\n    const handleDoNotAvail = (avail, title, alid, language, territory) => {\n        dispatch(doNotAvail(avail, title, alid, language, territory));\n    }\n\n    const handleRowClassName = (record) => {\n\n        if (record.doNotAvail === 'Yes')\n            return 'table-row-dark';\n        else\n            return 'table-row-light';\n\n      }\n\n    return (\n        <Form>\n            <Row>\n                <Col md={12}>\n\n                    <div className=\"data-grid-container\">\n                        <Table\n                            columns={columns}\n                            bordered\n                            expandedRowRender={record => expandedRowRender(record)}\n                            dataSource={titleData}\n                            pagination={false}\n                            scroll={{ y: 600}}\n                        />\n                    </div>\n                    <PaginationControls\n                        onPrev={() => handlePreviousPage()}\n                        onNext={() => handleNextPage()}\n                    />\n\n                </Col>\n            </Row>\n        </Form>\n\n    );\n}\n\nexport default TitlesGrid;\n","import React from \"react\";\nimport {Input} from \"reactstrap\";\n\nconst FetchingIndicator = () => (\n    <div className=\"dropdownContainer\">\n        <Input disabled/>\n        <span\n            className=\"spinner-border spinner-border-sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n        />\n    </div>\n)\n\nexport default FetchingIndicator;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    FormText,\n    InputGroup,\n    Input,\n    InputGroupButtonDropdown\n} from 'reactstrap';\nimport FetchingIndicator from \"./FetchingIndicator\";\nimport \"./Dropdown.scss\";\n\nconst modifiers = {\n    setMaxHeight: {\n        enabled: true,\n        order: 890,\n        fn: (data) => {\n            return {\n                ...data,\n                styles: {\n                    ...data.styles,\n                    overflow: 'auto',\n                    maxHeight: 151,\n                    width: '100%',\n                    background: '#FFF'\n                },\n            };\n        },\n    },\n}\nexport default function Dropdown({\n    async,\n    data,\n   //dataTestid,\n    dropdownContainerTestId,\n    dropdownValueTestId,\n    disabled,\n    labelKey,\n    onChange,\n    value,\n    valueKey,\n}) {\n\n    const [label, setLabel] = React.useState(\"\");\n    const [open, setOpen] = React.useState(false);\n    React.useEffect(() => {\n        const index = data.findIndex(item => item[valueKey] === value);\n        const lbl = index > -1 ? data[index][labelKey] : \" \";\n        setLabel(lbl);\n    }, [value, data, labelKey, valueKey])\n\n    const handleClick = val => {\n        if (val !== value) {\n            onChange(val)\n        }\n    }\n\n    if (async && async.isFetching) return <FetchingIndicator />\n\n    return (\n        <InputGroup\n            className=\"dropdownContainer\"\n            data-testid={dropdownContainerTestId} >\n            <Input\n                disabled={disabled}\n                value={label}\n                onClick={() => setOpen(!open)}\n                readOnly\n                //data-testid={dataTestid}\n                data-testid={dropdownValueTestId}\n            />\n            <InputGroupButtonDropdown disabled = {disabled} addonType=\"append\" isOpen={open} toggle={() => setOpen(!open)}>\n                <DropdownToggle outline caret/>\n                <DropdownMenu\n                    modifiers={modifiers}\n                >\n                    {\n                        data.map((item, index) => (\n                            <DropdownItem\n                                key={item[valueKey] || index}\n                                active={item[valueKey] === value}\n                                onClick={() => handleClick(item[valueKey])}>{item[labelKey]}\n                            </DropdownItem>\n                        ))\n                    }\n                </DropdownMenu>\n            </InputGroupButtonDropdown>\n            {async && async.error && <FormText color=\"danger\">{async.error}</FormText>}\n        </InputGroup>\n    )\n}\n\nDropdown.propTypes = {\n    onChange: PropTypes.func.isRequired\n}","import React from \"react\";\nimport Dropdown from \"components/Dropdown\";\nimport {useSelector } from \"react-redux\";\nexport default function FiltersDropdown({onChange, value}) {\n\n    const { availableFilters } = useSelector((s) => s.filters);\n\n    return (\n        <Dropdown\n            data={availableFilters}\n            labelKey=\"displayFieldName\"\n            valueKey=\"queryFieldName\"\n            value={value}\n            onChange={e => onChange(e)}\n        />\n    );\n}\n","import React from \"react\";\nimport Dropdown from \"components/Dropdown\";\nimport {useSelector } from \"react-redux\";\nexport default function QualifiersDropdown({onChange, value, selectedFilter}) {\n\n    const { availableFilters } = useSelector((s) => s.filters);\n    const filterIndex = availableFilters.findIndex(filter => filter.queryFieldName === selectedFilter);\n    const constraints = availableFilters[filterIndex]?.constraints ?? [];\n    return (\n        <Dropdown\n            data={constraints}\n            labelKey=\"displayValue\"\n            valueKey=\"queryValue\"\n            value={value}\n            onChange={e => onChange(e)}\n        />\n    );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Dropdown from \"components/Dropdown\";\nimport { Input } from \"reactstrap\";\nimport Select from 'react-select';\nimport {\n    fetchTitles,\n    clearTitles\n} from \"store/actions\";\n\n\nfunction DynamicSelection(props) {\n\n    const dispatch = useDispatch();\n\n    const { availableFilters } = useSelector((s) => s.filters);\n    const { titles } = useSelector((s) => s.titles);\n    const filterIndex = availableFilters.findIndex(filter => filter.queryFieldName === props.selectedFilter);\n    const dataType = availableFilters[filterIndex]?.dataType ?? \"\";\n    const options = availableFilters[filterIndex]?.options ?? [];\n    let valueSelected = \"\";\n\n    const onTitleOptionChange = (e) => {\n        if (e !=='' && e.length % 3 === 0 )\n            dispatch(fetchTitles(e));\n    }\n\n    const onChangeOption = (e) => {\n        props.onChange(\n            e,\n            dataType\n        );\n\n        dispatch(clearTitles());\n\n    }\n\n    switch (dataType) {\n        case \"TitleSearch\":\n            valueSelected = props.multiValues;\n            return (\n                <Select\n                    isMulti\n                    name=\"filterValue\"\n                    options={titles}\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                    onInputChange={onTitleOptionChange}\n                    onChange={onChangeOption}\n                    value={valueSelected}\n                    getOptionLabel={(data) => {\n                        return data[\"displayValue\"];\n                      }}\n                    getOptionValue={(data) => {\n                    return data[\"queryValue\"];\n                    }}\n                />\n            );\n        case \"String\":\n            valueSelected = props.multiValues;\n            return (\n                <Select\n                    isMulti\n                    name=\"filterValue\"\n                    options={options}\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                    onChange={onChangeOption}\n                    value={valueSelected}\n                    getOptionLabel={(data) => {\n                        return data[\"displayValue\"];\n                      }}\n                    getOptionValue={(data) => {\n                    return data[\"queryValue\"];\n                    }}\n                />\n            );\n        case \"Integer\":\n            valueSelected = props.value.length > 0 ? props.value[0] : \"\";\n            return (\n                <Input\n                    value={valueSelected}\n                    onChange={(e) =>\n                        props.onChange(\n                            e.target.value,\n                            dataType,\n                        )\n                    }\n                />\n            );\n        default:\n            return (\n                <Dropdown\n                    disabled\n                    data={[]}\n                    labelKey=\"name\"\n                    valueKey=\"id\"\n                    value={\"\"}\n                    onChange={() => {}}\n                />\n            );\n    }\n}\n\nexport default DynamicSelection;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"antd\";\nimport FiltersDropdown from \"./FiltersDropdown\";\nimport QualifiersDropdown from \"./QualifiersDropdown\";\nimport DynamicSelection from \"./DynamicSelection\";\nimport { CloseCircleFilled } from \"@ant-design/icons\";\nimport { Row, Col } from \"antd\";\nimport Modal from \"components/Modal\";\nimport \"./TitlesModal.scss\";\nimport {\n    fetchAvailsV2,\n    clearAvailsSearch,\n    addFilter,\n    clearAllFilters,\n    deleteFilter,\n    setFilterOption,\n    setQualifierOption,\n    setQueryValue,\n    setSelectedActiveDelClient\n} from \"store/actions\";\n\nfunction TitlesModal(props) {\n    const dispatch = useDispatch();\n    const { filters } = useSelector((s) => s.filters);\n\n    const handleClickOnAddFilter = async () => {\n        dispatch(addFilter());\n    };\n\n    const handleClickOnClearAllFilters = () => {\n        dispatch(clearAvailsSearch());\n        dispatch(clearAllFilters());\n    };\n\n    const handleClickOnDeleteFilter = (index) => {\n        dispatch(deleteFilter(index));\n    };\n\n    const handleClickonSetFilterOption = (value, index) => {\n        dispatch(setFilterOption(value, index));\n    };\n\n    const handleClickQualifierOption = (value, rowIndex) => {\n        dispatch(setQualifierOption(value, rowIndex));\n    };\n\n    const handleClickQueryValue = (values, rowIndex, type) => {\n        dispatch(setQueryValue(values, rowIndex, type));\n    };\n\n    const handleOk = () => {\n        dispatch(setSelectedActiveDelClient(null));\n        dispatch(fetchAvailsV2(\"\"));\n        props.closeModal();\n    };\n\n    const handleCancel = () => {\n        props.closeModal();\n    };\n\n    return (\n        <Modal\n            title=\"Filter Options\"\n            open={props.isModalVisible}\n            onOk={handleOk}\n            onCancel={handleCancel}\n            toggle={handleCancel}\n        >\n            <div className=\"filtersModal\">\n                <div className=\"filtersModal__clearAll\">\n                    <Button onClick={handleClickOnClearAllFilters} type=\"text\">\n                        Clear all\n                    </Button>\n                </div>\n\n                {filters.map((item, rowIndex) => {\n                    return (\n                        <Row\n                            key={rowIndex}\n                            className=\"filtersModal__Row\"\n                            gutter={[8, 16]}\n                        >\n                            <Col xs={24} md={1} lg={1}>\n                                <div\n                                    className=\"closeIcon\"\n                                    onClick={() => {\n                                        handleClickOnDeleteFilter(rowIndex);\n                                    }}\n                                >\n                                    <CloseCircleFilled />\n                                </div>\n                            </Col>\n                            <Col xs={24} md={7} lg={11}>\n                                <FiltersDropdown\n                                    value={item.filterParam}\n                                    onChange={(value) =>\n                                        handleClickonSetFilterOption(\n                                            value,\n                                            rowIndex\n                                        )\n                                    }\n                                />\n                            </Col>\n                            <Col xs={24} md={8} lg={4}>\n                                <QualifiersDropdown\n                                    selectedFilter={item.filterParam}\n                                    value={item.qualifierValue}\n                                    onChange={(value) =>\n                                        handleClickQualifierOption(value, rowIndex)\n                                    }\n                                />\n                            </Col>\n                            <Col xs={24} md={8} lg={8}>\n                                <DynamicSelection\n                                    selectedFilter={item.filterParam}\n                                    multiValues={item.queryOptions}\n                                    value={item.queryValue}\n                                    onChange={(values,dataType)=> handleClickQueryValue(values, rowIndex, dataType)}\n                                />\n                            </Col>\n                        </Row>\n                    );\n                })}\n                <div className=\"filtersModal__divButton\">\n                    <Button\n                        onClick={handleClickOnAddFilter}\n                        type=\"primary\"\n                        size=\"small\"\n                    >\n                        Add Rule\n                    </Button>\n                </div>\n            </div>\n        </Modal>\n    );\n}\n\nexport default TitlesModal;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport { UncontrolledTooltip } from \"reactstrap\";\nimport { useSelector } from \"react-redux\";\nimport \"./ClientDropdown.scss\";\nexport default function ClientDropdown({ onChange, value, disabled }) {\n  const { activeDelClients } = useSelector((s) => s.metadata);\n  const onChangeOption = (e) => {\n    onChange(e);\n  };\n  return (\n    <>\n      <Select\n        id=\"SelectContainer\"\n        className=\"clientDropdown-container\"\n        classNamePrefix=\"clientDropdown\"\n        isClearable\n        isSearchable\n        onChange={onChangeOption}\n        name=\"clientDropdown\"\n        value={value}\n        isDisabled={disabled}\n        options={activeDelClients}\n        getOptionLabel={(data) => {\n          return data[\"name\"];\n        }}\n        getOptionValue={(data) => {\n          return data[\"id\"];\n        }}\n      />\n      {value ? <UncontrolledTooltip\n        placement=\"top\"\n        target=\"SelectContainer\"\n      >\n        {value.name}\n      </UncontrolledTooltip> : null}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Row, Col, FormGroup } from \"reactstrap\";\nimport TitlesGrid from \"./TitlesGrid\";\nimport { Button, Tag } from \"antd\";\nimport TitlesModal from \"./TitlesModal\";\nimport ClientDropdown from \"./TitlesGrid/ClientDropdown\";\nimport { firstFilter } from \"./Config\";\nimport {\n    clearAvailsSearch,\n    clearAllFilters,\n    sendAdHocDelivery,\n    setSelectedActiveDelClient,\n    fetchJobAvails,\n    fetchFilterOptions\n} from \"store/actions\";\nimport \"./TitlesForm.scss\";\n\nexport default function TitleForm() {\n    const { displayFilters } = useSelector((s) => s.avails);\n    const { selectedActiveDelClient } = useSelector((s) => s.metadata);\n    const dispatch = useDispatch();\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const showModal = () => {\n        dispatch(fetchFilterOptions());\n        setIsModalVisible(true);\n    };\n\n    const closeModal = () => {\n        setIsModalVisible(false);\n    };\n\n    const handleClearFilters = () => {\n        dispatch(clearAvailsSearch());\n        dispatch(setSelectedActiveDelClient(null));\n        dispatch(clearAllFilters(firstFilter));\n    };\n\n    const handleSelectClient = (e) => {\n        dispatch(setSelectedActiveDelClient(e));\n        if(e !== null) {          \n            const clientQuery = e;\n            const filters = formatFilters(clientQuery);\n            dispatch(fetchJobAvails(clientQuery.query.searchCriteria, filters, \"\") );\n        } else {\n            dispatch(clearAvailsSearch());\n            dispatch(setSelectedActiveDelClient(null));\n            dispatch(clearAllFilters(firstFilter));\n        }\n    };\n\n    const formatFilters = (clientQuery) => {\n        const filter = [];\n\n        for (let i = 0; i < clientQuery.query.searchCriteria.length; ++i) {\n\n\n            if (clientQuery.query.searchCriteria[i].contains) {\n\n                var contains = \"\";\n                for (let j = 0; j < clientQuery.query.searchCriteria[i].contains.length; ++j) {\n\n                    if (j === 0)\n                        contains = clientQuery.query.searchCriteria[i].contains[j];\n                    else\n                        contains = contains + \", \" + clientQuery.query.searchCriteria[i].contains[j];\n\n                }\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: contains,\n                    info: \"\",\n                    qualifier: \"contains\"\n                });\n            } else if (clientQuery.query.searchCriteria[i].excludes) {\n\n                var excludes = \"\";\n                for (let j = 0; j < clientQuery.query.searchCriteria[i].excludes.length; ++j) {\n\n                    if (j === 0)\n                        excludes = clientQuery.query.searchCriteria[i].excludes[j];\n                    else\n                        excludes = excludes + \", \" + clientQuery.query.searchCriteria[i].excludes[j];\n\n                }\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: excludes,\n                    info: \"NOT\",\n                    qualifier: \"excludes\"\n                });\n            } else if (clientQuery.query.searchCriteria[i].range.gt) {\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: clientQuery.query.searchCriteria[i].range.gt,\n                    info: \">\",\n                    qualifier: \"gt\"\n                });\n            } else if (clientQuery.query.searchCriteria[i].equals) {\n\n                var equals = \"\";\n                for (let j = 0; j < clientQuery.query.searchCriteria[i].equals.length; ++j) {\n\n                    if (j === 0)\n                        equals = clientQuery.query.searchCriteria[i].equals[j];\n                    else\n                        equals = equals + \", \" + clientQuery.query.searchCriteria[i].equals[j];\n\n                }\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: equals,\n                    info: \"\",\n                    qualifier: \"equals\"\n                });\n            } else if (clientQuery.query.searchCriteria[i].range.gte) {\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: clientQuery.query.searchCriteria[i].range.gte,\n                    info: \">=\",\n                    qualifier: \"gte\"\n                });\n            } else if (clientQuery.query.searchCriteria[i].range.lt) {\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: clientQuery.query.searchCriteria[i].range.lt,\n                    info: \"<\",\n                    qualifier: \"lt\"\n                });\n            } else if (clientQuery.query.searchCriteria[i].range.lte) {\n\n                filter.push({\n                    field: clientQuery.query.searchCriteria[i].field,\n                    value: clientQuery.query.searchCriteria[i].range.lte,\n                    info: \"<=\",\n                    qualifier: \"lte\"\n                });\n            }\n\n        }\n        return filter;\n    }\n\n    const handleSendAdHoc = () => {\n        dispatch(sendAdHocDelivery());\n        navigate(\"/deliveries\");\n    };\n\n    return (\n        <Form>\n            <Row className=\"rowFilters\">\n                <div className=\"clientFilter\">\n                    <span className=\"clientFilter__label\">Saved Searches: </span>\n                    <div className=\"clientFilter__div\">\n                        <ClientDropdown\n                            onChange={e => handleSelectClient(e)}\n                            value={selectedActiveDelClient}\n                        />\n                    </div>\n                </div>\n                <div className=\"buttonsFilter\">\n                    <Button\n                        onClick={showModal}\n                        type=\"primary\"\n                        size=\"medium\"\n                        className=\"buttonsFilter__button\"\n                    >\n                        Filter Options\n                    </Button>\n                    <Button\n                        onClick={handleClearFilters}\n                        type=\"secondary\"\n                        size=\"medium\"\n                        className=\"buttonsFilter__button\"\n                    >\n                        Clear Filters\n                    </Button>\n                    <Button\n                        danger\n                        onClick={handleSendAdHoc}\n                        size=\"medium\"\n                        className=\"buttonsFilter__button\"\n                        disabled={displayFilters.length === 0 ? true : false}\n                    >\n                        Create Ad Hoc Delivery\n                    </Button>\n                </div>\n                <div className=\"AvailFilters\" >\n                    <div>\n                    <span className=\"AvailFilters__label\">Avail Filters: </span>\n                        {displayFilters.length > 0\n                            ? displayFilters.map(({ field, value, info }) => (\n                                  <Tag\n                                      color=\"blue\"\n                                      style={{\n                                          whiteSpace: \"normal\",\n                                          height: \"auto\",\n                                          marginBottom: \"10px\",\n                                      }}\n                                      key={field}\n                                  >\n                                      {field}: {info} {value}\n                                  </Tag>\n                              ))\n                            : \"  None Selected\"}\n                    </div>\n                </div>\n            </Row>\n            <Row className=\"align-items-end\" >\n                <Col md={12}>\n                    <FormGroup>\n                        <TitlesGrid />\n                    </FormGroup>\n                </Col>\n            </Row>\n            <div>\n                <TitlesModal\n                    isModalVisible={isModalVisible}\n                    closeModal={closeModal}\n                />\n            </div>\n        </Form>\n    );\n}\n","import React from \"react\";\nimport {Col, Row} from \"reactstrap\";\nimport Pane from \"components/TabBar/Pane\";\nimport TitlesForm from \"./components/TitlesForm\";\n\n\nexport default function V2Titles() {\n\n\n    return (\n        <Pane tabId={4} >\n            <Row>\n                <Col sm={12}>\n                    <TitlesForm />\n                </Col>\n            </Row>\n\n        </Pane>\n    )\n}\n","import React from \"react\";\nimport {Link} from \"@reach/router\";\nimport {Nav, NavLink as NL} from \"reactstrap\";\n\nimport \"assets/styles/components/_tabBar.scss\";\n\nexport default function TabBar({tabs, tabSelected, children, onTabChange}) {\n    const handleTabChange = index => {\n        onTabChange(index);\n    };\n\n    const NavLink = React.forwardRef((props, ref) => (\n        <NL\n            tag=\"div\"\n            className={props.index === tabSelected ? \"active\" : \"inactive\"}\n        >\n            <Link\n                {...props}\n                getProps={({isPartiallyCurrent}) => {\n                    if (isPartiallyCurrent && props.index !== tabSelected) {\n                        handleTabChange(props.index);\n                    }\n                }}\n            >\n                {props.children}\n            </Link>\n        </NL>\n    ));\n\n    return (\n        <div className=\"col-sm-12\">\n            <Nav tabs>\n                {tabs.map((item, index) => (\n                    <NavLink \n                        key={index} \n                        index={index} \n                        to={item.to}\n                        data-testid={item.dataTestID} >\n                        {item.label}\n                    </NavLink>\n                ))}\n            </Nav>\n            {children}\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Router, navigate } from \"@reach/router\";\nimport { Container, Row, TabContent } from \"reactstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Titles from \"containers/Titles\";\nimport Deliveries from \"containers/Deliveries\";\nimport Clients from \"containers/Clients\";\nimport DNA from \"containers/DNA\";\nimport V2Titles from \"containers/V2Titles\";\nimport { MAIN_TABS } from \"config/constants\";\nimport { MAIN_TABS_V2 } from \"config/constants\";\nimport { current_env } from \"config/constants\";\nimport {\n    changeTab,\n    initialize\n} from \"store/actions\";\n\n\nimport TabBar from \"components/TabBar\";\n\nexport default function Home() {\n\n    const dispatch = useDispatch();\n    const tabSelected = useSelector(s => s.tabs.tab);\n\n    React.useEffect(() => {\n        dispatch(initialize());\n        navigate(\"/titles\");\n    }, [dispatch]);\n\n    return (\n        <main role=\"main\" className=\"d-flex flex-grow-1\">\n            <Container fluid={true} className=\"flex-grow-1\">\n                <Row className=\"p-2 pb-2 mb-0 mt-1\">\n                    <TabBar\n                        tabSelected={tabSelected}\n                        tabs={current_env !== \"\" ? MAIN_TABS_V2 : MAIN_TABS}\n                        onTabChange={e => dispatch(changeTab(e))}\n                        disabled\n                    >\n                        <TabContent className=\"p-3\" activeTab={tabSelected}>\n                            <Router>\n                                <Titles path=\"titles\" />\n                                <Deliveries path=\"deliveries\" />\n                                <Clients path=\"clients\" />\n                                <DNA path=\"dna\" />\n                                <V2Titles path=\"v2\"/>\n                            </Router>\n                        </TabContent>\n                    </TabBar>\n                </Row>\n            </Container>\n        </main>\n    );\n}\n","import {changeTab} from \"store/actions/tabs\";\nimport {login, logout, setAuthToken, setAuthUser} from \"store/actions/auth\";\n\nimport {getCurrentUser, getToken} from \"utils/localStorageService\";\n\nimport {CHANGE_STATUS, STARTING, STARTED} from \"store/constants\";\n\nimport {\n    fetchAvails,\n    clearAvailsSearch,\n    fetchTitleSearch,\n    fetchDeliveries,\n    fetchDeliveryDetails,\n    fetchDeliveryClients,\n    fetchClientDeliveryDetails,\n    fetchClientHistory,\n    sendImmediateDelivery,\n    updateClientDeliveryForm,\n    updateJobDeliveryForm,\n    clearJobDeliveryModal,\n    clearClientDeliveryModal,\n    fetchJobAvails,\n    sendAdHocDelivery,\n    resendDelivery,\n    clearClientDeliveryHistory,\n    cancelDoNotAvail,\n    doNotAvail,\n    fetchDNAList,\n    setClientToggles,\n    fetchAvailsV2,\n    fetchJobAvailsV2,\n    saveEditedAddresses\n} from \"store/actions/avails\";\n\nimport {\n    fetchClientNames,\n    fetchCurrencies,\n    fetchDevices,\n    fetchFormats,\n    fetchLanguages,\n    fetchRightsDescriptions,\n    fetchMedia,\n    fetchReleaseWindows,\n    fetchSubclasses,\n    fetchTerritories,\n    fetchTypes,\n    fetchActiveDeliveryClients,\n    setSelectedActiveDelClient,\n    fetchFilterOptions\n} from \"store/actions/metadata\";\n\nimport {\n    fetchTitles,\n    clearTitles\n} from \"store/actions/titles\";\n\nimport {\n    addFilter,\n    clearAllFilters,\n    updateFilters,\n    deleteFilter,\n    setFilterOption,\n    setQualifierOption,\n    setQueryValue,\n    setAvailableFilters,\n    updateDisplayFilters,\n} from \"store/actions/filters\";\n\nconst initialize = () => async(dispatch) => {\n    dispatch({type: CHANGE_STATUS, status: STARTING});\n    dispatch(changeTab(null));\n    await dispatch(setAuthToken(getToken()));\n    await dispatch(setAuthUser(getCurrentUser()));\n    await dispatch(setAvailableFilters());\n    await dispatch(fetchActiveDeliveryClients());\n    await dispatch(fetchLanguages());\n    await dispatch(fetchTerritories());\n    dispatch({type: CHANGE_STATUS, status: STARTED});\n};\n\nexport {\n    login,\n    logout,\n    setAuthToken,\n    setAuthUser,\n    changeTab,\n    initialize,\n    fetchAvails,\n    fetchClientNames,\n    fetchCurrencies,\n    fetchDevices,\n    fetchFormats,\n    fetchLanguages,\n    fetchRightsDescriptions,\n    fetchMedia,\n    fetchReleaseWindows,\n    fetchSubclasses,\n    fetchTerritories,\n    fetchTypes,\n    fetchTitles,\n    clearAvailsSearch,\n    fetchTitleSearch,\n    fetchDeliveries,\n    fetchDeliveryDetails,\n    fetchDeliveryClients,\n    fetchClientDeliveryDetails,\n    addFilter,\n    clearAllFilters,\n    updateFilters,\n    deleteFilter,\n    setFilterOption,\n    setQualifierOption,\n    setQueryValue,\n    setAvailableFilters,\n    updateDisplayFilters,\n    fetchClientHistory,\n    sendImmediateDelivery,\n    updateClientDeliveryForm,\n    updateJobDeliveryForm,\n    clearJobDeliveryModal,\n    clearClientDeliveryModal,\n    fetchJobAvails,\n    sendAdHocDelivery,\n    fetchActiveDeliveryClients,\n    setSelectedActiveDelClient,\n    fetchFilterOptions,\n    resendDelivery,\n    clearClientDeliveryHistory,\n    cancelDoNotAvail,\n    doNotAvail,\n    fetchDNAList,\n    clearTitles,\n    setClientToggles,\n    fetchAvailsV2,\n    fetchJobAvailsV2,\n    saveEditedAddresses\n};\n","import React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {logout\n} from \"store/actions\";\nimport {getToken, getCurrentUser, resetActiveUser} from \"utils/localStorageService\";\nimport { current_env } from \"config/constants\";\nimport \"./Header.scss\";\n\nconst Header = ({appName = 'Falcon UI'}) => {\n\n    const dispatch = useDispatch();\n    let headerClassName = \"header\";\n\n    const handleLogout = () => {\n        resetActiveUser();\n        dispatch(logout());\n    }\n\n    if (current_env === \"Sandbox\" || current_env === \"QA\") {\n        headerClassName = \"header_nonProd\";\n    }\n\n    return (\n        <div className={headerClassName} >\n            <h1 className=\"appName\"> {appName} {current_env} </h1>\n            {getToken() && <span className=\"logout\" onClick={() => handleLogout()}>Logout, {getCurrentUser()}</span>}\n        </div>\n\n    )\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./Spinner.scss\";\nimport {useSelector} from \"react-redux\";\nimport 'antd/dist/antd.css';\nimport { Spin } from 'antd';\n\nconst Spinner = () => {\n    const {showSpinner} = useSelector(s => s.spinner);\n\n    return (\n        showSpinner ? (\n            <div className=\"overlay\">\n                <div className=\"spinnerContainer\">\n                    <Spin tip=\"Loading...\" size=\"large\" delay={200}/>\n\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport {useSelector} from \"react-redux\";\n\nimport {getCurrentUser, getToken} from \"utils/localStorageService\";\n\nimport Login from \"containers/Login\";\nimport Home from \"containers/Home\"\n\n/* Components for layout */\nimport Header from \"components/Header\";\nimport Spinner from \"components/Spinner\";\n\nconst AuthorizedApp = () => <Home />\n\nconst UnauthorizedApp = () => <Login />\n\nconst App = () => {\n  const {token, user} = useSelector(s => s.auth);\n  return (\n      <div id=\"app\" className=\"d-flex flex-column min-vh-100\">\n        <Spinner/>\n        <Header />\n        { (token && user) || (getCurrentUser() && getToken()) ? <UnauthorizedApp/> : <AuthorizedApp/> }\n        {/*<AuthorizedApp/>*/}\n      </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"store\";\nimport App from \"App\";\nimport \"assets/styles/App.scss\";\nimport \"assets/styles/_base.scss\"\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}